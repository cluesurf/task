import {
  ArchiveFormat,
  AssemblySyntax,
  BackendCompilationOutput,
  CInputFormat,
  CalibreInputFormat,
  CalibreInputProfile,
  CalibreOutputFormat,
  CalibreOutputProfile,
  CallHandle,
  Cipher,
  ClangFormat,
  CliLogFormat,
  CommandKey,
  CommandName,
  ConversionUnitAcre,
  ConversionUnitAmpere,
  ConversionUnitArcminute,
  ConversionUnitArcsecond,
  ConversionUnitBar,
  ConversionUnitBit,
  ConversionUnitByte,
  ConversionUnitCelsius,
  ConversionUnitCentilitre,
  ConversionUnitCentilitrePerSecond,
  ConversionUnitCentimeter,
  ConversionUnitCubicCentimeter,
  ConversionUnitCubicCentimeterPerSecond,
  ConversionUnitCubicFoot,
  ConversionUnitCubicFootPerHour,
  ConversionUnitCubicFootPerMinute,
  ConversionUnitCubicFootPerSecond,
  ConversionUnitCubicInch,
  ConversionUnitCubicInchPerHour,
  ConversionUnitCubicInchPerMinute,
  ConversionUnitCubicInchPerSecond,
  ConversionUnitCubicKilometer,
  ConversionUnitCubicKilometerPerSecond,
  ConversionUnitCubicMeter,
  ConversionUnitCubicMeterPerHour,
  ConversionUnitCubicMeterPerMinute,
  ConversionUnitCubicMeterPerSecond,
  ConversionUnitCubicMillimeter,
  ConversionUnitCubicMillimeterPerSecond,
  ConversionUnitCubicYard,
  ConversionUnitCubicYardPerHour,
  ConversionUnitCubicYardPerMinute,
  ConversionUnitCubicYardPerSecond,
  ConversionUnitCup,
  ConversionUnitCupPerSecond,
  ConversionUnitDay,
  ConversionUnitDecilitre,
  ConversionUnitDecilitrePerSecond,
  ConversionUnitDegree,
  ConversionUnitDegreePerSecond,
  ConversionUnitDozen,
  ConversionUnitEach,
  ConversionUnitFahrenheit,
  ConversionUnitFluidOunce,
  ConversionUnitFluidOuncePerHour,
  ConversionUnitFluidOuncePerMinute,
  ConversionUnitFluidOuncePerSecond,
  ConversionUnitFoot,
  ConversionUnitFootCandle,
  ConversionUnitFootPerSecond,
  ConversionUnitGallon,
  ConversionUnitGallonPerHour,
  ConversionUnitGallonPerMinute,
  ConversionUnitGallonPerSecond,
  ConversionUnitGigabit,
  ConversionUnitGigabyte,
  ConversionUnitGigahertz,
  ConversionUnitGigavoltAmpere,
  ConversionUnitGigavoltAmpereReactive,
  ConversionUnitGigavoltAmpereReactiveHour,
  ConversionUnitGigawatt,
  ConversionUnitGigawattHour,
  ConversionUnitGlas,
  ConversionUnitGradian,
  ConversionUnitGram,
  ConversionUnitHectare,
  ConversionUnitHectopascal,
  ConversionUnitHertz,
  ConversionUnitHour,
  ConversionUnitInch,
  ConversionUnitJoule,
  ConversionUnitKaffekopp,
  ConversionUnitKanna,
  ConversionUnitKelvin,
  ConversionUnitKiloampere,
  ConversionUnitKilobit,
  ConversionUnitKilobyte,
  ConversionUnitKilogram,
  ConversionUnitKilohertz,
  ConversionUnitKilojoule,
  ConversionUnitKilolitre,
  ConversionUnitKilolitrePerHour,
  ConversionUnitKilolitrePerMinute,
  ConversionUnitKilolitrePerSecond,
  ConversionUnitKilometer,
  ConversionUnitKilometrePerHour,
  ConversionUnitKilopascal,
  ConversionUnitKilopoundPerSquareInch,
  ConversionUnitKilovolt,
  ConversionUnitKilovoltAmpere,
  ConversionUnitKilovoltAmpereReactive,
  ConversionUnitKilovoltAmpereReactiveHour,
  ConversionUnitKilowatt,
  ConversionUnitKilowattHour,
  ConversionUnitKnot,
  ConversionUnitLitre,
  ConversionUnitLitrePerHour,
  ConversionUnitLitrePerMinute,
  ConversionUnitLitrePerSecond,
  ConversionUnitLux,
  ConversionUnitMatsked,
  ConversionUnitMegabit,
  ConversionUnitMegabyte,
  ConversionUnitMegahertz,
  ConversionUnitMegapascal,
  ConversionUnitMegavoltAmpere,
  ConversionUnitMegavoltAmpereReactive,
  ConversionUnitMegavoltAmpereReactiveHour,
  ConversionUnitMegawatt,
  ConversionUnitMegawattHour,
  ConversionUnitMeter,
  ConversionUnitMetrePerSecond,
  ConversionUnitMetricTonne,
  ConversionUnitMicrogram,
  ConversionUnitMicrosecond,
  ConversionUnitMile,
  ConversionUnitMilePerHour,
  ConversionUnitMilliampere,
  ConversionUnitMilligram,
  ConversionUnitMillihertz,
  ConversionUnitMillilitre,
  ConversionUnitMillilitrePerSecond,
  ConversionUnitMillimeter,
  ConversionUnitMillisecond,
  ConversionUnitMillivolt,
  ConversionUnitMillivoltAmpere,
  ConversionUnitMillivoltAmpereReactive,
  ConversionUnitMillivoltAmpereReactiveHour,
  ConversionUnitMilliwatt,
  ConversionUnitMilliwattHour,
  ConversionUnitMinute,
  ConversionUnitMinutePerKilometre,
  ConversionUnitMinutePerMile,
  ConversionUnitMonth,
  ConversionUnitNanosecond,
  ConversionUnitOunce,
  ConversionUnitPartPerBillion,
  ConversionUnitPartPerMillion,
  ConversionUnitPartPerQuadrillion,
  ConversionUnitPartPerTrillion,
  ConversionUnitPascal,
  ConversionUnitPint,
  ConversionUnitPintPerHour,
  ConversionUnitPintPerMinute,
  ConversionUnitPintPerSecond,
  ConversionUnitPound,
  ConversionUnitPoundPerSquareInch,
  ConversionUnitQuart,
  ConversionUnitQuartPerSecond,
  ConversionUnitRadian,
  ConversionUnitRadianPerSecond,
  ConversionUnitRankine,
  ConversionUnitRotationPerMinute,
  ConversionUnitSecond,
  ConversionUnitSecondPerFoot,
  ConversionUnitSecondPerMetre,
  ConversionUnitSquareCentimeter,
  ConversionUnitSquareFoot,
  ConversionUnitSquareInch,
  ConversionUnitSquareKilometer,
  ConversionUnitSquareMeter,
  ConversionUnitSquareMile,
  ConversionUnitSquareMillimeter,
  ConversionUnitSquareYard,
  ConversionUnitTablespoon,
  ConversionUnitTablespoonPerSecond,
  ConversionUnitTeaspoon,
  ConversionUnitTeaspoonPerSecond,
  ConversionUnitTerabit,
  ConversionUnitTerabyte,
  ConversionUnitTerahertz,
  ConversionUnitTesked,
  ConversionUnitTon,
  ConversionUnitTorr,
  ConversionUnitUsSurveyFoot,
  ConversionUnitVolt,
  ConversionUnitVoltAmpere,
  ConversionUnitVoltAmpereReactive,
  ConversionUnitVoltAmpereReactiveHour,
  ConversionUnitWatt,
  ConversionUnitWattHour,
  ConversionUnitWeek,
  ConversionUnitYard,
  ConversionUnitYear,
  ConvertLatexToPngInputFormat,
  ConvertLatexToPngOutputFormat,
  CppInputFormat,
  EnscriptInputFormat,
  EnscriptOutputFormat,
  FfmpegCodecAudio,
  FfmpegCodecSubtitle,
  FfmpegCodecVideo,
  FfmpegDecoderAudio,
  FfmpegDecoderSubtitle,
  FfmpegDecoderVideo,
  FfmpegEncoderAudio,
  FfmpegEncoderSubtitle,
  FfmpegEncoderVideo,
  FfmpegFormat,
  FfmpegStrictOption,
  FileReaderEncoding,
  Flip,
  FontFormat,
  ForgeMessageDigest,
  FormatCodeFormat,
  GifsicleOptimizeOption,
  ImageMagickChannel,
  ImageMagickColorSpace,
  ImageMagickCompression,
  ImageMagickFormat,
  ImageMagickGravity,
  ImageMagickInputFormat,
  ImageMagickOutputFormat,
  InkscapeExportFormat,
  InkscapeImportFormat,
  LibreOfficeInputFormat,
  LibreOfficeOutputFormat,
  LlvmArchitecture,
  LlvmCpu,
  LlvmFeature,
  LlvmOptimizationLevel,
  ObjdumpDemangleStyle,
  ObjdumpHideOption,
  ObjdumpShowOption,
  PandocInputFormat,
  PandocOutputFormat,
  PatoolFormat,
  PdfLatexInputFormat,
  PdfLatexOutputFormat,
  PleasantAdjective,
  PleasantNoun,
  PrettierArrowParensOption,
  PrettierEndOfLineOption,
  PrettierHtmlWhitespaceSensitivityOption,
  PrettierPlugin,
  PrettierProseWrapOption,
  PrettierTypescriptTrailingCommaOption,
  PrettierXmlQuoteAttributesOption,
  PrettierXmlWhitespaceSensitivityOption,
  PuppeteerInputFormat,
  PuppeteerLifeCycleEvent,
  PuppeteerLifeCycleEventContent,
  PuppeteerMarkdownInputFormat,
  PuppeteerOutputFormat,
  PuppeteerTxtInputFormat,
  QrCodeErrorCorrectionLevel,
  QrCodeFormat,
  RustCompilerTarget,
  RustInputFormat,
  RustOutputFormat,
  SharedGematriaLanguage,
  SwiftInputFormat,
  SymbolSet,
  SymbolSetContent,
  Task,
  TimeZone,
  TimeZoneAbbreviation,
  TimeZoneAbbreviationContent,
  TimeZoneContent,
  TimeZoneLocation,
  UnarchiverFormat,
  Unit,
  UnitKey,
  WastInputFormat,
  WastOutputFormat,
  WordSet,
  WordSetContent,
} from '~/code/type/shared/base/cast'

export const ARCHIVE_FORMAT: ReadonlyArray<ArchiveFormat> = [
  'zip',
  'rar',
  '7z',
  'tar',
  'gzip',
  'bzip2',
]
export const ASSEMBLY_SYNTAX: ReadonlyArray<AssemblySyntax> = [
  'intel',
  'att',
]
export const BACKEND_COMPILATION_OUTPUT: ReadonlyArray<BackendCompilationOutput> =
  ['assembly', 'llvm-ir', 'llvm-bitcode', 'binary']
export const C_INPUT_FORMAT: ReadonlyArray<CInputFormat> = ['c']
export const CALIBRE_INPUT_FORMAT: ReadonlyArray<CalibreInputFormat> = [
  'azw4',
  'chm',
  'comic',
  'djvu',
  'docx',
  'epub',
  'fb2',
  'htlz',
  'html',
  'lit',
  'lrf',
  'mobi',
  'odt',
  'pdb',
  'pdf',
  'pml',
  'rb',
  'rtf',
  'recipe',
  'snb',
  'tcr',
  'txt',
]
export const CALIBRE_INPUT_PROFILE: ReadonlyArray<CalibreInputProfile> =
  [
    'cybookg3',
    'cybook_opus',
    'default',
    'hanlinv3',
    'hanlinv5',
    'illiad',
    'irexdr1000',
    'irexdr800',
    'kindle',
    'msreader',
    'mobipocket',
    'nook',
    'sony',
    'sony300',
    'sony900',
  ]
export const CALIBRE_OUTPUT_FORMAT: ReadonlyArray<CalibreOutputFormat> =
  [
    'azw3',
    'docx',
    'epub',
    'fb2',
    'html',
    'htmlz',
    'lit',
    'lrf',
    'mobi',
    'oeb',
    'pdb',
    'pdf',
    'pml',
    'rb',
    'rtf',
    'snb',
    'tcr',
    'txt',
    'txtz',
  ]
export const CALIBRE_OUTPUT_PROFILE: ReadonlyArray<CalibreOutputProfile> =
  [
    'cybookg3',
    'cybook_opus',
    'default',
    'generic_eink',
    'generic_eink_hd',
    'generic_eink_large',
    'hanlinv3',
    'hanlinv5',
    'illiad',
    'ipad',
    'ipad3',
    'irexdr1000',
    'irexdr800',
    'jetbook5',
    'kindle',
    'kindle_dx',
    'kindle_fire',
    'kindle_oasis',
    'kindle_pw',
    'kindle_pw3',
    'kindle_voyage',
    'kobo',
    'msreader',
    'mobipocket',
    'nook',
    'nook_color',
    'nook_hd_plus',
    'pocketbook_900',
    'pocketbook_pro_912',
    'galaxy',
    'sony',
    'sony300',
    'sony900',
    'sony-landscape',
    'sonyt3',
    'tablet',
  ]
export const CALL_HANDLE: ReadonlyArray<CallHandle> = [
  'external',
  'remote',
  'client',
]
export const CIPHER: ReadonlyArray<Cipher> = [
  'aes_ecb',
  'aes_cbc',
  'aes_cfb',
  'aes_ofb',
  'aes_ctr',
  'aes_gcm',
  '3_des_ecb',
  '3_des_cbc',
  'des_ecb',
  'des_cbc',
]
export const CLANG_FORMAT: ReadonlyArray<ClangFormat> = ['c', 'cpp']
export const CLI_LOG_FORMAT: ReadonlyArray<CliLogFormat> = [
  'plain',
  'json',
  'pretty',
]
export const COMMAND_KEY: ReadonlyArray<CommandKey> = [
  'ffmpeg',
  'black',
  'asmfmt',
  'ktfmt',
  'convert',
  'pandoc',
  'java',
  'clang++',
  'clang',
  'llc',
  'clang-format',
  'swift-format',
  'swiftc',
  'fontforge',
  'mogrify',
  '7z',
  'inkscape',
  'unar',
  'rar',
  'pdflatex',
  'objdump',
  'rustc',
  'rustfmt',
  'rubocop',
  'shfmt',
  'zip',
  'tar',
  'exiftool',
  'ebook-convert',
  'soffice',
  'jupyter',
  'docx2pdf',
  'unoconv',
  'gifsicle',
  'patool',
  'identify',
  'perltidy',
  'pdfcrop',
  'enscript',
  'ps2pdf',
]
export const COMMAND_NAME: ReadonlyArray<CommandName> = [
  'ffmpeg',
  'black',
  'asmfmt',
  'ktfmt',
  'convert',
  'pandoc',
  'java',
  'clang++',
  'clang',
  'llc',
  'clang-format',
  'swift-format',
  'swiftc',
  'fontforge',
  'mogrify',
  '7z',
  'inkscape',
  'unar',
  'rar',
  'pdflatex',
  'objdump',
  'rustc',
  'rustfmt',
  'rubocop',
  'shfmt',
  'zip',
  'tar',
  'exiftool',
  'ebook-convert',
  'soffice',
  'jupyter',
  'docx2pdf',
  'unoconv',
  'gifsicle',
  'patool',
  'identify',
  'perltidy',
  'pdfcrop',
  'enscript',
  'ps2pdf',
]
export const CONVERSION_UNIT_ACRE: ReadonlyArray<ConversionUnitAcre> = [
  'square-millimeter',
  'square-centimeter',
  'square-meter',
  'hectare',
  'square-kilometer',
  'square-inch',
  'square-yard',
  'square-foot',
  'acre',
  'square-mile',
]
export const CONVERSION_UNIT_AMPERE: ReadonlyArray<ConversionUnitAmpere> =
  ['ampere', 'milliampere', 'kiloampere']
export const CONVERSION_UNIT_ARCMINUTE: ReadonlyArray<ConversionUnitArcminute> =
  ['radian', 'degree', 'gradian', 'arcminute', 'arcsecond']
export const CONVERSION_UNIT_ARCSECOND: ReadonlyArray<ConversionUnitArcsecond> =
  ['radian', 'degree', 'gradian', 'arcminute', 'arcsecond']
export const CONVERSION_UNIT_BAR: ReadonlyArray<ConversionUnitBar> = [
  'pascal',
  'kilopascal',
  'megapascal',
  'hectopascal',
  'bar',
  'torr',
  'pound-per-square-inch',
  'kilopound-per-square-inch',
]
export const CONVERSION_UNIT_BIT: ReadonlyArray<ConversionUnitBit> = [
  'bit',
  'kilobit',
  'megabit',
  'gigabit',
  'terabit',
  'byte',
  'kilobyte',
  'megabyte',
  'gigabyte',
  'terabyte',
]
export const CONVERSION_UNIT_BYTE: ReadonlyArray<ConversionUnitByte> = [
  'bit',
  'kilobit',
  'megabit',
  'gigabit',
  'terabit',
  'byte',
  'kilobyte',
  'megabyte',
  'gigabyte',
  'terabyte',
]
export const CONVERSION_UNIT_CELSIUS: ReadonlyArray<ConversionUnitCelsius> =
  ['celsius', 'kelvin', 'fahrenheit', 'rankine']
export const CONVERSION_UNIT_CENTILITRE: ReadonlyArray<ConversionUnitCentilitre> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_CENTILITRE_PER_SECOND: ReadonlyArray<ConversionUnitCentilitrePerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CENTIMETER: ReadonlyArray<ConversionUnitCentimeter> =
  [
    'millimeter',
    'centimeter',
    'meter',
    'kilometer',
    'inch',
    'yard',
    'us-survey-foot',
    'foot',
    'mile',
  ]
export const CONVERSION_UNIT_CUBIC_CENTIMETER: ReadonlyArray<ConversionUnitCubicCentimeter> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_CUBIC_CENTIMETER_PER_SECOND: ReadonlyArray<ConversionUnitCubicCentimeterPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_FOOT: ReadonlyArray<ConversionUnitCubicFoot> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_CUBIC_FOOT_PER_HOUR: ReadonlyArray<ConversionUnitCubicFootPerHour> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_FOOT_PER_MINUTE: ReadonlyArray<ConversionUnitCubicFootPerMinute> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_FOOT_PER_SECOND: ReadonlyArray<ConversionUnitCubicFootPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_INCH: ReadonlyArray<ConversionUnitCubicInch> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_CUBIC_INCH_PER_HOUR: ReadonlyArray<ConversionUnitCubicInchPerHour> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_INCH_PER_MINUTE: ReadonlyArray<ConversionUnitCubicInchPerMinute> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_INCH_PER_SECOND: ReadonlyArray<ConversionUnitCubicInchPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_KILOMETER: ReadonlyArray<ConversionUnitCubicKilometer> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_CUBIC_KILOMETER_PER_SECOND: ReadonlyArray<ConversionUnitCubicKilometerPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_METER: ReadonlyArray<ConversionUnitCubicMeter> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_CUBIC_METER_PER_HOUR: ReadonlyArray<ConversionUnitCubicMeterPerHour> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_METER_PER_MINUTE: ReadonlyArray<ConversionUnitCubicMeterPerMinute> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_METER_PER_SECOND: ReadonlyArray<ConversionUnitCubicMeterPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_MILLIMETER: ReadonlyArray<ConversionUnitCubicMillimeter> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_CUBIC_MILLIMETER_PER_SECOND: ReadonlyArray<ConversionUnitCubicMillimeterPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_YARD: ReadonlyArray<ConversionUnitCubicYard> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_CUBIC_YARD_PER_HOUR: ReadonlyArray<ConversionUnitCubicYardPerHour> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_YARD_PER_MINUTE: ReadonlyArray<ConversionUnitCubicYardPerMinute> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUBIC_YARD_PER_SECOND: ReadonlyArray<ConversionUnitCubicYardPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_CUP: ReadonlyArray<ConversionUnitCup> = [
  'cubic-millimeter',
  'cubic-centimeter',
  'millilitre',
  'centilitre',
  'decilitre',
  'litre',
  'kilolitre',
  'cubic-meter',
  'cubic-kilometer',
  'tesked',
  'matsked',
  'kaffekopp',
  'glas',
  'kanna',
  'teaspoon',
  'tablespoon',
  'cubic-inch',
  'fluid-ounce',
  'cup',
  'pint',
  'quart',
  'gallon',
  'cubic-foot',
  'cubic-yard',
]
export const CONVERSION_UNIT_CUP_PER_SECOND: ReadonlyArray<ConversionUnitCupPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_DAY: ReadonlyArray<ConversionUnitDay> = [
  'nanosecond',
  'microsecond',
  'millisecond',
  'second',
  'minute',
  'hour',
  'day',
  'week',
  'month',
  'year',
]
export const CONVERSION_UNIT_DECILITRE: ReadonlyArray<ConversionUnitDecilitre> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_DECILITRE_PER_SECOND: ReadonlyArray<ConversionUnitDecilitrePerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_DEGREE: ReadonlyArray<ConversionUnitDegree> =
  ['radian', 'degree', 'gradian', 'arcminute', 'arcsecond']
export const CONVERSION_UNIT_DEGREE_PER_SECOND: ReadonlyArray<ConversionUnitDegreePerSecond> =
  [
    'millihertz',
    'hertz',
    'kilohertz',
    'megahertz',
    'gigahertz',
    'terahertz',
    'rotation-per-minute',
    'degree-per-second',
    'radian-per-second',
  ]
export const CONVERSION_UNIT_DOZEN: ReadonlyArray<ConversionUnitDozen> =
  ['each', 'dozen']
export const CONVERSION_UNIT_EACH: ReadonlyArray<ConversionUnitEach> = [
  'each',
  'dozen',
]
export const CONVERSION_UNIT_FAHRENHEIT: ReadonlyArray<ConversionUnitFahrenheit> =
  ['celsius', 'kelvin', 'fahrenheit', 'rankine']
export const CONVERSION_UNIT_FLUID_OUNCE: ReadonlyArray<ConversionUnitFluidOunce> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_FLUID_OUNCE_PER_HOUR: ReadonlyArray<ConversionUnitFluidOuncePerHour> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_FLUID_OUNCE_PER_MINUTE: ReadonlyArray<ConversionUnitFluidOuncePerMinute> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_FLUID_OUNCE_PER_SECOND: ReadonlyArray<ConversionUnitFluidOuncePerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_FOOT: ReadonlyArray<ConversionUnitFoot> = [
  'millimeter',
  'centimeter',
  'meter',
  'kilometer',
  'inch',
  'yard',
  'us-survey-foot',
  'foot',
  'mile',
]
export const CONVERSION_UNIT_FOOT_CANDLE: ReadonlyArray<ConversionUnitFootCandle> =
  ['lux', 'foot-candle']
export const CONVERSION_UNIT_FOOT_PER_SECOND: ReadonlyArray<ConversionUnitFootPerSecond> =
  [
    'metre-per-second',
    'kilometre-per-hour',
    'mile-per-hour',
    'knot',
    'foot-per-second',
  ]
export const CONVERSION_UNIT_GALLON: ReadonlyArray<ConversionUnitGallon> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_GALLON_PER_HOUR: ReadonlyArray<ConversionUnitGallonPerHour> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_GALLON_PER_MINUTE: ReadonlyArray<ConversionUnitGallonPerMinute> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_GALLON_PER_SECOND: ReadonlyArray<ConversionUnitGallonPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_GIGABIT: ReadonlyArray<ConversionUnitGigabit> =
  [
    'bit',
    'kilobit',
    'megabit',
    'gigabit',
    'terabit',
    'byte',
    'kilobyte',
    'megabyte',
    'gigabyte',
    'terabyte',
  ]
export const CONVERSION_UNIT_GIGABYTE: ReadonlyArray<ConversionUnitGigabyte> =
  [
    'bit',
    'kilobit',
    'megabit',
    'gigabit',
    'terabit',
    'byte',
    'kilobyte',
    'megabyte',
    'gigabyte',
    'terabyte',
  ]
export const CONVERSION_UNIT_GIGAHERTZ: ReadonlyArray<ConversionUnitGigahertz> =
  [
    'millihertz',
    'hertz',
    'kilohertz',
    'megahertz',
    'gigahertz',
    'terahertz',
    'rotation-per-minute',
    'degree-per-second',
    'radian-per-second',
  ]
export const CONVERSION_UNIT_GIGAVOLT_AMPERE: ReadonlyArray<ConversionUnitGigavoltAmpere> =
  [
    'volt-ampere',
    'millivolt-ampere',
    'kilovolt-ampere',
    'megavolt-ampere',
    'gigavolt-ampere',
  ]
export const CONVERSION_UNIT_GIGAVOLT_AMPERE_REACTIVE: ReadonlyArray<ConversionUnitGigavoltAmpereReactive> =
  [
    'volt-ampere-reactive',
    'millivolt-ampere-reactive',
    'kilovolt-ampere-reactive',
    'megavolt-ampere-reactive',
    'gigavolt-ampere-reactive',
  ]
export const CONVERSION_UNIT_GIGAVOLT_AMPERE_REACTIVE_HOUR: ReadonlyArray<ConversionUnitGigavoltAmpereReactiveHour> =
  [
    'volt-ampere-reactive-hour',
    'millivolt-ampere-reactive-hour',
    'kilovolt-ampere-reactive-hour',
    'megavolt-ampere-reactive-hour',
    'gigavolt-ampere-reactive-hour',
  ]
export const CONVERSION_UNIT_GIGAWATT: ReadonlyArray<ConversionUnitGigawatt> =
  ['watt', 'milliwatt', 'kilowatt', 'megawatt', 'gigawatt']
export const CONVERSION_UNIT_GIGAWATT_HOUR: ReadonlyArray<ConversionUnitGigawattHour> =
  [
    'watt-hour',
    'milliwatt-hour',
    'kilowatt-hour',
    'megawatt-hour',
    'gigawatt-hour',
    'joule',
    'kilojoule',
  ]
export const CONVERSION_UNIT_GLAS: ReadonlyArray<ConversionUnitGlas> = [
  'cubic-millimeter',
  'cubic-centimeter',
  'millilitre',
  'centilitre',
  'decilitre',
  'litre',
  'kilolitre',
  'cubic-meter',
  'cubic-kilometer',
  'tesked',
  'matsked',
  'kaffekopp',
  'glas',
  'kanna',
  'teaspoon',
  'tablespoon',
  'cubic-inch',
  'fluid-ounce',
  'cup',
  'pint',
  'quart',
  'gallon',
  'cubic-foot',
  'cubic-yard',
]
export const CONVERSION_UNIT_GRADIAN: ReadonlyArray<ConversionUnitGradian> =
  ['radian', 'degree', 'gradian', 'arcminute', 'arcsecond']
export const CONVERSION_UNIT_GRAM: ReadonlyArray<ConversionUnitGram> = [
  'microgram',
  'milligram',
  'gram',
  'kilogram',
  'metric-tonne',
  'ounce',
  'pound',
  'ton',
]
export const CONVERSION_UNIT_HECTARE: ReadonlyArray<ConversionUnitHectare> =
  [
    'square-millimeter',
    'square-centimeter',
    'square-meter',
    'hectare',
    'square-kilometer',
    'square-inch',
    'square-yard',
    'square-foot',
    'acre',
    'square-mile',
  ]
export const CONVERSION_UNIT_HECTOPASCAL: ReadonlyArray<ConversionUnitHectopascal> =
  [
    'pascal',
    'kilopascal',
    'megapascal',
    'hectopascal',
    'bar',
    'torr',
    'pound-per-square-inch',
    'kilopound-per-square-inch',
  ]
export const CONVERSION_UNIT_HERTZ: ReadonlyArray<ConversionUnitHertz> =
  [
    'millihertz',
    'hertz',
    'kilohertz',
    'megahertz',
    'gigahertz',
    'terahertz',
    'rotation-per-minute',
    'degree-per-second',
    'radian-per-second',
  ]
export const CONVERSION_UNIT_HOUR: ReadonlyArray<ConversionUnitHour> = [
  'nanosecond',
  'microsecond',
  'millisecond',
  'second',
  'minute',
  'hour',
  'day',
  'week',
  'month',
  'year',
]
export const CONVERSION_UNIT_INCH: ReadonlyArray<ConversionUnitInch> = [
  'millimeter',
  'centimeter',
  'meter',
  'kilometer',
  'inch',
  'yard',
  'us-survey-foot',
  'foot',
  'mile',
]
export const CONVERSION_UNIT_JOULE: ReadonlyArray<ConversionUnitJoule> =
  [
    'watt-hour',
    'milliwatt-hour',
    'kilowatt-hour',
    'megawatt-hour',
    'gigawatt-hour',
    'joule',
    'kilojoule',
  ]
export const CONVERSION_UNIT_KAFFEKOPP: ReadonlyArray<ConversionUnitKaffekopp> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_KANNA: ReadonlyArray<ConversionUnitKanna> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_KELVIN: ReadonlyArray<ConversionUnitKelvin> =
  ['celsius', 'kelvin', 'fahrenheit', 'rankine']
export const CONVERSION_UNIT_KILOAMPERE: ReadonlyArray<ConversionUnitKiloampere> =
  ['ampere', 'milliampere', 'kiloampere']
export const CONVERSION_UNIT_KILOBIT: ReadonlyArray<ConversionUnitKilobit> =
  [
    'bit',
    'kilobit',
    'megabit',
    'gigabit',
    'terabit',
    'byte',
    'kilobyte',
    'megabyte',
    'gigabyte',
    'terabyte',
  ]
export const CONVERSION_UNIT_KILOBYTE: ReadonlyArray<ConversionUnitKilobyte> =
  [
    'bit',
    'kilobit',
    'megabit',
    'gigabit',
    'terabit',
    'byte',
    'kilobyte',
    'megabyte',
    'gigabyte',
    'terabyte',
  ]
export const CONVERSION_UNIT_KILOGRAM: ReadonlyArray<ConversionUnitKilogram> =
  [
    'microgram',
    'milligram',
    'gram',
    'kilogram',
    'metric-tonne',
    'ounce',
    'pound',
    'ton',
  ]
export const CONVERSION_UNIT_KILOHERTZ: ReadonlyArray<ConversionUnitKilohertz> =
  [
    'millihertz',
    'hertz',
    'kilohertz',
    'megahertz',
    'gigahertz',
    'terahertz',
    'rotation-per-minute',
    'degree-per-second',
    'radian-per-second',
  ]
export const CONVERSION_UNIT_KILOJOULE: ReadonlyArray<ConversionUnitKilojoule> =
  [
    'watt-hour',
    'milliwatt-hour',
    'kilowatt-hour',
    'megawatt-hour',
    'gigawatt-hour',
    'joule',
    'kilojoule',
  ]
export const CONVERSION_UNIT_KILOLITRE: ReadonlyArray<ConversionUnitKilolitre> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_KILOLITRE_PER_HOUR: ReadonlyArray<ConversionUnitKilolitrePerHour> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_KILOLITRE_PER_MINUTE: ReadonlyArray<ConversionUnitKilolitrePerMinute> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_KILOLITRE_PER_SECOND: ReadonlyArray<ConversionUnitKilolitrePerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_KILOMETER: ReadonlyArray<ConversionUnitKilometer> =
  [
    'millimeter',
    'centimeter',
    'meter',
    'kilometer',
    'inch',
    'yard',
    'us-survey-foot',
    'foot',
    'mile',
  ]
export const CONVERSION_UNIT_KILOMETRE_PER_HOUR: ReadonlyArray<ConversionUnitKilometrePerHour> =
  [
    'metre-per-second',
    'kilometre-per-hour',
    'mile-per-hour',
    'knot',
    'foot-per-second',
  ]
export const CONVERSION_UNIT_KILOPASCAL: ReadonlyArray<ConversionUnitKilopascal> =
  [
    'pascal',
    'kilopascal',
    'megapascal',
    'hectopascal',
    'bar',
    'torr',
    'pound-per-square-inch',
    'kilopound-per-square-inch',
  ]
export const CONVERSION_UNIT_KILOPOUND_PER_SQUARE_INCH: ReadonlyArray<ConversionUnitKilopoundPerSquareInch> =
  [
    'pascal',
    'kilopascal',
    'megapascal',
    'hectopascal',
    'bar',
    'torr',
    'pound-per-square-inch',
    'kilopound-per-square-inch',
  ]
export const CONVERSION_UNIT_KILOVOLT: ReadonlyArray<ConversionUnitKilovolt> =
  ['volt', 'millivolt', 'kilovolt']
export const CONVERSION_UNIT_KILOVOLT_AMPERE: ReadonlyArray<ConversionUnitKilovoltAmpere> =
  [
    'volt-ampere',
    'millivolt-ampere',
    'kilovolt-ampere',
    'megavolt-ampere',
    'gigavolt-ampere',
  ]
export const CONVERSION_UNIT_KILOVOLT_AMPERE_REACTIVE: ReadonlyArray<ConversionUnitKilovoltAmpereReactive> =
  [
    'volt-ampere-reactive',
    'millivolt-ampere-reactive',
    'kilovolt-ampere-reactive',
    'megavolt-ampere-reactive',
    'gigavolt-ampere-reactive',
  ]
export const CONVERSION_UNIT_KILOVOLT_AMPERE_REACTIVE_HOUR: ReadonlyArray<ConversionUnitKilovoltAmpereReactiveHour> =
  [
    'volt-ampere-reactive-hour',
    'millivolt-ampere-reactive-hour',
    'kilovolt-ampere-reactive-hour',
    'megavolt-ampere-reactive-hour',
    'gigavolt-ampere-reactive-hour',
  ]
export const CONVERSION_UNIT_KILOWATT: ReadonlyArray<ConversionUnitKilowatt> =
  ['watt', 'milliwatt', 'kilowatt', 'megawatt', 'gigawatt']
export const CONVERSION_UNIT_KILOWATT_HOUR: ReadonlyArray<ConversionUnitKilowattHour> =
  [
    'watt-hour',
    'milliwatt-hour',
    'kilowatt-hour',
    'megawatt-hour',
    'gigawatt-hour',
    'joule',
    'kilojoule',
  ]
export const CONVERSION_UNIT_KNOT: ReadonlyArray<ConversionUnitKnot> = [
  'metre-per-second',
  'kilometre-per-hour',
  'mile-per-hour',
  'knot',
  'foot-per-second',
]
export const CONVERSION_UNIT_LITRE: ReadonlyArray<ConversionUnitLitre> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_LITRE_PER_HOUR: ReadonlyArray<ConversionUnitLitrePerHour> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_LITRE_PER_MINUTE: ReadonlyArray<ConversionUnitLitrePerMinute> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_LITRE_PER_SECOND: ReadonlyArray<ConversionUnitLitrePerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_LUX: ReadonlyArray<ConversionUnitLux> = [
  'lux',
  'foot-candle',
]
export const CONVERSION_UNIT_MATSKED: ReadonlyArray<ConversionUnitMatsked> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_MEGABIT: ReadonlyArray<ConversionUnitMegabit> =
  [
    'bit',
    'kilobit',
    'megabit',
    'gigabit',
    'terabit',
    'byte',
    'kilobyte',
    'megabyte',
    'gigabyte',
    'terabyte',
  ]
export const CONVERSION_UNIT_MEGABYTE: ReadonlyArray<ConversionUnitMegabyte> =
  [
    'bit',
    'kilobit',
    'megabit',
    'gigabit',
    'terabit',
    'byte',
    'kilobyte',
    'megabyte',
    'gigabyte',
    'terabyte',
  ]
export const CONVERSION_UNIT_MEGAHERTZ: ReadonlyArray<ConversionUnitMegahertz> =
  [
    'millihertz',
    'hertz',
    'kilohertz',
    'megahertz',
    'gigahertz',
    'terahertz',
    'rotation-per-minute',
    'degree-per-second',
    'radian-per-second',
  ]
export const CONVERSION_UNIT_MEGAPASCAL: ReadonlyArray<ConversionUnitMegapascal> =
  [
    'pascal',
    'kilopascal',
    'megapascal',
    'hectopascal',
    'bar',
    'torr',
    'pound-per-square-inch',
    'kilopound-per-square-inch',
  ]
export const CONVERSION_UNIT_MEGAVOLT_AMPERE: ReadonlyArray<ConversionUnitMegavoltAmpere> =
  [
    'volt-ampere',
    'millivolt-ampere',
    'kilovolt-ampere',
    'megavolt-ampere',
    'gigavolt-ampere',
  ]
export const CONVERSION_UNIT_MEGAVOLT_AMPERE_REACTIVE: ReadonlyArray<ConversionUnitMegavoltAmpereReactive> =
  [
    'volt-ampere-reactive',
    'millivolt-ampere-reactive',
    'kilovolt-ampere-reactive',
    'megavolt-ampere-reactive',
    'gigavolt-ampere-reactive',
  ]
export const CONVERSION_UNIT_MEGAVOLT_AMPERE_REACTIVE_HOUR: ReadonlyArray<ConversionUnitMegavoltAmpereReactiveHour> =
  [
    'volt-ampere-reactive-hour',
    'millivolt-ampere-reactive-hour',
    'kilovolt-ampere-reactive-hour',
    'megavolt-ampere-reactive-hour',
    'gigavolt-ampere-reactive-hour',
  ]
export const CONVERSION_UNIT_MEGAWATT: ReadonlyArray<ConversionUnitMegawatt> =
  ['watt', 'milliwatt', 'kilowatt', 'megawatt', 'gigawatt']
export const CONVERSION_UNIT_MEGAWATT_HOUR: ReadonlyArray<ConversionUnitMegawattHour> =
  [
    'watt-hour',
    'milliwatt-hour',
    'kilowatt-hour',
    'megawatt-hour',
    'gigawatt-hour',
    'joule',
    'kilojoule',
  ]
export const CONVERSION_UNIT_METER: ReadonlyArray<ConversionUnitMeter> =
  [
    'millimeter',
    'centimeter',
    'meter',
    'kilometer',
    'inch',
    'yard',
    'us-survey-foot',
    'foot',
    'mile',
  ]
export const CONVERSION_UNIT_METRE_PER_SECOND: ReadonlyArray<ConversionUnitMetrePerSecond> =
  [
    'metre-per-second',
    'kilometre-per-hour',
    'mile-per-hour',
    'knot',
    'foot-per-second',
  ]
export const CONVERSION_UNIT_METRIC_TONNE: ReadonlyArray<ConversionUnitMetricTonne> =
  [
    'microgram',
    'milligram',
    'gram',
    'kilogram',
    'metric-tonne',
    'ounce',
    'pound',
    'ton',
  ]
export const CONVERSION_UNIT_MICROGRAM: ReadonlyArray<ConversionUnitMicrogram> =
  [
    'microgram',
    'milligram',
    'gram',
    'kilogram',
    'metric-tonne',
    'ounce',
    'pound',
    'ton',
  ]
export const CONVERSION_UNIT_MICROSECOND: ReadonlyArray<ConversionUnitMicrosecond> =
  [
    'nanosecond',
    'microsecond',
    'millisecond',
    'second',
    'minute',
    'hour',
    'day',
    'week',
    'month',
    'year',
  ]
export const CONVERSION_UNIT_MILE: ReadonlyArray<ConversionUnitMile> = [
  'millimeter',
  'centimeter',
  'meter',
  'kilometer',
  'inch',
  'yard',
  'us-survey-foot',
  'foot',
  'mile',
]
export const CONVERSION_UNIT_MILE_PER_HOUR: ReadonlyArray<ConversionUnitMilePerHour> =
  [
    'metre-per-second',
    'kilometre-per-hour',
    'mile-per-hour',
    'knot',
    'foot-per-second',
  ]
export const CONVERSION_UNIT_MILLIAMPERE: ReadonlyArray<ConversionUnitMilliampere> =
  ['ampere', 'milliampere', 'kiloampere']
export const CONVERSION_UNIT_MILLIGRAM: ReadonlyArray<ConversionUnitMilligram> =
  [
    'microgram',
    'milligram',
    'gram',
    'kilogram',
    'metric-tonne',
    'ounce',
    'pound',
    'ton',
  ]
export const CONVERSION_UNIT_MILLIHERTZ: ReadonlyArray<ConversionUnitMillihertz> =
  [
    'millihertz',
    'hertz',
    'kilohertz',
    'megahertz',
    'gigahertz',
    'terahertz',
    'rotation-per-minute',
    'degree-per-second',
    'radian-per-second',
  ]
export const CONVERSION_UNIT_MILLILITRE: ReadonlyArray<ConversionUnitMillilitre> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_MILLILITRE_PER_SECOND: ReadonlyArray<ConversionUnitMillilitrePerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_MILLIMETER: ReadonlyArray<ConversionUnitMillimeter> =
  [
    'millimeter',
    'centimeter',
    'meter',
    'kilometer',
    'inch',
    'yard',
    'us-survey-foot',
    'foot',
    'mile',
  ]
export const CONVERSION_UNIT_MILLISECOND: ReadonlyArray<ConversionUnitMillisecond> =
  [
    'nanosecond',
    'microsecond',
    'millisecond',
    'second',
    'minute',
    'hour',
    'day',
    'week',
    'month',
    'year',
  ]
export const CONVERSION_UNIT_MILLIVOLT: ReadonlyArray<ConversionUnitMillivolt> =
  ['volt', 'millivolt', 'kilovolt']
export const CONVERSION_UNIT_MILLIVOLT_AMPERE: ReadonlyArray<ConversionUnitMillivoltAmpere> =
  [
    'volt-ampere',
    'millivolt-ampere',
    'kilovolt-ampere',
    'megavolt-ampere',
    'gigavolt-ampere',
  ]
export const CONVERSION_UNIT_MILLIVOLT_AMPERE_REACTIVE: ReadonlyArray<ConversionUnitMillivoltAmpereReactive> =
  [
    'volt-ampere-reactive',
    'millivolt-ampere-reactive',
    'kilovolt-ampere-reactive',
    'megavolt-ampere-reactive',
    'gigavolt-ampere-reactive',
  ]
export const CONVERSION_UNIT_MILLIVOLT_AMPERE_REACTIVE_HOUR: ReadonlyArray<ConversionUnitMillivoltAmpereReactiveHour> =
  [
    'volt-ampere-reactive-hour',
    'millivolt-ampere-reactive-hour',
    'kilovolt-ampere-reactive-hour',
    'megavolt-ampere-reactive-hour',
    'gigavolt-ampere-reactive-hour',
  ]
export const CONVERSION_UNIT_MILLIWATT: ReadonlyArray<ConversionUnitMilliwatt> =
  ['watt', 'milliwatt', 'kilowatt', 'megawatt', 'gigawatt']
export const CONVERSION_UNIT_MILLIWATT_HOUR: ReadonlyArray<ConversionUnitMilliwattHour> =
  [
    'watt-hour',
    'milliwatt-hour',
    'kilowatt-hour',
    'megawatt-hour',
    'gigawatt-hour',
    'joule',
    'kilojoule',
  ]
export const CONVERSION_UNIT_MINUTE: ReadonlyArray<ConversionUnitMinute> =
  [
    'nanosecond',
    'microsecond',
    'millisecond',
    'second',
    'minute',
    'hour',
    'day',
    'week',
    'month',
    'year',
  ]
export const CONVERSION_UNIT_MINUTE_PER_KILOMETRE: ReadonlyArray<ConversionUnitMinutePerKilometre> =
  [
    'minute-per-kilometre',
    'second-per-metre',
    'minute-per-mile',
    'second-per-foot',
  ]
export const CONVERSION_UNIT_MINUTE_PER_MILE: ReadonlyArray<ConversionUnitMinutePerMile> =
  [
    'minute-per-kilometre',
    'second-per-metre',
    'minute-per-mile',
    'second-per-foot',
  ]
export const CONVERSION_UNIT_MONTH: ReadonlyArray<ConversionUnitMonth> =
  [
    'nanosecond',
    'microsecond',
    'millisecond',
    'second',
    'minute',
    'hour',
    'day',
    'week',
    'month',
    'year',
  ]
export const CONVERSION_UNIT_NANOSECOND: ReadonlyArray<ConversionUnitNanosecond> =
  [
    'nanosecond',
    'microsecond',
    'millisecond',
    'second',
    'minute',
    'hour',
    'day',
    'week',
    'month',
    'year',
  ]
export const CONVERSION_UNIT_OUNCE: ReadonlyArray<ConversionUnitOunce> =
  [
    'microgram',
    'milligram',
    'gram',
    'kilogram',
    'metric-tonne',
    'ounce',
    'pound',
    'ton',
  ]
export const CONVERSION_UNIT_PART_PER_BILLION: ReadonlyArray<ConversionUnitPartPerBillion> =
  [
    'part-per-million',
    'part-per-billion',
    'part-per-trillion',
    'part-per-quadrillion',
  ]
export const CONVERSION_UNIT_PART_PER_MILLION: ReadonlyArray<ConversionUnitPartPerMillion> =
  [
    'part-per-million',
    'part-per-billion',
    'part-per-trillion',
    'part-per-quadrillion',
  ]
export const CONVERSION_UNIT_PART_PER_QUADRILLION: ReadonlyArray<ConversionUnitPartPerQuadrillion> =
  [
    'part-per-million',
    'part-per-billion',
    'part-per-trillion',
    'part-per-quadrillion',
  ]
export const CONVERSION_UNIT_PART_PER_TRILLION: ReadonlyArray<ConversionUnitPartPerTrillion> =
  [
    'part-per-million',
    'part-per-billion',
    'part-per-trillion',
    'part-per-quadrillion',
  ]
export const CONVERSION_UNIT_PASCAL: ReadonlyArray<ConversionUnitPascal> =
  [
    'pascal',
    'kilopascal',
    'megapascal',
    'hectopascal',
    'bar',
    'torr',
    'pound-per-square-inch',
    'kilopound-per-square-inch',
  ]
export const CONVERSION_UNIT_PINT: ReadonlyArray<ConversionUnitPint> = [
  'cubic-millimeter',
  'cubic-centimeter',
  'millilitre',
  'centilitre',
  'decilitre',
  'litre',
  'kilolitre',
  'cubic-meter',
  'cubic-kilometer',
  'tesked',
  'matsked',
  'kaffekopp',
  'glas',
  'kanna',
  'teaspoon',
  'tablespoon',
  'cubic-inch',
  'fluid-ounce',
  'cup',
  'pint',
  'quart',
  'gallon',
  'cubic-foot',
  'cubic-yard',
]
export const CONVERSION_UNIT_PINT_PER_HOUR: ReadonlyArray<ConversionUnitPintPerHour> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_PINT_PER_MINUTE: ReadonlyArray<ConversionUnitPintPerMinute> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_PINT_PER_SECOND: ReadonlyArray<ConversionUnitPintPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_POUND: ReadonlyArray<ConversionUnitPound> =
  [
    'microgram',
    'milligram',
    'gram',
    'kilogram',
    'metric-tonne',
    'ounce',
    'pound',
    'ton',
  ]
export const CONVERSION_UNIT_POUND_PER_SQUARE_INCH: ReadonlyArray<ConversionUnitPoundPerSquareInch> =
  [
    'pascal',
    'kilopascal',
    'megapascal',
    'hectopascal',
    'bar',
    'torr',
    'pound-per-square-inch',
    'kilopound-per-square-inch',
  ]
export const CONVERSION_UNIT_QUART: ReadonlyArray<ConversionUnitQuart> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_QUART_PER_SECOND: ReadonlyArray<ConversionUnitQuartPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_RADIAN: ReadonlyArray<ConversionUnitRadian> =
  ['radian', 'degree', 'gradian', 'arcminute', 'arcsecond']
export const CONVERSION_UNIT_RADIAN_PER_SECOND: ReadonlyArray<ConversionUnitRadianPerSecond> =
  [
    'millihertz',
    'hertz',
    'kilohertz',
    'megahertz',
    'gigahertz',
    'terahertz',
    'rotation-per-minute',
    'degree-per-second',
    'radian-per-second',
  ]
export const CONVERSION_UNIT_RANKINE: ReadonlyArray<ConversionUnitRankine> =
  ['celsius', 'kelvin', 'fahrenheit', 'rankine']
export const CONVERSION_UNIT_ROTATION_PER_MINUTE: ReadonlyArray<ConversionUnitRotationPerMinute> =
  [
    'millihertz',
    'hertz',
    'kilohertz',
    'megahertz',
    'gigahertz',
    'terahertz',
    'rotation-per-minute',
    'degree-per-second',
    'radian-per-second',
  ]
export const CONVERSION_UNIT_SECOND: ReadonlyArray<ConversionUnitSecond> =
  [
    'nanosecond',
    'microsecond',
    'millisecond',
    'second',
    'minute',
    'hour',
    'day',
    'week',
    'month',
    'year',
  ]
export const CONVERSION_UNIT_SECOND_PER_FOOT: ReadonlyArray<ConversionUnitSecondPerFoot> =
  [
    'minute-per-kilometre',
    'second-per-metre',
    'minute-per-mile',
    'second-per-foot',
  ]
export const CONVERSION_UNIT_SECOND_PER_METRE: ReadonlyArray<ConversionUnitSecondPerMetre> =
  [
    'minute-per-kilometre',
    'second-per-metre',
    'minute-per-mile',
    'second-per-foot',
  ]
export const CONVERSION_UNIT_SQUARE_CENTIMETER: ReadonlyArray<ConversionUnitSquareCentimeter> =
  [
    'square-millimeter',
    'square-centimeter',
    'square-meter',
    'hectare',
    'square-kilometer',
    'square-inch',
    'square-yard',
    'square-foot',
    'acre',
    'square-mile',
  ]
export const CONVERSION_UNIT_SQUARE_FOOT: ReadonlyArray<ConversionUnitSquareFoot> =
  [
    'square-millimeter',
    'square-centimeter',
    'square-meter',
    'hectare',
    'square-kilometer',
    'square-inch',
    'square-yard',
    'square-foot',
    'acre',
    'square-mile',
  ]
export const CONVERSION_UNIT_SQUARE_INCH: ReadonlyArray<ConversionUnitSquareInch> =
  [
    'square-millimeter',
    'square-centimeter',
    'square-meter',
    'hectare',
    'square-kilometer',
    'square-inch',
    'square-yard',
    'square-foot',
    'acre',
    'square-mile',
  ]
export const CONVERSION_UNIT_SQUARE_KILOMETER: ReadonlyArray<ConversionUnitSquareKilometer> =
  [
    'square-millimeter',
    'square-centimeter',
    'square-meter',
    'hectare',
    'square-kilometer',
    'square-inch',
    'square-yard',
    'square-foot',
    'acre',
    'square-mile',
  ]
export const CONVERSION_UNIT_SQUARE_METER: ReadonlyArray<ConversionUnitSquareMeter> =
  [
    'square-millimeter',
    'square-centimeter',
    'square-meter',
    'hectare',
    'square-kilometer',
    'square-inch',
    'square-yard',
    'square-foot',
    'acre',
    'square-mile',
  ]
export const CONVERSION_UNIT_SQUARE_MILE: ReadonlyArray<ConversionUnitSquareMile> =
  [
    'square-millimeter',
    'square-centimeter',
    'square-meter',
    'hectare',
    'square-kilometer',
    'square-inch',
    'square-yard',
    'square-foot',
    'acre',
    'square-mile',
  ]
export const CONVERSION_UNIT_SQUARE_MILLIMETER: ReadonlyArray<ConversionUnitSquareMillimeter> =
  [
    'square-millimeter',
    'square-centimeter',
    'square-meter',
    'hectare',
    'square-kilometer',
    'square-inch',
    'square-yard',
    'square-foot',
    'acre',
    'square-mile',
  ]
export const CONVERSION_UNIT_SQUARE_YARD: ReadonlyArray<ConversionUnitSquareYard> =
  [
    'square-millimeter',
    'square-centimeter',
    'square-meter',
    'hectare',
    'square-kilometer',
    'square-inch',
    'square-yard',
    'square-foot',
    'acre',
    'square-mile',
  ]
export const CONVERSION_UNIT_TABLESPOON: ReadonlyArray<ConversionUnitTablespoon> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_TABLESPOON_PER_SECOND: ReadonlyArray<ConversionUnitTablespoonPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_TEASPOON: ReadonlyArray<ConversionUnitTeaspoon> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_TEASPOON_PER_SECOND: ReadonlyArray<ConversionUnitTeaspoonPerSecond> =
  [
    'cubic-millimeter-per-second',
    'cubic-centimeter-per-second',
    'millilitre-per-second',
    'centilitre-per-second',
    'decilitre-per-second',
    'litre-per-second',
    'litre-per-minute',
    'litre-per-hour',
    'kilolitre-per-second',
    'kilolitre-per-minute',
    'kilolitre-per-hour',
    'cubic-meter-per-second',
    'cubic-meter-per-minute',
    'cubic-meter-per-hour',
    'cubic-kilometer-per-second',
    'teaspoon-per-second',
    'tablespoon-per-second',
    'cubic-inch-per-second',
    'cubic-inch-per-minute',
    'cubic-inch-per-hour',
    'fluid-ounce-per-second',
    'fluid-ounce-per-minute',
    'fluid-ounce-per-hour',
    'cup-per-second',
    'pint-per-second',
    'pint-per-minute',
    'pint-per-hour',
    'quart-per-second',
    'gallon-per-second',
    'gallon-per-minute',
    'gallon-per-hour',
    'cubic-foot-per-second',
    'cubic-foot-per-minute',
    'cubic-foot-per-hour',
    'cubic-yard-per-second',
    'cubic-yard-per-minute',
    'cubic-yard-per-hour',
  ]
export const CONVERSION_UNIT_TERABIT: ReadonlyArray<ConversionUnitTerabit> =
  [
    'bit',
    'kilobit',
    'megabit',
    'gigabit',
    'terabit',
    'byte',
    'kilobyte',
    'megabyte',
    'gigabyte',
    'terabyte',
  ]
export const CONVERSION_UNIT_TERABYTE: ReadonlyArray<ConversionUnitTerabyte> =
  [
    'bit',
    'kilobit',
    'megabit',
    'gigabit',
    'terabit',
    'byte',
    'kilobyte',
    'megabyte',
    'gigabyte',
    'terabyte',
  ]
export const CONVERSION_UNIT_TERAHERTZ: ReadonlyArray<ConversionUnitTerahertz> =
  [
    'millihertz',
    'hertz',
    'kilohertz',
    'megahertz',
    'gigahertz',
    'terahertz',
    'rotation-per-minute',
    'degree-per-second',
    'radian-per-second',
  ]
export const CONVERSION_UNIT_TESKED: ReadonlyArray<ConversionUnitTesked> =
  [
    'cubic-millimeter',
    'cubic-centimeter',
    'millilitre',
    'centilitre',
    'decilitre',
    'litre',
    'kilolitre',
    'cubic-meter',
    'cubic-kilometer',
    'tesked',
    'matsked',
    'kaffekopp',
    'glas',
    'kanna',
    'teaspoon',
    'tablespoon',
    'cubic-inch',
    'fluid-ounce',
    'cup',
    'pint',
    'quart',
    'gallon',
    'cubic-foot',
    'cubic-yard',
  ]
export const CONVERSION_UNIT_TON: ReadonlyArray<ConversionUnitTon> = [
  'microgram',
  'milligram',
  'gram',
  'kilogram',
  'metric-tonne',
  'ounce',
  'pound',
  'ton',
]
export const CONVERSION_UNIT_TORR: ReadonlyArray<ConversionUnitTorr> = [
  'pascal',
  'kilopascal',
  'megapascal',
  'hectopascal',
  'bar',
  'torr',
  'pound-per-square-inch',
  'kilopound-per-square-inch',
]
export const CONVERSION_UNIT_US_SURVEY_FOOT: ReadonlyArray<ConversionUnitUsSurveyFoot> =
  [
    'millimeter',
    'centimeter',
    'meter',
    'kilometer',
    'inch',
    'yard',
    'us-survey-foot',
    'foot',
    'mile',
  ]
export const CONVERSION_UNIT_VOLT: ReadonlyArray<ConversionUnitVolt> = [
  'volt',
  'millivolt',
  'kilovolt',
]
export const CONVERSION_UNIT_VOLT_AMPERE: ReadonlyArray<ConversionUnitVoltAmpere> =
  [
    'volt-ampere',
    'millivolt-ampere',
    'kilovolt-ampere',
    'megavolt-ampere',
    'gigavolt-ampere',
  ]
export const CONVERSION_UNIT_VOLT_AMPERE_REACTIVE: ReadonlyArray<ConversionUnitVoltAmpereReactive> =
  [
    'volt-ampere-reactive',
    'millivolt-ampere-reactive',
    'kilovolt-ampere-reactive',
    'megavolt-ampere-reactive',
    'gigavolt-ampere-reactive',
  ]
export const CONVERSION_UNIT_VOLT_AMPERE_REACTIVE_HOUR: ReadonlyArray<ConversionUnitVoltAmpereReactiveHour> =
  [
    'volt-ampere-reactive-hour',
    'millivolt-ampere-reactive-hour',
    'kilovolt-ampere-reactive-hour',
    'megavolt-ampere-reactive-hour',
    'gigavolt-ampere-reactive-hour',
  ]
export const CONVERSION_UNIT_WATT: ReadonlyArray<ConversionUnitWatt> = [
  'watt',
  'milliwatt',
  'kilowatt',
  'megawatt',
  'gigawatt',
]
export const CONVERSION_UNIT_WATT_HOUR: ReadonlyArray<ConversionUnitWattHour> =
  [
    'watt-hour',
    'milliwatt-hour',
    'kilowatt-hour',
    'megawatt-hour',
    'gigawatt-hour',
    'joule',
    'kilojoule',
  ]
export const CONVERSION_UNIT_WEEK: ReadonlyArray<ConversionUnitWeek> = [
  'nanosecond',
  'microsecond',
  'millisecond',
  'second',
  'minute',
  'hour',
  'day',
  'week',
  'month',
  'year',
]
export const CONVERSION_UNIT_YARD: ReadonlyArray<ConversionUnitYard> = [
  'millimeter',
  'centimeter',
  'meter',
  'kilometer',
  'inch',
  'yard',
  'us-survey-foot',
  'foot',
  'mile',
]
export const CONVERSION_UNIT_YEAR: ReadonlyArray<ConversionUnitYear> = [
  'nanosecond',
  'microsecond',
  'millisecond',
  'second',
  'minute',
  'hour',
  'day',
  'week',
  'month',
  'year',
]
export const CONVERT_LATEX_TO_PNG_INPUT_FORMAT: ReadonlyArray<ConvertLatexToPngInputFormat> =
  ['tex']
export const CONVERT_LATEX_TO_PNG_OUTPUT_FORMAT: ReadonlyArray<ConvertLatexToPngOutputFormat> =
  ['png']
export const CPP_INPUT_FORMAT: ReadonlyArray<CppInputFormat> = ['cpp']
export const ENSCRIPT_INPUT_FORMAT: ReadonlyArray<EnscriptInputFormat> =
  ['txt']
export const ENSCRIPT_OUTPUT_FORMAT: ReadonlyArray<EnscriptOutputFormat> =
  ['html', 'ps', 'rtf']
export const FFMPEG_CODEC_AUDIO: ReadonlyArray<FfmpegCodecAudio> = [
  '4gv',
  '8svx_exp',
  '8svx_fib',
  'aac',
  'aac_latm',
  'ac3',
  'ac4',
  'acelp.kelvin',
  'adpcm_4xm',
  'adpcm_adx',
  'adpcm_afc',
  'adpcm_agm',
  'adpcm_aica',
  'adpcm_argo',
  'adpcm_ct',
  'adpcm_dtk',
  'adpcm_ea',
  'adpcm_ea_maxis_xa',
  'adpcm_ea_r1',
  'adpcm_ea_r2',
  'adpcm_ea_r3',
  'adpcm_ea_xas',
  'adpcm_g722',
  'adpcm_g726',
  'adpcm_g726le',
  'adpcm_ima_acorn',
  'adpcm_ima_alp',
  'adpcm_ima_amv',
  'adpcm_ima_apc',
  'adpcm_ima_apm',
  'adpcm_ima_cunning',
  'adpcm_ima_dat4',
  'adpcm_ima_dk3',
  'adpcm_ima_dk4',
  'adpcm_ima_ea_eacs',
  'adpcm_ima_ea_sead',
  'adpcm_ima_iss',
  'adpcm_ima_moflex',
  'adpcm_ima_mtf',
  'adpcm_ima_oki',
  'adpcm_ima_qt',
  'adpcm_ima_rad',
  'adpcm_ima_smjpeg',
  'adpcm_ima_ssi',
  'adpcm_ima_wav',
  'adpcm_ima_ws',
  'adpcm_ms',
  'adpcm_mtaf',
  'adpcm_psx',
  'adpcm_sbpro_2',
  'adpcm_sbpro_3',
  'adpcm_sbpro_4',
  'adpcm_swf',
  'adpcm_thp',
  'adpcm_thp_le',
  'adpcm_vima',
  'adpcm_xa',
  'adpcm_xmd',
  'adpcm_yamaha',
  'adpcm_zork',
  'alac',
  'amr_nb',
  'amr_wb',
  'anull',
  'apac',
  'ape',
  'aptx',
  'aptx_hd',
  'atrac1',
  'atrac3',
  'atrac3al',
  'atrac3p',
  'atrac3pal',
  'atrac9',
  'avc',
  'binkaudio_dct',
  'binkaudio_rdft',
  'bmv_audio',
  'bonk',
  'cbd2_dpcm',
  'celt',
  'codec2',
  'comfortnoise',
  'cook',
  'derf_dpcm',
  'dfpwm',
  'dolby_e',
  'dsd_lsbf',
  'dsd_lsbf_planar',
  'dsd_msbf',
  'dsd_msbf_planar',
  'dsicinaudio',
  'dss_sp',
  'dst',
  'dts',
  'dvaudio',
  'eac3',
  'evrc',
  'fastaudio',
  'flac',
  'ftr',
  'g723_1',
  'g729',
  'gremlin_dpcm',
  'gsm',
  'gsm_ms',
  'hca',
  'hcom',
  'iac',
  'ilbc',
  'imc',
  'interplay_dpcm',
  'interplayacm',
  'mace3',
  'mace6',
  'metasound',
  'misc4',
  'mlp',
  'mp1',
  'mp2',
  'mp3',
  'mp3adu',
  'mp3on4',
  'mp4als',
  'mpegh_3d_audio',
  'msnsiren',
  'musepack7',
  'musepack8',
  'nellymoser',
  'opus',
  'osq',
  'paf_audio',
  'pcm_alaw',
  'pcm_bluray',
  'pcm_dvd',
  'pcm_f16le',
  'pcm_f24le',
  'pcm_f32be',
  'pcm_f32le',
  'pcm_f64be',
  'pcm_f64le',
  'pcm_lxf',
  'pcm_mulaw',
  'pcm_s16be',
  'pcm_s16be_planar',
  'pcm_s16le',
  'pcm_s16le_planar',
  'pcm_s24be',
  'pcm_s24daud',
  'pcm_s24le',
  'pcm_s24le_planar',
  'pcm_s32be',
  'pcm_s32le',
  'pcm_s32le_planar',
  'pcm_s64be',
  'pcm_s64le',
  'pcm_s8',
  'pcm_s8_planar',
  'pcm_sga',
  'pcm_u16be',
  'pcm_u16le',
  'pcm_u24be',
  'pcm_u24le',
  'pcm_u32be',
  'pcm_u32le',
  'pcm_u8',
  'pcm_vidc',
  'qcelp',
  'qdm2',
  'qdmc',
  'ra_144',
  'ra_288',
  'ralf',
  'rka',
  'roq_dpcm',
  's302m',
  'sbc',
  'sdx2_dpcm',
  'shorten',
  'sipr',
  'siren',
  'smackaudio',
  'smv',
  'sol_dpcm',
  'sonic',
  'sonicls',
  'speex',
  'tak',
  'truehd',
  'truespeech',
  'tta',
  'twinvq',
  'vmdaudio',
  'vorbis',
  'wady_dpcm',
  'wavarc',
  'wavesynth',
  'wavpack',
  'westwood_snd1',
  'wmalossless',
  'wmapro',
  'wmav1',
  'wmav2',
  'wmavoice',
  'xan_dpcm',
  'xma1',
  'xma2',
]
export const FFMPEG_CODEC_SUBTITLE: ReadonlyArray<FfmpegCodecSubtitle> =
  [
    'arib_caption',
    'ass',
    'dvb_subtitle',
    'dvb_teletext',
    'dvd_subtitle',
    'eia_608',
    'hdmv_pgs_subtitle',
    'hdmv_text_subtitle',
    'jacosub',
    'microdvd',
    'mov_text',
    'mpl2',
    'pjs',
    'realtext',
    'sami',
    'srt',
    'ssa',
    'stl',
    'subrip',
    'subviewer',
    'subviewer1',
    'text',
    'ttml',
    'vplayer',
    'webvtt',
    'xsub',
  ]
export const FFMPEG_CODEC_VIDEO: ReadonlyArray<FfmpegCodecVideo> = [
  '012v',
  '4xm',
  '8bps',
  'a64_multi',
  'a64_multi5',
  'aasc',
  'agm',
  'aic',
  'alias_pix',
  'amv',
  'anm',
  'ansi',
  'apng',
  'arbc',
  'argo',
  'asv1',
  'asv2',
  'aura',
  'aura2',
  'av1',
  'avrn',
  'avrp',
  'avs',
  'avs2',
  'avs3',
  'avui',
  'ayuv',
  'bethsoftvid',
  'bfi',
  'binkvideo',
  'bintext',
  'bitpacked',
  'bmp',
  'bmv_video',
  'brender_pix',
  'c93',
  'cavs',
  'cdgraphics',
  'cdtoons',
  'cdxl',
  'cfhd',
  'cinepak',
  'clearvideo',
  'cljr',
  'cllc',
  'cmv',
  'cpia',
  'cri',
  'cscd',
  'cyuv',
  'daala',
  'dds',
  'dfa',
  'dirac',
  'dnxhd',
  'dpx',
  'dsicinvideo',
  'dvvideo',
  'dxa',
  'dxtory',
  'dxv',
  'escape124',
  'escape130',
  'evc',
  'exr',
  'ffv1',
  'ffvhuff',
  'fic',
  'fits',
  'flashsv',
  'flashsv2',
  'flic',
  'flv1',
  'fmvc',
  'fraps',
  'frwu',
  'g2m',
  'gdv',
  'gem',
  'gif',
  'h261',
  'h263',
  'h263i',
  'h263p',
  'h264',
  'hap',
  'hdr',
  'hevc',
  'hnm4video',
  'hq_hqa',
  'hqx',
  'huffyuv',
  'hymt',
  'idcin',
  'idf',
  'iff_ilbm',
  'imm4',
  'imm5',
  'indeo2',
  'indeo3',
  'indeo4',
  'indeo5',
  'interplayvideo',
  'ipu',
  'jpeg2000',
  'jpegls',
  'jpegxl',
  'jv',
  'kgv1',
  'kmvc',
  'lagarith',
  'ljpeg',
  'loco',
  'lscr',
  'm101',
  'mad',
  'magicyuv',
  'mdec',
  'media100',
  'mimic',
  'mjpeg',
  'mjpegb',
  'mmvideo',
  'mobiclip',
  'motionpixels',
  'mpeg1video',
  'mpeg2video',
  'mpeg4',
  'msa1',
  'mscc',
  'msmpeg4v1',
  'msmpeg4v2',
  'msmpeg4v3',
  'msp2',
  'msrle',
  'mss1',
  'mss2',
  'msvideo1',
  'mszh',
  'mts2',
  'mv30',
  'mvc1',
  'mvc2',
  'mvdv',
  'mvha',
  'mwsc',
  'mxpeg',
  'notchlc',
  'nuv',
  'paf_video',
  'pam',
  'pbm',
  'pcx',
  'pdv',
  'pfm',
  'pgm',
  'pgmyuv',
  'pgx',
  'phm',
  'photocd',
  'pictor',
  'pixlet',
  'png',
  'ppm',
  'prores',
  'prosumer',
  'psd',
  'ptx',
  'qdraw',
  'qoi',
  'qpeg',
  'qtrle',
  'r10k',
  'r210',
  'rasc',
  'rawvideo',
  'rl2',
  'roq',
  'rpza',
  'rscc',
  'rtv1',
  'rv10',
  'rv20',
  'rv30',
  'rv40',
  'sanm',
  'scpr',
  'screenpresso',
  'sga',
  'sgi',
  'sgirle',
  'sheervideo',
  'simbiosis_imx',
  'smackvideo',
  'smc',
  'smvjpeg',
  'snow',
  'sp5x',
  'speedhq',
  'srgc',
  'sunrast',
  'svg',
  'svq1',
  'svq3',
  'targa',
  'targa_y216',
  'tdsc',
  'tgq',
  'tgv',
  'theora',
  'thp',
  'tiertexseqvideo',
  'tiff',
  'tmv',
  'tqi',
  'truemotion1',
  'truemotion2',
  'truemotion2rt',
  'tscc',
  'tscc2',
  'txd',
  'ulti',
  'utvideo',
  'v210',
  'v210x',
  'v308',
  'v408',
  'v410',
  'vb',
  'vble',
  'vbn',
  'vc1',
  'vc1image',
  'vcr1',
  'vixl',
  'vmdvideo',
  'vmix',
  'vmnc',
  'vnull',
  'vp3',
  'vp4',
  'vp5',
  'vp6',
  'vp6a',
  'vp6f',
  'vp7',
  'vp8',
  'vp9',
  'vqc',
  'vvc',
  'wbmp',
  'wcmv',
  'webp',
  'wmv1',
  'wmv2',
  'wmv3',
  'wmv3image',
  'wnv1',
  'wrapped_avframe',
  'ws_vqa',
  'xan_wc3',
  'xan_wc4',
  'xbin',
  'xbm',
  'xface',
  'xpm',
  'xwd',
  'y41p',
  'ylc',
  'yop',
  'yuv4',
  'zerocodec',
  'zlib',
  'zmbv',
]
export const FFMPEG_DECODER_AUDIO: ReadonlyArray<FfmpegDecoderAudio> = [
  '8svx_exp',
  '8svx_fib',
  'aac',
  'aac_fixed',
  'aac_at',
  'aac_latm',
  'ac3',
  'ac3_fixed',
  'ac3_at',
  'acelp.kelvin',
  'adpcm_4xm',
  'adpcm_adx',
  'adpcm_afc',
  'adpcm_agm',
  'adpcm_aica',
  'adpcm_argo',
  'adpcm_ct',
  'adpcm_dtk',
  'adpcm_ea',
  'adpcm_ea_maxis_xa',
  'adpcm_ea_r1',
  'adpcm_ea_r2',
  'adpcm_ea_r3',
  'adpcm_ea_xas',
  'g722',
  'g726',
  'g726le',
  'adpcm_ima_acorn',
  'adpcm_ima_alp',
  'adpcm_ima_amv',
  'adpcm_ima_apc',
  'adpcm_ima_apm',
  'adpcm_ima_cunning',
  'adpcm_ima_dat4',
  'adpcm_ima_dk3',
  'adpcm_ima_dk4',
  'adpcm_ima_ea_eacs',
  'adpcm_ima_ea_sead',
  'adpcm_ima_iss',
  'adpcm_ima_moflex',
  'adpcm_ima_mtf',
  'adpcm_ima_oki',
  'adpcm_ima_qt',
  'adpcm_ima_qt_at',
  'adpcm_ima_rad',
  'adpcm_ima_smjpeg',
  'adpcm_ima_ssi',
  'adpcm_ima_wav',
  'adpcm_ima_ws',
  'adpcm_ms',
  'adpcm_mtaf',
  'adpcm_psx',
  'adpcm_sbpro_2',
  'adpcm_sbpro_3',
  'adpcm_sbpro_4',
  'adpcm_swf',
  'adpcm_thp',
  'adpcm_thp_le',
  'adpcm_vima',
  'adpcm_xa',
  'adpcm_xmd',
  'adpcm_yamaha',
  'adpcm_zork',
  'alac',
  'alac_at',
  'amrnb',
  'amr_nb_at',
  'libopencore_amrnb',
  'amrwb',
  'libopencore_amrwb',
  'anull',
  'apac',
  'ape',
  'aptx',
  'aptx_hd',
  'atrac1',
  'atrac3',
  'atrac3al',
  'atrac3plus',
  'atrac3plusal',
  'atrac9',
  'on2avc',
  'binkaudio_dct',
  'binkaudio_rdft',
  'bmv_audio',
  'bonk',
  'cbd2_dpcm',
  'comfortnoise',
  'cook',
  'derf_dpcm',
  'dfpwm',
  'dolby_e',
  'dsd_lsbf',
  'dsd_lsbf_planar',
  'dsd_msbf',
  'dsd_msbf_planar',
  'dsicinaudio',
  'dss_sp',
  'dst',
  'dca',
  'dvaudio',
  'eac3',
  'eac3_at',
  'evrc',
  'fastaudio',
  'flac',
  'ftr',
  'g723_1',
  'g729',
  'gremlin_dpcm',
  'gsm',
  'gsm_ms',
  'gsm_ms_at',
  'hca',
  'hcom',
  'iac',
  'ilbc',
  'ilbc_at',
  'imc',
  'interplay_dpcm',
  'interplayacm',
  'mace3',
  'mace6',
  'metasound',
  'misc4',
  'mlp',
  'mp1',
  'mp1float',
  'mp1_at',
  'mp2',
  'mp2float',
  'mp2_at',
  'mp3float',
  'mp3',
  'mp3_at',
  'mp3adufloat',
  'mp3adu',
  'mp3on4float',
  'mp3on4',
  'als',
  'msnsiren',
  'mpc7',
  'mpc8',
  'nellymoser',
  'opus',
  'libopus',
  'osq',
  'paf_audio',
  'pcm_alaw',
  'pcm_alaw_at',
  'pcm_bluray',
  'pcm_dvd',
  'pcm_f16le',
  'pcm_f24le',
  'pcm_f32be',
  'pcm_f32le',
  'pcm_f64be',
  'pcm_f64le',
  'pcm_lxf',
  'pcm_mulaw',
  'pcm_mulaw_at',
  'pcm_s16be',
  'pcm_s16be_planar',
  'pcm_s16le',
  'pcm_s16le_planar',
  'pcm_s24be',
  'pcm_s24daud',
  'pcm_s24le',
  'pcm_s24le_planar',
  'pcm_s32be',
  'pcm_s32le',
  'pcm_s32le_planar',
  'pcm_s64be',
  'pcm_s64le',
  'pcm_s8',
  'pcm_s8_planar',
  'pcm_sga',
  'pcm_u16be',
  'pcm_u16le',
  'pcm_u24be',
  'pcm_u24le',
  'pcm_u32be',
  'pcm_u32le',
  'pcm_u8',
  'pcm_vidc',
  'qcelp',
  'qdm2',
  'qdm2_at',
  'qdmc',
  'qdmc_at',
  'real_144',
  'real_288',
  'ralf',
  'rka',
  'roq_dpcm',
  's302m',
  'sbc',
  'sdx2_dpcm',
  'shorten',
  'sipr',
  'siren',
  'smackaud',
  'sol_dpcm',
  'sonic',
  'speex',
  'libspeex',
  'tak',
  'truehd',
  'truespeech',
  'tta',
  'twinvq',
  'vmdaudio',
  'vorbis',
  'libvorbis',
  'wady_dpcm',
  'wavarc',
  'wavesynth',
  'wavpack',
  'ws_snd1',
  'wmalossless',
  'wmapro',
  'wmav1',
  'wmav2',
  'wmavoice',
  'xan_dpcm',
  'xma1',
  'xma2',
]
export const FFMPEG_DECODER_SUBTITLE: ReadonlyArray<FfmpegDecoderSubtitle> =
  [
    'libaribb24',
    'ssa',
    'ass',
    'dvbsub',
    'dvdsub',
    'cc_dec',
    'pgssub',
    'jacosub',
    'microdvd',
    'mov_text',
    'mpl2',
    'pjs',
    'realtext',
    'sami',
    'stl',
    'srt',
    'subrip',
    'subviewer',
    'subviewer1',
    'text',
    'vplayer',
    'webvtt',
    'xsub',
  ]
export const FFMPEG_DECODER_VIDEO: ReadonlyArray<FfmpegDecoderVideo> = [
  '012v',
  '4xm',
  '8bps',
  'aasc',
  'agm',
  'aic',
  'alias_pix',
  'amv',
  'anm',
  'ansi',
  'apng',
  'arbc',
  'argo',
  'asv1',
  'asv2',
  'aura',
  'aura2',
  'libdav1d',
  'libaom-av1',
  'av1',
  'avrn',
  'avrp',
  'avs',
  'avui',
  'ayuv',
  'bethsoftvid',
  'bfi',
  'binkvideo',
  'bintext',
  'bitpacked',
  'bmp',
  'bmv_video',
  'brender_pix',
  'c93',
  'cavs',
  'cdgraphics',
  'cdtoons',
  'cdxl',
  'cfhd',
  'cinepak',
  'clearvideo',
  'cljr',
  'cllc',
  'eacmv',
  'cpia',
  'cri',
  'camstudio',
  'cyuv',
  'dds',
  'dfa',
  'dirac',
  'dnxhd',
  'dpx',
  'dsicinvideo',
  'dvvideo',
  'dxa',
  'dxtory',
  'dxv',
  'escape124',
  'escape130',
  'exr',
  'ffv1',
  'ffvhuff',
  'fic',
  'fits',
  'flashsv',
  'flashsv2',
  'flic',
  'flv',
  'fmvc',
  'fraps',
  'frwu',
  'g2m',
  'gdv',
  'gem',
  'gif',
  'h261',
  'h263',
  'h263i',
  'h263p',
  'h264',
  'hap',
  'hdr',
  'hevc',
  'hnm4video',
  'hq_hqa',
  'hqx',
  'huffyuv',
  'hymt',
  'idcinvideo',
  'idf',
  'iff',
  'imm4',
  'imm5',
  'indeo2',
  'indeo3',
  'indeo4',
  'indeo5',
  'interplayvideo',
  'ipu',
  'jpeg2000',
  'jpegls',
  'libjxl',
  'jv',
  'kgv1',
  'kmvc',
  'lagarith',
  'loco',
  'lscr',
  'm101',
  'eamad',
  'magicyuv',
  'mdec',
  'media100',
  'mimic',
  'mjpeg',
  'mjpegb',
  'mmvideo',
  'mobiclip',
  'motionpixels',
  'mpeg1video',
  'mpeg2video',
  'mpegvideo',
  'mpeg4',
  'msa1',
  'mscc',
  'msmpeg4v1',
  'msmpeg4v2',
  'msmpeg4',
  'msp2',
  'msrle',
  'mss1',
  'mss2',
  'msvideo1',
  'mszh',
  'mts2',
  'mv30',
  'mvc1',
  'mvc2',
  'mvdv',
  'mvha',
  'mwsc',
  'mxpeg',
  'notchlc',
  'nuv',
  'paf_video',
  'pam',
  'pbm',
  'pcx',
  'pdv',
  'pfm',
  'pgm',
  'pgmyuv',
  'pgx',
  'phm',
  'photocd',
  'pictor',
  'pixlet',
  'png',
  'ppm',
  'prores',
  'prosumer',
  'psd',
  'ptx',
  'qdraw',
  'qoi',
  'qpeg',
  'qtrle',
  'r10k',
  'r210',
  'rasc',
  'rawvideo',
  'rl2',
  'roqvideo',
  'rpza',
  'rscc',
  'rtv1',
  'rv10',
  'rv20',
  'rv30',
  'rv40',
  'sanm',
  'scpr',
  'screenpresso',
  'sga',
  'sgi',
  'sgirle',
  'sheervideo',
  'simbiosis_imx',
  'smackvid',
  'smc',
  'smvjpeg',
  'snow',
  'sp5x',
  'speedhq',
  'srgc',
  'sunrast',
  'svq1',
  'svq3',
  'targa',
  'targa_y216',
  'tdsc',
  'eatgq',
  'eatgv',
  'theora',
  'thp',
  'tiertexseqvideo',
  'tiff',
  'tmv',
  'eatqi',
  'truemotion1',
  'truemotion2',
  'truemotion2rt',
  'camtasia',
  'tscc2',
  'txd',
  'ultimotion',
  'utvideo',
  'v210',
  'v210x',
  'v308',
  'v408',
  'v410',
  'vb',
  'vble',
  'vbn',
  'vc1',
  'vc1image',
  'vcr1',
  'xl',
  'vmdvideo',
  'vmix',
  'vmnc',
  'vnull',
  'vp3',
  'vp4',
  'vp5',
  'vp6',
  'vp6a',
  'vp6f',
  'vp7',
  'vp8',
  'libvpx',
  'vp9',
  'libvpx-vp9',
  'vqc',
  'wbmp',
  'wcmv',
  'webp',
  'wmv1',
  'wmv2',
  'wmv3',
  'wmv3image',
  'wnv1',
  'wrapped_avframe',
  'vqavideo',
  'xan_wc3',
  'xan_wc4',
  'xbin',
  'xbm',
  'xface',
  'xpm',
  'xwd',
  'y41p',
  'ylc',
  'yop',
  'yuv4',
  'zerocodec',
  'zlib',
  'zmbv',
]
export const FFMPEG_ENCODER_AUDIO: ReadonlyArray<FfmpegEncoderAudio> = [
  'aac',
  'aac_at',
  'ac3',
  'ac3_fixed',
  'adpcm_adx',
  'adpcm_argo',
  'g722',
  'g726',
  'g726le',
  'adpcm_ima_alp',
  'adpcm_ima_amv',
  'adpcm_ima_apm',
  'adpcm_ima_qt',
  'adpcm_ima_ssi',
  'adpcm_ima_wav',
  'adpcm_ima_ws',
  'adpcm_ms',
  'adpcm_swf',
  'adpcm_yamaha',
  'alac',
  'alac_at',
  'libopencore_amrnb',
  'anull',
  'aptx',
  'aptx_hd',
  'comfortnoise',
  'dfpwm',
  'dca',
  'eac3',
  'flac',
  'g723_1',
  'ilbc_at',
  'mlp',
  'mp2',
  'mp2fixed',
  'libmp3lame',
  'nellymoser',
  'opus',
  'libopus',
  'pcm_alaw',
  'pcm_alaw_at',
  'pcm_bluray',
  'pcm_dvd',
  'pcm_f32be',
  'pcm_f32le',
  'pcm_f64be',
  'pcm_f64le',
  'pcm_mulaw',
  'pcm_mulaw_at',
  'pcm_s16be',
  'pcm_s16be_planar',
  'pcm_s16le',
  'pcm_s16le_planar',
  'pcm_s24be',
  'pcm_s24daud',
  'pcm_s24le',
  'pcm_s24le_planar',
  'pcm_s32be',
  'pcm_s32le',
  'pcm_s32le_planar',
  'pcm_s64be',
  'pcm_s64le',
  'pcm_s8',
  'pcm_s8_planar',
  'pcm_u16be',
  'pcm_u16le',
  'pcm_u24be',
  'pcm_u24le',
  'pcm_u32be',
  'pcm_u32le',
  'pcm_u8',
  'pcm_vidc',
  'real_144',
  'roq_dpcm',
  's302m',
  'sbc',
  'sonic',
  'sonicls',
  'libspeex',
  'truehd',
  'tta',
  'vorbis',
  'libvorbis',
  'wavpack',
  'wmav1',
  'wmav2',
]
export const FFMPEG_ENCODER_SUBTITLE: ReadonlyArray<FfmpegEncoderSubtitle> =
  [
    'ssa',
    'ass',
    'dvbsub',
    'dvdsub',
    'mov_text',
    'srt',
    'subrip',
    'text',
    'ttml',
    'webvtt',
    'xsub',
  ]
export const FFMPEG_ENCODER_VIDEO: ReadonlyArray<FfmpegEncoderVideo> = [
  'a64multi',
  'a64multi5',
  'alias_pix',
  'amv',
  'apng',
  'asv1',
  'asv2',
  'libaom-av1',
  'librav1e',
  'libsvtav1',
  'avrp',
  'avui',
  'ayuv',
  'bitpacked',
  'bmp',
  'cfhd',
  'cinepak',
  'cljr',
  'vc2',
  'dnxhd',
  'dpx',
  'dvvideo',
  'exr',
  'ffv1',
  'ffvhuff',
  'fits',
  'flashsv',
  'flashsv2',
  'flv',
  'gif',
  'h261',
  'h263',
  'h263p',
  'libx264',
  'libx264rgb',
  'h264_videotoolbox',
  'hap',
  'hdr',
  'libx265',
  'hevc_videotoolbox',
  'huffyuv',
  'jpeg2000',
  'libopenjpeg',
  'jpegls',
  'libjxl',
  'ljpeg',
  'magicyuv',
  'mjpeg',
  'mpeg1video',
  'mpeg2video',
  'mpeg4',
  'libxvid',
  'msmpeg4v2',
  'msmpeg4',
  'msrle',
  'msvideo1',
  'pam',
  'pbm',
  'pcx',
  'pfm',
  'pgm',
  'pgmyuv',
  'phm',
  'png',
  'ppm',
  'prores',
  'prores_aw',
  'prores_ks',
  'prores_videotoolbox',
  'qoi',
  'qtrle',
  'r10k',
  'r210',
  'rawvideo',
  'roqvideo',
  'rpza',
  'rv10',
  'rv20',
  'sgi',
  'smc',
  'snow',
  'speedhq',
  'sunrast',
  'svq1',
  'targa',
  'libtheora',
  'tiff',
  'utvideo',
  'v210',
  'v308',
  'v408',
  'v410',
  'vbn',
  'vnull',
  'libvpx',
  'libvpx-vp9',
  'wbmp',
  'libwebp_anim',
  'libwebp',
  'wmv1',
  'wmv2',
  'wrapped_avframe',
  'xbm',
  'xface',
  'xwd',
  'y41p',
  'yuv4',
  'zlib',
  'zmbv',
]
export const FFMPEG_FORMAT: ReadonlyArray<FfmpegFormat> = [
  '3dostr',
  '3g2',
  '3gp',
  '4xm',
  'a64',
  'aa',
  'aac',
  'aax',
  'ac3',
  'ac4',
  'ace',
  'acm',
  'act',
  'adf',
  'adp',
  'ads',
  'adts',
  'adx',
  'aea',
  'afc',
  'aiff',
  'aix',
  'alaw',
  'alias_pix',
  'alp',
  'amr',
  'amrnb',
  'amrwb',
  'amv',
  'anm',
  'apac',
  'apc',
  'ape',
  'apm',
  'apng',
  'aptx',
  'aptx_hd',
  'aqtitle',
  'argo_asf',
  'argo_brp',
  'argo_cvg',
  'asf',
  'asf_o',
  'asf_stream',
  'ass',
  'ast',
  'au',
  'audiotoolbox',
  'av1',
  'avfoundation',
  'avi',
  'avif',
  'avm2',
  'avr',
  'avs',
  'avs2',
  'avs3',
  'bethsoftvid',
  'bfi',
  'bfstm',
  'bin',
  'bink',
  'binka',
  'bit',
  'bitpacked',
  'bmp_pipe',
  'bmv',
  'boa',
  'bonk',
  'brender_pix',
  'brstm',
  'c93',
  'caf',
  'cavsvideo',
  'cdg',
  'cdxl',
  'cine',
  'codec2',
  'codec2raw',
  'concat',
  'crc',
  'cri_pipe',
  'dash',
  'data',
  'daud',
  'dcstr',
  'dds_pipe',
  'derf',
  'dfa',
  'dfpwm',
  'dhav',
  'dirac',
  'dnxhd',
  'dpx_pipe',
  'dsf',
  'dsicin',
  'dss',
  'dts',
  'dtshd',
  'dv',
  'dvbsub',
  'dvbtxt',
  'dvd',
  'dxa',
  'ea',
  'ea_cdata',
  'eac3',
  'epaf',
  'evc',
  'exr_pipe',
  'f32be',
  'f32le',
  'f4v',
  'f64be',
  'f64le',
  'ffmetadata',
  'fifo',
  'fifo_test',
  'film_cpk',
  'filmstrip',
  'fits',
  'flac',
  'flic',
  'flv',
  'framecrc',
  'framehash',
  'framemd5',
  'frm',
  'fsb',
  'fwse',
  'g722',
  'g723_1',
  'g726',
  'g726le',
  'g729',
  'gdv',
  'gem_pipe',
  'genh',
  'gif',
  'gif_pipe',
  'gsm',
  'gxf',
  'h261',
  'h263',
  'h264',
  'hash',
  'hca',
  'hcom',
  'hdr_pipe',
  'hds',
  'hevc',
  'hls',
  'hnm',
  'ico',
  'idcin',
  'idf',
  'iff',
  'ifv',
  'ilbc',
  'image2',
  'image2pipe',
  'imf',
  'ingenient',
  'ipmovie',
  'ipod',
  'ipu',
  'ircam',
  'ismv',
  'iss',
  'iv8',
  'ivf',
  'ivr',
  'j2k_pipe',
  'jacosub',
  'jpeg_pipe',
  'jpegls_pipe',
  'jpegxl_anim',
  'jpegxl_pipe',
  'jv',
  'kux',
  'kvag',
  'laf',
  'latm',
  'lavfi',
  'live_flv',
  'lmlm4',
  'loas',
  'lrc',
  'luodat',
  'lvf',
  'lxf',
  'm4v',
  'matroska',
  'matroska-webm',
  'mca',
  'mcc',
  'md5',
  'mgsts',
  'microdvd',
  'mjpeg',
  'mjpeg_2000',
  'mkvtimestamp_v2',
  'mlp',
  'mlv',
  'mm',
  'mmf',
  'mods',
  'moflex',
  'mov',
  'mp2',
  'mp3',
  'mp4',
  'mpc',
  'mpc8',
  'mpeg',
  'mpeg1video',
  'mpeg2video',
  'mpegts',
  'mpegtsraw',
  'mpegvideo',
  'mpjpeg',
  'mpl2',
  'mpsub',
  'msf',
  'msnwctcp',
  'msp',
  'mtaf',
  'mtv',
  'mulaw',
  'musx',
  'mv',
  'mvi',
  'mxf',
  'mxf_d10',
  'mxf_opatom',
  'mxg',
  'nc',
  'nistsphere',
  'nsp',
  'nsv',
  'null',
  'nut',
  'nuv',
  'obu',
  'oga',
  'ogg',
  'ogv',
  'oma',
  'opus',
  'osq',
  'paf',
  'pam_pipe',
  'pbm_pipe',
  'pcx_pipe',
  'pdv',
  'pfm_pipe',
  'pgm_pipe',
  'pgmyuv_pipe',
  'pgx_pipe',
  'phm_pipe',
  'photocd_pipe',
  'pictor_pipe',
  'pjs',
  'pmp',
  'png_pipe',
  'pp_bnk',
  'ppm_pipe',
  'psd_pipe',
  'psp',
  'psxstr',
  'pva',
  'pvf',
  'qcp',
  'qdraw_pipe',
  'qoi_pipe',
  'r3d',
  'rawvideo',
  'realtext',
  'redspark',
  'rka',
  'rl2',
  'rm',
  'roq',
  'rpl',
  'rsd',
  'rso',
  'rtp',
  'rtp_mpegts',
  'rtsp',
  's16be',
  's16le',
  's24be',
  's24le',
  's32be',
  's32le',
  's337m',
  's8',
  'sami',
  'sap',
  'sbc',
  'sbg',
  'scc',
  'scd',
  'sdns',
  'sdp',
  'sdr2',
  'sds',
  'sdx',
  'segment',
  'ser',
  'sga',
  'sgi_pipe',
  'shn',
  'siff',
  'simbiosis_imx',
  'sln',
  'smjpeg',
  'smk',
  'smoothstreaming',
  'smush',
  'sol',
  'sox',
  'spdif',
  'spx',
  'srt',
  'stl',
  'stream_segment',
  'streamhash',
  'subviewer',
  'subviewer1',
  'sunrast_pipe',
  'sup',
  'svag',
  'svcd',
  'svg_pipe',
  'svs',
  'swf',
  'tak',
  'tedcaptions',
  'tee',
  'thp',
  'tiertexseq',
  'tiff_pipe',
  'tmv',
  'truehd',
  'tta',
  'ttml',
  'tty',
  'txd',
  'ty',
  'u16be',
  'u16le',
  'u24be',
  'u24le',
  'u32be',
  'u32le',
  'u8',
  'uncodedframecrc',
  'usm',
  'v210',
  'v210x',
  'vag',
  'vbn_pipe',
  'vc1',
  'vc1test',
  'vcd',
  'vidc',
  'vividas',
  'vivo',
  'vmd',
  'vob',
  'vobsub',
  'voc',
  'vpk',
  'vplayer',
  'vqf',
  'vvc',
  'w64',
  'wady',
  'wav',
  'wavarc',
  'wc3movie',
  'webm',
  'webm_chunk',
  'webm_dash_manifest',
  'webp',
  'webp_pipe',
  'webvtt',
  'wsaud',
  'wsd',
  'wsvqa',
  'wtv',
  'wv',
  'wve',
  'x11grab',
  'xa',
  'xbin',
  'xbm_pipe',
  'xmd',
  'xmv',
  'xpm_pipe',
  'xvag',
  'xwd_pipe',
  'xwma',
  'yop',
  'yuv4mpegpipe',
]
export const FFMPEG_STRICT_OPTION: ReadonlyArray<FfmpegStrictOption> = [
  'very',
  'strict',
  'normal',
  'unofficial',
  'experimental',
]
export const FILE_READER_ENCODING: ReadonlyArray<FileReaderEncoding> = [
  'utf-8',
  'ibm866',
  'iso-8859-2',
  'iso-8859-3',
  'iso-8859-4',
  'iso-8859-5',
  'iso-8859-6',
  'iso-8859-7',
  'iso-8859-8',
  'iso-8859-8-i',
  'iso-8859-10',
  'iso-8859-13',
  'iso-8859-14',
  'iso-8859-15',
  'iso-8859-16',
  'koi8-r',
  'koi8-u',
  'macintosh',
  'windows-874',
  'windows-1250',
  'windows-1251',
  'windows-1252',
  'windows-1253',
  'windows-1254',
  'windows-1255',
  'windows-1256',
  'windows-1257',
  'windows-1258',
  'x-mac-cyrillic',
]
export const FLIP: ReadonlyArray<Flip> = ['horizontal', 'vertical']
export const FONT_FORMAT: ReadonlyArray<FontFormat> = [
  'ttf',
  'otf',
  'woff2',
  'woff',
  'svg',
  'eot',
  'bmp',
]
export const FORGE_MESSAGE_DIGEST: ReadonlyArray<ForgeMessageDigest> = [
  'sha1',
  'sha256',
  'sha384',
  'sha512',
  'sha512/224',
  'sha512/256',
]
export const FORMAT_CODE_FORMAT: ReadonlyArray<FormatCodeFormat> = [
  'angular',
  'flow',
  'glimmer',
  'graphql',
  'html',
  'markdown',
  'meriyah',
  'postcss',
  'typescript',
  'yaml',
  'python',
  'swift',
  'c',
  'assembly',
  'cpp',
  'sql',
]
export const GIFSICLE_OPTIMIZE_OPTION: ReadonlyArray<GifsicleOptimizeOption> =
  ['1', '2', '3']
export const IMAGE_MAGICK_CHANNEL: ReadonlyArray<ImageMagickChannel> = [
  'red',
  'green',
  'blue',
  'alpha',
  'gray',
  'cyan',
  'magenta',
  'yellow',
  'black',
  'opacity',
  'index',
  'rgb',
  'rgba',
  'cmyk',
  'cmyka',
]
export const IMAGE_MAGICK_COLOR_SPACE: ReadonlyArray<ImageMagickColorSpace> =
  [
    'cmy',
    'cmyk',
    'gray',
    'hcl',
    'hclp',
    'hsb',
    'hsi',
    'hsl',
    'hsv',
    'hwb',
    'jzazbz',
    'lab',
    'lchab',
    'lchuv',
    'lms',
    'log',
    'luv',
    'ohta',
    'oklab',
    'oklch',
    'rec601ycbcr',
    'rec709ycbcr',
    'rgb',
    'scrgb',
    'srgb',
    'transparent',
    'xyy',
    'xyz',
    'ycbcr',
    'ycc',
    'ydbdr',
    'yiq',
    'ypbpr',
    'yuv',
    'undefined',
  ]
export const IMAGE_MAGICK_COMPRESSION: ReadonlyArray<ImageMagickCompression> =
  [
    'none',
    'bzip',
    'fax',
    'group4',
    'jpeg',
    'jpeg2000',
    'lossless',
    'lzw',
    'rle',
    'zip',
  ]
export const IMAGE_MAGICK_FORMAT: ReadonlyArray<ImageMagickFormat> = [
  '3fr',
  '3g2',
  '3gp',
  'aai',
  'ai',
  'apng',
  'art',
  'arw',
  'ashlar',
  'avi',
  'avif',
  'avs',
  'bayer',
  'bayera',
  'bgr',
  'bgra',
  'bgro',
  'bmp',
  'bmp2',
  'bmp3',
  'brf',
  'cal',
  'cals',
  'canvas',
  'caption',
  'cin',
  'cip',
  'clip',
  'cmyk',
  'cmyka',
  'cr2',
  'cr3',
  'crw',
  'cube',
  'cur',
  'cut',
  'data',
  'dcm',
  'dcr',
  'dcraw',
  'dcx',
  'dds',
  'dfont',
  'dng',
  'dpx',
  'dot',
  'dxt1',
  'dxt5',
  'epdf',
  'epi',
  'eps',
  'eps2',
  'eps3',
  'epsf',
  'epsi',
  'ept',
  'ept2',
  'ept3',
  'erf',
  'exr',
  'farbfeld',
  'fax',
  'ff',
  'file',
  'fits',
  'fl32',
  'flv',
  'fractal',
  'ftp',
  'ftxt',
  'fts',
  'g3',
  'g4',
  'gif',
  'gif87',
  'gradient',
  'gray',
  'graya',
  'group4',
  'hald',
  'hdr',
  'heic',
  'heif',
  'histogram',
  'hrz',
  'htm',
  'html',
  'http',
  'https',
  'icb',
  'ico',
  'icon',
  'iiq',
  'info',
  'inline',
  'ipl',
  'isobrl',
  'isobrl6',
  'j2c',
  'j2k',
  'jng',
  'jnx',
  'jp2',
  'jpc',
  'jpe',
  'jpeg',
  'jpg',
  'jpm',
  'jps',
  'jpt',
  'json',
  'jxl',
  'k25',
  'kdc',
  'label',
  'm2v',
  'm4v',
  'mac',
  'map',
  'mask',
  'mat',
  'matte',
  'mef',
  'miff',
  'mkv',
  'mng',
  'mono',
  'mov',
  'mp4',
  'mpc',
  'mpeg',
  'mpg',
  'mpo',
  'mrw',
  'msl',
  'msvg',
  'mtv',
  'mvg',
  'nef',
  'nrw',
  'null',
  'ora',
  'orf',
  'otb',
  'otf',
  'pal',
  'palm',
  'pam',
  'pango',
  'pattern',
  'pbm',
  'pcd',
  'pcds',
  'pcl',
  'pct',
  'pcx',
  'pdb',
  'pdf',
  'pdfa',
  'pef',
  'pes',
  'pfa',
  'pfb',
  'pfm',
  'pgm',
  'pgx',
  'phm',
  'picon',
  'pict',
  'pix',
  'pjpeg',
  'plasma',
  'png',
  'png00',
  'png24',
  'png32',
  'png48',
  'png64',
  'png8',
  'pnm',
  'ppm',
  'ps',
  'ps2',
  'ps3',
  'psb',
  'psd',
  'ptif',
  'pwp',
  'qoi',
  'raf',
  'ras',
  'raw',
  'rgb',
  'rgb565',
  'rgba',
  'rgbo',
  'rgf',
  'rla',
  'rle',
  'rmf',
  'rw2',
  'scr',
  'sct',
  'sfw',
  'sgi',
  'shtml',
  'six',
  'sixel',
  'sr2',
  'srf',
  'stegano',
  'strimg',
  'sun',
  'svg',
  'svgz',
  'text',
  'tga',
  'thumbnail',
  'tiff',
  'tiff64',
  'tile',
  'tim',
  'tm2',
  'ttc',
  'ttf',
  'txt',
  'ubrl',
  'ubrl6',
  'uil',
  'uyvy',
  'vda',
  'vicar',
  'vid',
  'viff',
  'vips',
  'vst',
  'wbmp',
  'webp',
  'webm',
  'wmv',
  'wpg',
  'x3f',
  'xbm',
  'xc',
  'xcf',
  'xpm',
  'xps',
  'xv',
  'yaml',
  'ycbcr',
  'ycbcra',
  'yuv',
]
export const IMAGE_MAGICK_GRAVITY: ReadonlyArray<ImageMagickGravity> = [
  'forget',
  'northwest',
  'north',
  'northeast',
  'west',
  'center',
  'east',
  'southwest',
  'south',
  'southeast',
]
export const IMAGE_MAGICK_INPUT_FORMAT: ReadonlyArray<ImageMagickInputFormat> =
  [
    '3fr',
    '3g2',
    '3gp',
    'aai',
    'ai',
    'apng',
    'art',
    'arw',
    'avi',
    'avif',
    'avs',
    'bayer',
    'bayera',
    'bgr',
    'bgra',
    'bgro',
    'bmp',
    'bmp2',
    'bmp3',
    'cal',
    'cals',
    'canvas',
    'caption',
    'cin',
    'clip',
    'cmyk',
    'cmyka',
    'cr2',
    'cr3',
    'crw',
    'cube',
    'cur',
    'cut',
    'data',
    'dcm',
    'dcr',
    'dcraw',
    'dcx',
    'dds',
    'dfont',
    'dng',
    'dpx',
    'dxt1',
    'dxt5',
    'epdf',
    'epi',
    'eps',
    'epsf',
    'epsi',
    'ept',
    'ept2',
    'ept3',
    'erf',
    'exr',
    'farbfeld',
    'fax',
    'ff',
    'file',
    'fits',
    'fl32',
    'flv',
    'fractal',
    'ftp',
    'fts',
    'ftxt',
    'g3',
    'g4',
    'gif',
    'gif87',
    'gradient',
    'gray',
    'graya',
    'group4',
    'hald',
    'hdr',
    'heic',
    'heif',
    'histogram',
    'hrz',
    'http',
    'https',
    'icb',
    'ico',
    'icon',
    'iiq',
    'inline',
    'ipl',
    'j2c',
    'j2k',
    'jng',
    'jnx',
    'jp2',
    'jpc',
    'jpe',
    'jpeg',
    'jpg',
    'jpm',
    'jps',
    'jpt',
    'jxl',
    'k25',
    'kdc',
    'label',
    'm2v',
    'm4v',
    'mac',
    'map',
    'mask',
    'mat',
    'mef',
    'miff',
    'mkv',
    'mng',
    'mono',
    'mov',
    'mp4',
    'mpc',
    'mpeg',
    'mpg',
    'mpo',
    'mrw',
    'msl',
    'msvg',
    'mtv',
    'mvg',
    'nef',
    'nrw',
    'null',
    'orf',
    'otb',
    'otf',
    'pal',
    'palm',
    'pam',
    'pattern',
    'pbm',
    'pcd',
    'pcds',
    'pcl',
    'pct',
    'pcx',
    'pdb',
    'pdfa',
    'pef',
    'pes',
    'pfa',
    'pfb',
    'pfm',
    'pgm',
    'pgx',
    'phm',
    'picon',
    'pict',
    'pix',
    'pjpeg',
    'plasma',
    'png',
    'png00',
    'png24',
    'png32',
    'png48',
    'png64',
    'png8',
    'pnm',
    'ppm',
    'ps',
    'psb',
    'psd',
    'ptif',
    'pwp',
    'qoi',
    'raf',
    'ras',
    'raw',
    'rgb',
    'rgb565',
    'rgba',
    'rgbo',
    'rgf',
    'rla',
    'rle',
    'rmf',
    'rw2',
    'scr',
    'sct',
    'sfw',
    'sgi',
    'six',
    'sixel',
    'txt',
    'sr2',
    'srf',
    'stegano',
    'strimg',
    'sun',
    'svg',
    'svgz',
    'text',
    'tga',
    'tiff',
    'tiff64',
    'tile',
    'tim',
    'tm2',
    'ttc',
    'ttf',
    'uyvy',
    'vda',
    'vicar',
    'vid',
    'viff',
    'vips',
    'vst',
    'wbmp',
    'webm',
    'webp',
    'wmv',
    'wpg',
    'x3f',
    'xbm',
    'xc',
    'xcf',
    'xpm',
    'xps',
    'xv',
    'ycbcr',
    'ycbcra',
    'yuv',
  ]
export const IMAGE_MAGICK_OUTPUT_FORMAT: ReadonlyArray<ImageMagickOutputFormat> =
  [
    'aai',
    'ai',
    'apng',
    'art',
    'ashlar',
    'avif',
    'avs',
    'bayer',
    'bayera',
    'bgr',
    'bgra',
    'bgro',
    'bmp',
    'bmp2',
    'bmp3',
    'brf',
    'cal',
    'cals',
    'cin',
    'cip',
    'clip',
    'cmyk',
    'cmyka',
    'cur',
    'data',
    'dcx',
    'dds',
    'dpx',
    'dxt1',
    'dxt5',
    'epdf',
    'epi',
    'eps',
    'eps2',
    'eps3',
    'epsf',
    'epsi',
    'ept',
    'ept2',
    'ept3',
    'exr',
    'farbfeld',
    'fax',
    'ff',
    'fits',
    'fl32',
    'flv',
    'fts',
    'ftxt',
    'g3',
    'g4',
    'gif',
    'gif87',
    'gray',
    'graya',
    'group4',
    'hdr',
    'heic',
    'heif',
    'hrz',
    'htm',
    'html',
    'icb',
    'ico',
    'icon',
    'info',
    'inline',
    'ipl',
    'isobrl',
    'isobrl6',
    'j2c',
    'j2k',
    'jng',
    'jp2',
    'jpc',
    'jpe',
    'jpeg',
    'jpg',
    'jpm',
    'jps',
    'jpt',
    'json',
    'jxl',
    'kernel',
    'm2v',
    'm4v',
    'map',
    'mask',
    'mat',
    'matte',
    'miff',
    'mkv',
    'mng',
    'mono',
    'mov',
    'mp4',
    'mpc',
    'mpeg',
    'mpg',
    'msl',
    'msvg',
    'mtv',
    'mvg',
    'null',
    'otb',
    'pal',
    'palm',
    'pam',
    'pbm',
    'pcd',
    'pcds',
    'pcl',
    'pct',
    'pcx',
    'pdb',
    'pdfa',
    'pfm',
    'pgm',
    'pgx',
    'phm',
    'picon',
    'pict',
    'pjpeg',
    'png',
    'png00',
    'png24',
    'png32',
    'png48',
    'png64',
    'png8',
    'pnm',
    'ppm',
    'ps',
    'ps2',
    'ps3',
    'psb',
    'psd',
    'ptif',
    'qoi',
    'ras',
    'rgb',
    'rgba',
    'rgbo',
    'rgf',
    'sgi',
    'shtml',
    'six',
    'sixel',
    'txt',
    'strimg',
    'sun',
    'svg',
    'svgz',
    'tga',
    'tiff',
    'tiff64',
    'ubrl',
    'ubrl6',
    'uil',
    'uyvy',
    'vda',
    'vicar',
    'vid',
    'viff',
    'vips',
    'vst',
    'wbmp',
    'webm',
    'webp',
    'wmv',
    'wpg',
    'xbm',
    'xpm',
    'xv',
    'yaml',
    'ycbcr',
    'ycbcra',
    'yuv',
  ]
export const INKSCAPE_EXPORT_FORMAT: ReadonlyArray<InkscapeExportFormat> =
  ['svg', 'png', 'ps', 'eps', 'pdf', 'emf', 'wmf', 'xaml']
export const INKSCAPE_IMPORT_FORMAT: ReadonlyArray<InkscapeImportFormat> =
  ['ai']
export const LIBRE_OFFICE_INPUT_FORMAT: ReadonlyArray<LibreOfficeInputFormat> =
  [
    'html',
    'mediawiki',
    'csv',
    'pptx',
    'ppt',
    'docx',
    'doc',
    'pdf',
    'wmf',
    'emf',
    'svg',
    'xlsx',
    'xls',
  ]
export const LIBRE_OFFICE_OUTPUT_FORMAT: ReadonlyArray<LibreOfficeOutputFormat> =
  [
    'html',
    'mediawiki',
    'csv',
    'pptx',
    'ppt',
    'wmf',
    'emf',
    'svg',
    'xlsx',
    'xls',
    'epub',
    'pdf',
  ]
export const LLVM_ARCHITECTURE: ReadonlyArray<LlvmArchitecture> = [
  'aarch64',
  'aarch64_32',
  'aarch64_be',
  'amdgcn',
  'arm',
  'arm64',
  'arm64_32',
  'armeb',
  'avr',
  'bpf',
  'bpfeb',
  'bpfel',
  'hexagon',
  'lanai',
  'mips',
  'mips64',
  'mips64el',
  'mipsel',
  'msp430',
  'nvptx',
  'nvptx64',
  'ppc32',
  'ppc64',
  'ppc64le',
  'r600',
  'riscv32',
  'riscv64',
  'sparc',
  'sparcel',
  'sparcv9',
  'systemz',
  'thumb',
  'thumbeb',
  'wasm32',
  'wasm64',
  'x86',
  'x86_64',
  'xcore',
]
export const LLVM_CPU: ReadonlyArray<LlvmCpu> = [
  '440',
  '450',
  '601',
  '602',
  '603',
  '604',
  '620',
  '750',
  '970',
  '7400',
  '7450',
  'a_64_fx',
  'apple_a_10',
  'apple_a_11',
  'apple_a_12',
  'apple_a_13',
  'apple_a_7',
  'apple_a_8',
  'apple_a_9',
  'apple_latest',
  'apple_s_4',
  'apple_s_5',
  'carmel',
  'cortex_a_34',
  'cortex_a_35',
  'cortex_a_53',
  'cortex_a_55',
  'cortex_a_57',
  'cortex_a_65',
  'cortex_a_65_ae',
  'cortex_a_72',
  'cortex_a_73',
  'cortex_a_75',
  'cortex_a_76',
  'cortex_a_76_ae',
  'cortex_a_77',
  'cortex_a_78',
  'cortex_x_1',
  'cyclone',
  'exynos_m_3',
  'exynos_m_4',
  'exynos_m_5',
  'falkor',
  'generic',
  'kryo',
  'neoverse_e_1',
  'neoverse_n_1',
  'saphira',
  'thunderx',
  'thunderx_2_t_99',
  'thunderx_3_t_110',
  'thunderxt_81',
  'thunderxt_83',
  'thunderxt_88',
  'tsv_110',
  'bonaire',
  'carrizo',
  'fiji',
  'generic_hsa',
  'gfx_1010',
  'gfx_1011',
  'gfx_1012',
  'gfx_1030',
  'gfx_600',
  'gfx_601',
  'gfx_700',
  'gfx_701',
  'gfx_702',
  'gfx_703',
  'gfx_704',
  'gfx_801',
  'gfx_802',
  'gfx_803',
  'gfx_810',
  'gfx_900',
  'gfx_902',
  'gfx_904',
  'gfx_906',
  'gfx_908',
  'gfx_909',
  'hainan',
  'hawaii',
  'iceland',
  'kabini',
  'kaveri',
  'mullins',
  'oland',
  'pitcairn',
  'polaris_10',
  'polaris_11',
  'stoney',
  'tahiti',
  'tonga',
  'verde',
  'arm_1020_e',
  'arm_1020_t',
  'arm_1022_e',
  'arm_10_e',
  'arm_10_tdmi',
  'arm_1136_j_s',
  'arm_1136_jf_s',
  'arm_1156_t_2_s',
  'arm_1156_t_2_f_s',
  'arm_1176_j_s',
  'arm_1176_jz_s',
  'arm_1176_jzf_s',
  'arm_710_t',
  'arm_720_t',
  'arm_7_tdmi',
  'arm_7_tdmi_s',
  'arm_8',
  'arm_810',
  'arm_9',
  'arm_920',
  'arm_920_t',
  'arm_922_t',
  'arm_926_ej_s',
  'arm_940_t',
  'arm_946_e_s',
  'arm_966_e_s',
  'arm_968_e_s',
  'arm_9_e',
  'arm_9_tdmi',
  'cortex_a_12',
  'cortex_a_15',
  'cortex_a_17',
  'cortex_a_32',
  'cortex_a_5',
  'cortex_a_7',
  'cortex_a_8',
  'cortex_a_9',
  'cortex_m_0',
  'cortex_m_0_plus',
  'cortex_m_1',
  'cortex_m_23',
  'cortex_m_3',
  'cortex_m_33',
  'cortex_m_35_p',
  'cortex_m_4',
  'cortex_m_55',
  'cortex_m_7',
  'cortex_r_4',
  'cortex_r_4_f',
  'cortex_r_5',
  'cortex_r_52',
  'cortex_r_7',
  'cortex_r_8',
  'ep_9312',
  'iwmmxt',
  'krait',
  'mpcore',
  'mpcorenovfp',
  'sc_000',
  'sc_300',
  'strongarm',
  'strongarm_110',
  'strongarm_1100',
  'strongarm_1110',
  'swift',
  'xscale',
  'at_43_usb_320',
  'at_43_usb_355',
  'at_76_c_711',
  'at_86_rf_401',
  'at_90_c_8534',
  'at_90_can_128',
  'at_90_can_32',
  'at_90_can_64',
  'at_90_pwm_1',
  'at_90_pwm_161',
  'at_90_pwm_2',
  'at_90_pwm_216',
  'at_90_pwm_2_b',
  'at_90_pwm_3',
  'at_90_pwm_316',
  'at_90_pwm_3_b',
  'at_90_pwm_81',
  'at_90_s_1200',
  'at_90_s_2313',
  'at_90_s_2323',
  'at_90_s_2333',
  'at_90_s_2343',
  'at_90_s_4414',
  'at_90_s_4433',
  'at_90_s_4434',
  'at_90_s_8515',
  'at_90_s_8535',
  'at_90_scr_100',
  'at_90_usb_1286',
  'at_90_usb_1287',
  'at_90_usb_162',
  'at_90_usb_646',
  'at_90_usb_647',
  'at_90_usb_82',
  'at_94_k',
  'ata_5272',
  'ata_5505',
  'ata_5790',
  'ata_5795',
  'ata_6285',
  'ata_6286',
  'ata_6289',
  'atmega_103',
  'atmega_128',
  'atmega_1280',
  'atmega_1281',
  'atmega_1284',
  'atmega_1284_p',
  'atmega_1284_rfr_2',
  'atmega_128_a',
  'atmega_128_rfa_1',
  'atmega_128_rfr_2',
  'atmega_16',
  'atmega_161',
  'atmega_162',
  'atmega_163',
  'atmega_164_a',
  'atmega_164_p',
  'atmega_164_pa',
  'atmega_165',
  'atmega_165_a',
  'atmega_165_p',
  'atmega_165_pa',
  'atmega_168',
  'atmega_168_a',
  'atmega_168_p',
  'atmega_168_pa',
  'atmega_169',
  'atmega_169_a',
  'atmega_169_p',
  'atmega_169_pa',
  'atmega_16_a',
  'atmega_16_hva',
  'atmega_16_hva_2',
  'atmega_16_hvb',
  'atmega_16_hvbrevb',
  'atmega_16_m_1',
  'atmega_16_u_2',
  'atmega_16_u_4',
  'atmega_2560',
  'atmega_2561',
  'atmega_2564_rfr_2',
  'atmega_256_rfr_2',
  'atmega_32',
  'atmega_323',
  'atmega_324_a',
  'atmega_324_p',
  'atmega_324_pa',
  'atmega_325',
  'atmega_3250',
  'atmega_3250_a',
  'atmega_3250_p',
  'atmega_3250_pa',
  'atmega_325_a',
  'atmega_325_p',
  'atmega_325_pa',
  'atmega_328',
  'atmega_328_p',
  'atmega_329',
  'atmega_3290',
  'atmega_3290_a',
  'atmega_3290_p',
  'atmega_3290_pa',
  'atmega_329_a',
  'atmega_329_p',
  'atmega_329_pa',
  'atmega_32_a',
  'atmega_32_c_1',
  'atmega_32_hvb',
  'atmega_32_hvbrevb',
  'atmega_32_m_1',
  'atmega_32_u_2',
  'atmega_32_u_4',
  'atmega_32_u_6',
  'atmega_406',
  'atmega_48',
  'atmega_48_a',
  'atmega_48_p',
  'atmega_48_pa',
  'atmega_64',
  'atmega_640',
  'atmega_644',
  'atmega_644_a',
  'atmega_644_p',
  'atmega_644_pa',
  'atmega_644_rfr_2',
  'atmega_645',
  'atmega_6450',
  'atmega_6450_a',
  'atmega_6450_p',
  'atmega_645_a',
  'atmega_645_p',
  'atmega_649',
  'atmega_6490',
  'atmega_6490_a',
  'atmega_6490_p',
  'atmega_649_a',
  'atmega_649_p',
  'atmega_64_a',
  'atmega_64_c_1',
  'atmega_64_hve',
  'atmega_64_m_1',
  'atmega_64_rfr_2',
  'atmega_8',
  'atmega_8515',
  'atmega_8535',
  'atmega_88',
  'atmega_88_a',
  'atmega_88_p',
  'atmega_88_pa',
  'atmega_8_a',
  'atmega_8_hva',
  'atmega_8_u_2',
  'attiny_10',
  'attiny_102',
  'attiny_104',
  'attiny_11',
  'attiny_12',
  'attiny_13',
  'attiny_13_a',
  'attiny_15',
  'attiny_1634',
  'attiny_167',
  'attiny_20',
  'attiny_22',
  'attiny_2313',
  'attiny_2313_a',
  'attiny_24',
  'attiny_24_a',
  'attiny_25',
  'attiny_26',
  'attiny_261',
  'attiny_261_a',
  'attiny_28',
  'attiny_4',
  'attiny_40',
  'attiny_4313',
  'attiny_43_u',
  'attiny_44',
  'attiny_44_a',
  'attiny_45',
  'attiny_461',
  'attiny_461_a',
  'attiny_48',
  'attiny_5',
  'attiny_828',
  'attiny_84',
  'attiny_84_a',
  'attiny_85',
  'attiny_861',
  'attiny_861_a',
  'attiny_87',
  'attiny_88',
  'attiny_9',
  'atxmega_128_a_1',
  'atxmega_128_a_1_u',
  'atxmega_128_a_3',
  'atxmega_128_a_3_u',
  'atxmega_128_a_4_u',
  'atxmega_128_b_1',
  'atxmega_128_b_3',
  'atxmega_128_c_3',
  'atxmega_128_d_3',
  'atxmega_128_d_4',
  'atxmega_16_a_4',
  'atxmega_16_a_4_u',
  'atxmega_16_c_4',
  'atxmega_16_d_4',
  'atxmega_16_e_5',
  'atxmega_192_a_3',
  'atxmega_192_a_3_u',
  'atxmega_192_c_3',
  'atxmega_192_d_3',
  'atxmega_256_a_3',
  'atxmega_256_a_3_b',
  'atxmega_256_a_3_bu',
  'atxmega_256_a_3_u',
  'atxmega_256_c_3',
  'atxmega_256_d_3',
  'atxmega_32_a_4',
  'atxmega_32_a_4_u',
  'atxmega_32_c_4',
  'atxmega_32_d_4',
  'atxmega_32_e_5',
  'atxmega_32_x_1',
  'atxmega_384_c_3',
  'atxmega_384_d_3',
  'atxmega_64_a_1',
  'atxmega_64_a_1_u',
  'atxmega_64_a_3',
  'atxmega_64_a_3_u',
  'atxmega_64_a_4_u',
  'atxmega_64_b_1',
  'atxmega_64_b_3',
  'atxmega_64_c_3',
  'atxmega_64_d_3',
  'atxmega_64_d_4',
  'atxmega_8_e_5',
  'avr_1',
  'avr_2',
  'avr_25',
  'avr_3',
  'avr_31',
  'avr_35',
  'avr_4',
  'avr_5',
  'avr_51',
  'avr_6',
  'avrtiny',
  'avrxmega_1',
  'avrxmega_2',
  'avrxmega_3',
  'avrxmega_4',
  'avrxmega_5',
  'avrxmega_6',
  'avrxmega_7',
  'm_3000',
  'probe',
  'v_1',
  'v_2',
  'v_3',
  'hexagonv_5',
  'hexagonv_55',
  'hexagonv_60',
  'hexagonv_62',
  'hexagonv_65',
  'hexagonv_66',
  'hexagonv_67',
  'hexagonv_67_t',
  'mips_1',
  'mips_2',
  'mips_3',
  'mips_32',
  'mips_32_r_2',
  'mips_32_r_3',
  'mips_32_r_5',
  'mips_32_r_6',
  'mips_4',
  'mips_5',
  'mips_64',
  'mips_64_r_2',
  'mips_64_r_3',
  'mips_64_r_5',
  'mips_64_r_6',
  'octeon',
  'p_5600',
  'msp_430',
  'msp_430_x',
  'sm_20',
  'sm_21',
  'sm_30',
  'sm_32',
  'sm_35',
  'sm_37',
  'sm_50',
  'sm_52',
  'sm_53',
  'sm_60',
  'sm_61',
  'sm_62',
  'sm_70',
  'sm_72',
  'sm_75',
  'sm_80',
  '603_e',
  '603_ev',
  '604_e',
  'a_2',
  'a_2_q',
  'e_500',
  'e_500_mc',
  'e_5500',
  'future',
  'g_3',
  'g_4',
  'g_5',
  'ppc',
  'ppc_32',
  'ppc_64',
  'ppc_64_le',
  'pwr_10',
  'pwr_3',
  'pwr_4',
  'pwr_5',
  'pwr_5_x',
  'pwr_6',
  'pwr_6_x',
  'pwr_7',
  'pwr_8',
  'pwr_9',
  'barts',
  'caicos',
  'cayman',
  'cedar',
  'cypress',
  'juniper',
  'r_600',
  'r_630',
  'redwood',
  'rs_880',
  'rv_670',
  'rv_710',
  'rv_730',
  'rv_770',
  'sumo',
  'turks',
  'generic_rv_32',
  'generic_rv_64',
  'rocket_rv_32',
  'rocket_rv_64',
  'sifive_e_31',
  'sifive_u_54',
  'at_697_e',
  'at_697_f',
  'f_934',
  'gr_712_rc',
  'gr_740',
  'hypersparc',
  'leon_2',
  'leon_3',
  'leon_4',
  'ma_2080',
  'ma_2085',
  'ma_2100',
  'ma_2150',
  'ma_2155',
  'ma_2450',
  'ma_2455',
  'ma_2480',
  'ma_2485',
  'ma_2_x_5_x',
  'ma_2_x_8_x',
  'myriad_2',
  'myriad_2_1',
  'myriad_2_2',
  'myriad_2_3',
  'niagara',
  'niagara_2',
  'niagara_3',
  'niagara_4',
  'sparclet',
  'sparclite',
  'sparclite_86_x',
  'supersparc',
  'tsc_701',
  'ultrasparc',
  'ultrasparc_3',
  'ut_699',
  'v_7',
  'v_8',
  'v_9',
  'arch_10',
  'arch_11',
  'arch_12',
  'arch_13',
  'arch_8',
  'arch_9',
  'z_10',
  'z_13',
  'z_14',
  'z_15',
  'z_196',
  'z_ec_12',
  'bleeding_edge',
  'mvp',
  'amdfam_10',
  'athlon',
  'athlon_4',
  'athlon_fx',
  'athlon_mp',
  'athlon_tbird',
  'athlon_xp',
  'athlon_64',
  'athlon_64_sse_3',
  'atom',
  'barcelona',
  'bdver_1',
  'bdver_2',
  'bdver_3',
  'bdver_4',
  'bonnell',
  'broadwell',
  'btver_1',
  'btver_2',
  'c_3',
  'c_3_2',
  'cannonlake',
  'cascadelake',
  'cooperlake',
  'core_avx_i',
  'core_avx_2',
  'core_2',
  'corei_7',
  'corei_7_avx',
  'geode',
  'goldmont',
  'goldmont_plus',
  'haswell',
  'i_386',
  'i_486',
  'i_586',
  'i_686',
  'icelake_client',
  'icelake_server',
  'ivybridge',
  'k_6',
  'k_6_2',
  'k_6_3',
  'k_8',
  'k_8_sse_3',
  'knl',
  'knm',
  'lakemont',
  'nehalem',
  'nocona',
  'opteron',
  'opteron_sse_3',
  'penryn',
  'pentium',
  'pentium_m',
  'pentium_mmx',
  'pentium_2',
  'pentium_3',
  'pentium_3_m',
  'pentium_4',
  'pentium_4_m',
  'pentiumpro',
  'prescott',
  'sandybridge',
  'silvermont',
  'skx',
  'skylake',
  'skylake_avx_512',
  'slm',
  'tigerlake',
  'tremont',
  'westmere',
  'winchip_c_6',
  'winchip_2',
  'x_86_64',
  'yonah',
  'znver_1',
  'znver_2',
]
export const LLVM_FEATURE: ReadonlyArray<LlvmFeature> = [
  'a_35',
  'a_53',
  'a_55',
  'a_57',
  'a_64_fx',
  'a_65',
  'a_72',
  'a_73',
  'a_75',
  'a_76',
  'a_77',
  'aes',
  'aggressive_fma',
  'alternate_sextload_cvt_f_32_pattern',
  'altnzcv',
  'am',
  'amvs',
  'apple_a_10',
  'apple_a_11',
  'apple_a_12',
  'apple_a_13',
  'apple_a_7',
  'arith_bcc_fusion',
  'arith_cbz_fusion',
  'balance_fp_ops',
  'bf_16',
  'bti',
  'call_saved_x_10',
  'call_saved_x_11',
  'call_saved_x_12',
  'call_saved_x_13',
  'call_saved_x_14',
  'call_saved_x_15',
  'call_saved_x_18',
  'call_saved_x_8',
  'call_saved_x_9',
  'carmel',
  'ccdp',
  'ccidx',
  'ccpp',
  'complxnum',
  'cortex_a_78',
  'cortex_x_1',
  'crc',
  'crypto',
  'custom_cheap_as_move',
  'disable_latency_sched_heuristic',
  'dit',
  'dotprod',
  'ecv',
  'ete',
  'exynos_cheap_as_move',
  'exynosm_3',
  'exynosm_4',
  'f_32_mm',
  'f_64_mm',
  'falkor',
  'fgt',
  'fmi',
  'force_32_bit_jump_tables',
  'fp_armv_8',
  'fp_16_fml',
  'fptoint',
  'fullfp_16',
  'fuse_address',
  'fuse_aes',
  'fuse_arith_logic',
  'fuse_crypto_eor',
  'fuse_csel',
  'fuse_literals',
  'harden_sls_blr',
  'harden_sls_retbr',
  'i_8_mm',
  'jsconv',
  'kryo',
  'lor',
  'lse',
  'lsl_fast',
  'mpam',
  'mte',
  'neon',
  'neoversee_1',
  'neoversen_1',
  'no_neg_immediates',
  'nv',
  'pa',
  'pan',
  'pan_rwv',
  'perfmon',
  'pmu',
  'predictable_select_expensive',
  'predres',
  'rand',
  'ras',
  'rasv_8_4',
  'rcpc',
  'rcpc_immo',
  'rdm',
  'reserve_x_1',
  'reserve_x_10',
  'reserve_x_11',
  'reserve_x_12',
  'reserve_x_13',
  'reserve_x_14',
  'reserve_x_15',
  'reserve_x_18',
  'reserve_x_2',
  'reserve_x_20',
  'reserve_x_21',
  'reserve_x_22',
  'reserve_x_23',
  'reserve_x_24',
  'reserve_x_25',
  'reserve_x_26',
  'reserve_x_27',
  'reserve_x_28',
  'reserve_x_3',
  'reserve_x_30',
  'reserve_x_4',
  'reserve_x_5',
  'reserve_x_6',
  'reserve_x_7',
  'reserve_x_9',
  'saphira',
  'sb',
  'sel_2',
  'sha_2',
  'sha_3',
  'slow_misaligned_128_store',
  'slow_paired_128',
  'slow_strqro_store',
  'sm_4',
  'spe',
  'specrestrict',
  'ssbs',
  'strict_align',
  'sve',
  'sve_2',
  'sve_2_aes',
  'sve_2_bitperm',
  'sve_2_sha_3',
  'sve_2_sm_4',
  'tagged_globals',
  'thunderx',
  'thunderx_2_t_99',
  'thunderx_3_t_110',
  'thunderxt_81',
  'thunderxt_83',
  'thunderxt_88',
  'tlb_rmi',
  'tme',
  'tpidr_el_1',
  'tpidr_el_2',
  'tpidr_el_3',
  'tracev_8_4',
  'trbe',
  'tsv_110',
  'uaops',
  'use_aa',
  'use_experimental_zeroing_pseudos',
  'use_postra_scheduler',
  'use_reciprocal_square_root',
  'v_8_1_a',
  'v_8_2_a',
  'v_8_3_a',
  'v_8_4_a',
  'v_8_5_a',
  'v_8_6_a',
  'vh',
  'zcm',
  'zcz',
  'zcz_fp',
  'zcz_fp_workaround',
  'zcz_gp',
  '16_bit_insts',
  'dump_code',
  'a_16',
  'add_no_carry_insts',
  'aperture_regs',
  'atomic_fadd_insts',
  'auto_waitcnt_before_barrier',
  'ci_insts',
  'code_object_v_3',
  'cumode',
  'dl_insts',
  'dot_1_insts',
  'dot_2_insts',
  'dot_3_insts',
  'dot_4_insts',
  'dot_5_insts',
  'dot_6_insts',
  'dpp',
  'dpp_8',
  'ds_src_2_insts',
  'dumpcode',
  'enable_ds_128',
  'enable_prt_strict_null',
  'fast_denormal_f_32',
  'fast_fmaf',
  'flat_address_space',
  'flat_for_global',
  'flat_global_insts',
  'flat_inst_offsets',
  'flat_scratch_insts',
  'flat_segment_offset_bug',
  'fma_mix_insts',
  'fmaf',
  'fp_64',
  'g_16',
  'gcn_3_encoding',
  'get_wave_id_inst',
  'gfx_10',
  'gfx_10_3_insts',
  'gfx_10_insts',
  'gfx_10_b_encoding',
  'gfx_7_gfx_8_gfx_9_insts',
  'gfx_8_insts',
  'gfx_9',
  'gfx_9_insts',
  'half_rate_64_ops',
  'inst_fwd_prefetch_bug',
  'int_clamp_insts',
  'inv_2_pi_inline_imm',
  'lds_branch_vmem_war_hazard',
  'lds_misaligned_bug',
  'ldsbankcount_16',
  'ldsbankcount_32',
  'load_store_opt',
  'localmemorysize_0',
  'localmemorysize_32768',
  'localmemorysize_65536',
  'mad_mac_f_32_insts',
  'mad_mix_insts',
  'mai_insts',
  'max_private_element_size_16',
  'max_private_element_size_4',
  'max_private_element_size_8',
  'mfma_inline_literal_bug',
  'mimg_r_128',
  'movrel',
  'no_data_dep_hazard',
  'no_sdst_cmpx',
  'no_sram_ecc_support',
  'no_xnack_support',
  'nsa_encoding',
  'nsa_to_vmem_bug',
  'offset_3_f_bug',
  'pk_fmac_f_16_inst',
  'promote_alloca',
  'r_128_a_16',
  'register_banking',
  's_memrealtime',
  's_memtime_inst',
  'scalar_atomics',
  'scalar_flat_scratch_insts',
  'scalar_stores',
  'sdwa',
  'sdwa_mav',
  'sdwa_omod',
  'sdwa_out_mods_vopc',
  'sdwa_scalar',
  'sdwa_sdst',
  'sea_islands',
  'sgpr_init_bug',
  'si_scheduler',
  'smem_to_vector_write_hazard',
  'southern_islands',
  'sram_ecc',
  'trap_handler',
  'trig_reduced_range',
  'unaligned_buffer_access',
  'unaligned_scratch_access',
  'unpacked_d_16_vmem',
  'unsafe_ds_offset_folding',
  'vcmpx_exec_war_hazard',
  'vcmpx_permlane_hazard',
  'vgpr_index_mode',
  'vmem_to_scalar_write_hazard',
  'volcanic_islands',
  'vop_3_literal',
  'vop_3_p',
  'vscnt',
  'wavefrontsize_16',
  'wavefrontsize_32',
  'wavefrontsize_64',
  'xnack',
  '32_bit',
  '8_msecext',
  'a_12',
  'a_15',
  'a_17',
  'a_32',
  'a_5',
  'a_7',
  'a_8',
  'a_9',
  'aclass',
  'acquire_release',
  'armv_2',
  'armv_2_a',
  'armv_3',
  'armv_3_m',
  'armv_4',
  'armv_4_t',
  'armv_5_t',
  'armv_5_te',
  'armv_5_tej',
  'armv_6',
  'armv_6_m',
  'armv_6_j',
  'armv_6_k',
  'armv_6_kz',
  'armv_6_s_m',
  'armv_6_t_2',
  'armv_7_a',
  'armv_7_m',
  'armv_7_r',
  'armv_7_e_m',
  'armv_7_k',
  'armv_7_s',
  'armv_7_ve',
  'armv_8_a',
  'armv_8_m_base',
  'armv_8_m_main',
  'armv_8_r',
  'armv_8_1_a',
  'armv_8_1_m_main',
  'armv_8_2_a',
  'armv_8_3_a',
  'armv_8_4_a',
  'armv_8_5_a',
  'armv_8_6_a',
  'avoid_movs_shop',
  'avoid_partial_cpsr',
  'cde',
  'cdecp_0',
  'cdecp_1',
  'cdecp_2',
  'cdecp_3',
  'cdecp_4',
  'cdecp_5',
  'cdecp_6',
  'cdecp_7',
  'cheap_predicable_cpsr',
  'd_32',
  'db',
  'dfb',
  'disable_postra_scheduler',
  'dont_widen_vmovs',
  'dsp',
  'execute_only',
  'expand_fp_mlx',
  'exynos',
  'fp_armv_8_d_16',
  'fp_armv_8_d_16_sp',
  'fp_armv_8_sp',
  'fp_16',
  'fpao',
  'fpregs',
  'fpregs_16',
  'fpregs_64',
  'hwdiv',
  'hwdiv_arm',
  'iwmmxt',
  'iwmmxt_2',
  'krait',
  'lob',
  'long_calls',
  'loop_align',
  'm_3',
  'mclass',
  'mp',
  'muxed_units',
  'mve',
  'mve_fp',
  'mve_1_beat',
  'mve_2_beat',
  'mve_4_beat',
  'nacl_trap',
  'neon_fpmovs',
  'neonfp',
  'no_branch_predictor',
  'no_movt',
  'noarm',
  'nonpipelined_vfp',
  'prefer_ishst',
  'prefer_vmovsr',
  'prof_unpr',
  'r_4',
  'r_5',
  'r_52',
  'r_7',
  'rclass',
  'read_tp_hard',
  'reserve_r_9',
  'ret_addr_stack',
  'slow_fp_brcc',
  'slow_load_d_subreg',
  'slow_odd_reg',
  'slow_vdup_32',
  'slow_vgetlni_32',
  'slowfpvfmx',
  'slowfpvmlx',
  'soft_float',
  'splat_vfp_neon',
  'swift',
  'thumb_mode',
  'thumb_2',
  'trustzone',
  'use_misched',
  'v_4_t',
  'v_5_t',
  'v_5_te',
  'v_6',
  'v_6_k',
  'v_6_m',
  'v_6_t_2',
  'v_7',
  'v_7_clrex',
  'v_8',
  'v_8_1_m_main',
  'v_8_m',
  'v_8_m_main',
  'vfp_2',
  'vfp_2_sp',
  'vfp_3',
  'vfp_3_d_16',
  'vfp_3_d_16_sp',
  'vfp_3_sp',
  'vfp_4',
  'vfp_4_d_16',
  'vfp_4_d_16_sp',
  'vfp_4_sp',
  'virtualization',
  'vldn_align',
  'vmlx_forwarding',
  'vmlx_hazards',
  'wide_stride_vfp',
  'xscale',
  'addsubiw',
  'avr_0',
  'avr_1',
  'avr_2',
  'avr_25',
  'avr_3',
  'avr_31',
  'avr_35',
  'avr_4',
  'avr_5',
  'avr_51',
  'avr_6',
  'avrtiny',
  'break',
  'des',
  'eijmpcall',
  'elpm',
  'elpmx',
  'ijmpcall',
  'jmpcall',
  'lpm',
  'lpmx',
  'memmappedregs',
  'movw',
  'mul',
  'rmw',
  'smallstack',
  'special',
  'spm',
  'spmx',
  'sram',
  'tinyencoding',
  'xmega',
  'xmegau',
  'alu_32',
  'dummy',
  'dwarfris',
  'audio',
  'compound',
  'duplex',
  'hvx',
  'hvx_length_128_b',
  'hvx_length_64_b',
  'hvxv_60',
  'hvxv_62',
  'hvxv_65',
  'hvxv_66',
  'hvxv_67',
  'mem_noshuf',
  'memops',
  'noreturn_stack_elim',
  'nvj',
  'nvs',
  'packets',
  'prev_65',
  'reserved_r_19',
  'small_data',
  'tinycore',
  'unsafe_fp',
  'v_5',
  'v_55',
  'v_60',
  'v_62',
  'v_65',
  'v_66',
  'v_67',
  'zreg',
  'abs_2008',
  'cnmips',
  'cnmipsp',
  'dspr_2',
  'dspr_3',
  'eva',
  'fpxx',
  'ginv',
  'gp_64',
  'micromips',
  'mips_1',
  'mips_16',
  'mips_2',
  'mips_3',
  'mips_32',
  'mips_32_r_2',
  'mips_32_r_3',
  'mips_32_r_5',
  'mips_32_r_6',
  'mips_3_32',
  'mips_3_32_r_2',
  'mips_3_d',
  'mips_4',
  'mips_4_32',
  'mips_4_32_r_2',
  'mips_5',
  'mips_5_32_r_2',
  'mips_64',
  'mips_64_r_2',
  'mips_64_r_3',
  'mips_64_r_5',
  'mips_64_r_6',
  'msa',
  'mt',
  'nan_2008',
  'noabicalls',
  'nomadd_4',
  'nooddspreg',
  'p_5600',
  'ptr_64',
  'single_float',
  'sym_32',
  'use_indirect_jump_hazard',
  'use_tcc_in_div',
  'vfpu',
  'virt',
  'xgot',
  'ext',
  'hwmult_16',
  'hwmult_32',
  'hwmultf_5',
  'ptx_32',
  'ptx_40',
  'ptx_41',
  'ptx_42',
  'ptx_43',
  'ptx_50',
  'ptx_60',
  'ptx_61',
  'ptx_63',
  'ptx_64',
  'ptx_65',
  'ptx_70',
  'sm_20',
  'sm_21',
  'sm_30',
  'sm_32',
  'sm_35',
  'sm_37',
  'sm_50',
  'sm_52',
  'sm_53',
  'sm_60',
  'sm_61',
  'sm_62',
  'sm_70',
  'sm_72',
  'sm_75',
  'sm_80',
  '64_bit',
  '64_bitregs',
  'allow_unaligned_fp_access',
  'altivec',
  'booke',
  'bpermd',
  'cmpb',
  'crbits',
  'direct_move',
  'e_500',
  'extdiv',
  'fcpsgn',
  'float_128',
  'fpcvt',
  'fprnd',
  'fpu',
  'fre',
  'fres',
  'frsqrte',
  'frsqrtes',
  'fsqrt',
  'fuse_addi_load',
  'fuse_addis_load',
  'fusion',
  'hard_float',
  'htm',
  'icbt',
  'invariant_function_descriptors',
  'isa_v_30_instructions',
  'isa_v_31_instructions',
  'isel',
  'ldbrx',
  'lfiwax',
  'longcall',
  'mfocrf',
  'msync',
  'partword_atomics',
  'pcrelative_memops',
  'popcntd',
  'power_10_vector',
  'power_8_altivec',
  'power_8_vector',
  'power_9_altivec',
  'power_9_vector',
  'ppc_postra_sched',
  'ppc_prera_sched',
  'ppc_4_xx',
  'ppc_6_xx',
  'prefix_instrs',
  'qpx',
  'recipprec',
  'secure_plt',
  'slow_popcntd',
  'stfiwx',
  'two_const_nr',
  'vectors_use_two_units',
  'vsx',
  'has_vertex_cache',
  'r_600_alu_inst',
  'cayman_isa',
  'cfalubug',
  'evergreen',
  'fetch_16',
  'fetch_8',
  'northern_islands',
  'r_600',
  'r_700',
  'a',
  'c',
  'd',
  'e',
  'experimental_b',
  'experimental_v',
  'experimental_zbb',
  'experimental_zbc',
  'experimental_zbe',
  'experimental_zbf',
  'experimental_zbm',
  'experimental_zbp',
  'experimental_zbproposedc',
  'experimental_zbr',
  'experimental_zbs',
  'experimental_zbt',
  'f',
  'm',
  'no_rvc_hints',
  'relax',
  'reserve_x_16',
  'reserve_x_17',
  'reserve_x_19',
  'reserve_x_29',
  'reserve_x_31',
  'reserve_x_8',
  'save_restore',
  'deprecated_v_8',
  'detectroundchange',
  'fixallfdivsqrt',
  'hard_quad_float',
  'hasleoncasa',
  'hasumacsmac',
  'insertnopload',
  'leon',
  'leoncyclecounter',
  'leonpwrpsr',
  'no_fmuls',
  'no_fsmuld',
  'popc',
  'soft_mul_div',
  'v_9',
  'vis',
  'vis_2',
  'vis_3',
  'deflate_conversion',
  'dfp_packed_conversion',
  'dfp_zoned_conversion',
  'distinct_ops',
  'enhanced_dat_2',
  'enhanced_sort',
  'execution_hint',
  'fast_serialization',
  'fp_extension',
  'guarded_storage',
  'high_word',
  'insert_reference_bits_multiple',
  'interlocked_access_1',
  'load_and_trap',
  'load_and_zero_rightmost_byte',
  'load_store_on_cond',
  'load_store_on_cond_2',
  'message_security_assist_extension_3',
  'message_security_assist_extension_4',
  'message_security_assist_extension_5',
  'message_security_assist_extension_7',
  'message_security_assist_extension_8',
  'message_security_assist_extension_9',
  'miscellaneous_extensions',
  'miscellaneous_extensions_2',
  'miscellaneous_extensions_3',
  'population_count',
  'processor_assist',
  'reset_reference_bits_multiple',
  'transactional_execution',
  'vector',
  'vector_enhancements_1',
  'vector_enhancements_2',
  'vector_packed_decimal',
  'vector_packed_decimal_enhancement',
  'atomics',
  'bulk_memory',
  'exception_handling',
  'multivalue',
  'mutable_globals',
  'nontrapping_fptoint',
  'reference_types',
  'sign_ext',
  'simd_128',
  'tail_call',
  'unimplemented_simd_128',
  '16_bit_mode',
  '32_bit_mode',
  '3_dnow',
  '3_dnowa',
  '64_bit_mode',
  'adx',
  'amx_bf_16',
  'amx_int_8',
  'amx_tile',
  'avx',
  'avx_2',
  'avx_512_bf_16',
  'avx_512_bitalg',
  'avx_512_bw',
  'avx_512_cd',
  'avx_512_dq',
  'avx_512_er',
  'avx_512_f',
  'avx_512_ifma',
  'avx_512_pf',
  'avx_512_vbmi',
  'avx_512_vbmi_2',
  'avx_512_vl',
  'avx_512_vnni',
  'avx_512_vp_2_intersect',
  'avx_512_vpopcntdq',
  'bmi',
  'bmi_2',
  'branchfusion',
  'cldemote',
  'clflushopt',
  'clwb',
  'clzero',
  'cmov',
  'cx_16',
  'cx_8',
  'enqcmd',
  'ermsb',
  'f_16_c',
  'false_deps_lzcnt_tzcnt',
  'false_deps_popcnt',
  'fast_11_bytenop',
  'fast_15_bytenop',
  'fast_7_bytenop',
  'fast_bextr',
  'fast_gather',
  'fast_hops',
  'fast_lzcnt',
  'fast_scalar_fsqrt',
  'fast_scalar_shift_masks',
  'fast_shld_rotate',
  'fast_variable_shuffle',
  'fast_vector_fsqrt',
  'fast_vector_shift_masks',
  'fma',
  'fma_4',
  'fsgsbase',
  'fxsr',
  'gfni',
  'idivl_to_divb',
  'idivq_to_divl',
  'invpcid',
  'lea_sp',
  'lea_uses_ag',
  'lvi_cfi',
  'lvi_load_hardening',
  'lwp',
  'lzcnt',
  'macrofusion',
  'merge_to_threeway_branch',
  'mmx',
  'movbe',
  'movdir_64_b',
  'movdiri',
  'mpx',
  'mwaitx',
  'nopl',
  'pad_short_functions',
  'pclmul',
  'pconfig',
  'pku',
  'popcnt',
  'prefer_128_bit',
  'prefer_256_bit',
  'prefer_mask_registers',
  'prefetchwt_1',
  'prfchw',
  'ptwrite',
  'rdpid',
  'rdrnd',
  'rdseed',
  'retpoline',
  'retpoline_external_thunk',
  'retpoline_indirect_branches',
  'retpoline_indirect_calls',
  'rtm',
  'sahf',
  'serialize',
  'seses',
  'sgx',
  'sha',
  'shstk',
  'slow_3_ops_lea',
  'slow_incdec',
  'slow_lea',
  'slow_pmaddwd',
  'slow_pmulld',
  'slow_shld',
  'slow_two_mem_ops',
  'slow_unaligned_mem_16',
  'slow_unaligned_mem_32',
  'sse',
  'sse_unaligned_mem',
  'sse_2',
  'sse_3',
  'sse_4_1',
  'sse_4_2',
  'sse_4_a',
  'ssse_3',
  'tbm',
  'tsxldtrk',
  'use_glm_div_sqrt_costs',
  'vaes',
  'vpclmulqdq',
  'vzeroupper',
  'waitpkg',
  'wbnoinvd',
  'x_87',
  'xop',
  'xsave',
  'xsavec',
  'xsaveopt',
  'xsaves',
]
export const LLVM_OPTIMIZATION_LEVEL: ReadonlyArray<LlvmOptimizationLevel> =
  ['0', '1', '2', '3']
export const OBJDUMP_DEMANGLE_STYLE: ReadonlyArray<ObjdumpDemangleStyle> =
  ['none', 'auto', 'gnu-v3', 'java', 'gnat', 'dlang', 'rust']
export const OBJDUMP_HIDE_OPTION: ReadonlyArray<ObjdumpHideOption> = [
  'address',
  'instruction_byte',
]
export const OBJDUMP_SHOW_OPTION: ReadonlyArray<ObjdumpShowOption> = [
  'archive_header',
  'debugging_info',
  'section_header_summary',
  'source_code',
  'all_header',
]
export const PANDOC_INPUT_FORMAT: ReadonlyArray<PandocInputFormat> = [
  'bibtex',
  'biblatex',
  'bits',
  'commonmark',
  'commonmark_x',
  'creole',
  'csljson',
  'csv',
  'tsv',
  'docbook',
  'docx',
  'dokuwiki',
  'endnotexml',
  'epub',
  'fb2',
  'gfm',
  'haddock',
  'html',
  'ipynb',
  'jats',
  'jira',
  'json',
  'latex',
  'markdown',
  'markdown_mmd',
  'markdown_phpextra',
  'markdown_strict',
  'mediawiki',
  'man',
  'muse',
  'native',
  'odt',
  'opml',
  'org',
  'ris',
  'rtf',
  'rst',
  't2t',
  'textile',
  'tikiwiki',
  'twiki',
  'typst',
  'vimwiki',
]
export const PANDOC_OUTPUT_FORMAT: ReadonlyArray<PandocOutputFormat> = [
  'asciidoc',
  'asciidoc_legacy',
  'asciidoctor',
  'beamer',
  'bibtex',
  'biblatex',
  'chunkedhtml',
  'commonmark',
  'commonmark_x',
  'context',
  'csljson',
  'docbook4',
  'docbook5',
  'docx',
  'dokuwiki',
  'epub3',
  'epub2',
  'fb2',
  'gfm',
  'haddock',
  'html5',
  'html4',
  'icml',
  'ipynb',
  'jats_archiving',
  'jats_articleauthoring',
  'jats_publishing',
  'jats',
  'jira',
  'json',
  'latex',
  'man',
  'markdown',
  'markdown_mmd',
  'markdown_phpextra',
  'markdown_strict',
  'markua',
  'mediawiki',
  'ms',
  'muse',
  'native',
  'odt',
  'opml',
  'opendocument',
  'org',
  'pdf',
  'plain',
  'pptx',
  'rst',
  'rtf',
  'texinfo',
  'textile',
  'slideous',
  'slidy',
  'dzslides',
  'revealjs',
  's5',
  'tei',
  'typst',
  'xwiki',
  'zimwiki',
]
export const PATOOL_FORMAT: ReadonlyArray<PatoolFormat> = [
  '7z',
  'ace',
  'adf',
  'alzip',
  'ape',
  'ar',
  'arc',
  'arj',
  'bzip2',
  'bzip3',
  'cab',
  'chm',
  'compress',
  'cpio',
  'deb',
  'dms',
  'flac',
  'gzip',
  'iso',
  'lrzip',
  'lzh',
  'lzip',
  'lzma',
  'lzop',
  'rpm',
  'rar',
  'rzip',
  'shn',
  'tar',
  'xz',
  'zip',
  'zoo',
  'zstandard',
]
export const PDF_LATEX_INPUT_FORMAT: ReadonlyArray<PdfLatexInputFormat> =
  ['tex']
export const PDF_LATEX_OUTPUT_FORMAT: ReadonlyArray<PdfLatexOutputFormat> =
  ['pdf']
export const PLEASANT_ADJECTIVE: ReadonlyArray<PleasantAdjective> = [
  'aged',
  'ancient',
  'autumn',
  'billowing',
  'bitter',
  'black',
  'blue',
  'bold',
  'broad',
  'broken',
  'calm',
  'cold',
  'cool',
  'crimson',
  'curly',
  'damp',
  'dark',
  'dawn',
  'delicate',
  'divine',
  'dry',
  'empty',
  'falling',
  'fancy',
  'flat',
  'floral',
  'fragrant',
  'frosty',
  'gentle',
  'green',
  'hidden',
  'holy',
  'icy',
  'jolly',
  'late',
  'lingering',
  'little',
  'lively',
  'long',
  'lucky',
  'misty',
  'morning',
  'muddy',
  'mute',
  'nameless',
  'noisy',
  'odd',
  'old',
  'orange',
  'patient',
  'plain',
  'polished',
  'proud',
  'purple',
  'quiet',
  'rapid',
  'raspy',
  'red',
  'restless',
  'rough',
  'round',
  'royal',
  'shiny',
  'shrill',
  'shy',
  'silent',
  'small',
  'snowy',
  'soft',
  'solitary',
  'sparkling',
  'spring',
  'square',
  'steep',
  'still',
  'summer',
  'super',
  'sweet',
  'throbbing',
  'tight',
  'tiny',
  'twilight',
  'wandering',
  'weathered',
  'white',
  'wild',
  'winter',
  'wispy',
  'withered',
  'yellow',
  'young',
]
export const PLEASANT_NOUN: ReadonlyArray<PleasantNoun> = [
  'art',
  'band',
  'bar',
  'base',
  'bird',
  'block',
  'boat',
  'bonus',
  'bread',
  'breeze',
  'brook',
  'bush',
  'butterfly',
  'cake',
  'cell',
  'cherry',
  'cloud',
  'credit',
  'darkness',
  'dawn',
  'dew',
  'disk',
  'dream',
  'dust',
  'feather',
  'field',
  'fire',
  'firefly',
  'flower',
  'fog',
  'forest',
  'frog',
  'frost',
  'glade',
  'glitter',
  'grass',
  'hall',
  'hat',
  'haze',
  'heart',
  'hill',
  'king',
  'lab',
  'lake',
  'leaf',
  'limit',
  'math',
  'meadow',
  'mode',
  'moon',
  'morning',
  'mountain',
  'mouse',
  'mud',
  'night',
  'paper',
  'pine',
  'poetry',
  'pond',
  'queen',
  'rain',
  'recipe',
  'resonance',
  'rice',
  'river',
  'salad',
  'scene',
  'sea',
  'shadow',
  'shape',
  'silence',
  'sky',
  'smoke',
  'snow',
  'snowflake',
  'sound',
  'star',
  'sun',
  'sun',
  'sunset',
  'surf',
  'term',
  'thunder',
  'tooth',
  'tree',
  'truth',
  'union',
  'unit',
  'violet',
  'voice',
  'water',
  'waterfall',
  'wave',
  'wildflower',
  'wind',
  'wood',
]
export const PRETTIER_ARROW_PARENS_OPTION: ReadonlyArray<PrettierArrowParensOption> =
  ['always', 'avoid']
export const PRETTIER_END_OF_LINE_OPTION: ReadonlyArray<PrettierEndOfLineOption> =
  ['lf', 'crlf', 'cr', 'auto']
export const PRETTIER_HTML_WHITESPACE_SENSITIVITY_OPTION: ReadonlyArray<PrettierHtmlWhitespaceSensitivityOption> =
  ['css', 'strict', 'ignore']
export const PRETTIER_PLUGIN: ReadonlyArray<PrettierPlugin> = [
  'angular',
  'flow',
  'glimmer',
  'graphql',
  'html',
  'markdown',
  'meriyah',
  'postcss',
  'typescript',
  'yaml',
]
export const PRETTIER_PROSE_WRAP_OPTION: ReadonlyArray<PrettierProseWrapOption> =
  ['always', 'never', 'preserve']
export const PRETTIER_TYPESCRIPT_TRAILING_COMMA_OPTION: ReadonlyArray<PrettierTypescriptTrailingCommaOption> =
  ['all', 'es5', 'none']
export const PRETTIER_XML_QUOTE_ATTRIBUTES_OPTION: ReadonlyArray<PrettierXmlQuoteAttributesOption> =
  ['preserve', 'single', 'double']
export const PRETTIER_XML_WHITESPACE_SENSITIVITY_OPTION: ReadonlyArray<PrettierXmlWhitespaceSensitivityOption> =
  ['strict', 'preserve', 'ignore']
export const PUPPETEER_INPUT_FORMAT: ReadonlyArray<PuppeteerInputFormat> =
  ['html']
export const PUPPETEER_LIFE_CYCLE_EVENT: ReadonlyArray<PuppeteerLifeCycleEvent> =
  ['load', 'domcontentloaded', 'networkidle0', 'networkidle2']

export const PUPPETEER_LIFE_CYCLE_EVENT_CONTENT: PuppeteerLifeCycleEventContent =
  {
    load: {
      note: "Waits for the 'load' event.",
    },
    domcontentloaded: {
      note: "Waits for the 'DOMContentLoaded' event.",
    },
    networkidle0: {
      note: 'Waits till there are no more than 0 network connections for at least 500 ms.',
    },
    networkidle2: {
      note: 'Waits till there are no more than 2 network connections for at least 500 ms.',
    },
  }
export const PUPPETEER_MARKDOWN_INPUT_FORMAT: ReadonlyArray<PuppeteerMarkdownInputFormat> =
  ['md']
export const PUPPETEER_OUTPUT_FORMAT: ReadonlyArray<PuppeteerOutputFormat> =
  ['pdf', 'png']
export const PUPPETEER_TXT_INPUT_FORMAT: ReadonlyArray<PuppeteerTxtInputFormat> =
  ['txt']
export const QR_CODE_ERROR_CORRECTION_LEVEL: ReadonlyArray<QrCodeErrorCorrectionLevel> =
  ['L', 'M', 'Q', 'H']
export const QR_CODE_FORMAT: ReadonlyArray<QrCodeFormat> = [
  'png',
  'jpg',
  'webp',
]
export const RUST_COMPILER_TARGET: ReadonlyArray<RustCompilerTarget> = [
  'aarch64-apple-darwin',
  'aarch64-apple-ios',
  'aarch64-apple-ios-macabi',
  'aarch64-apple-ios-sim',
  'aarch64-apple-tvos',
  'aarch64-apple-tvos-sim',
  'aarch64-apple-watchos-sim',
  'aarch64-fuchsia',
  'aarch64-kmc-solid_asp3',
  'aarch64-linux-android',
  'aarch64-nintendo-switch-freestanding',
  'aarch64-pc-windows-gnullvm',
  'aarch64-pc-windows-msvc',
  'aarch64-unknown-freebsd',
  'aarch64-unknown-fuchsia',
  'aarch64-unknown-hermit',
  'aarch64-unknown-linux-gnu',
  'aarch64-unknown-linux-gnu_ilp32',
  'aarch64-unknown-linux-musl',
  'aarch64-unknown-linux-ohos',
  'aarch64-unknown-netbsd',
  'aarch64-unknown-none',
  'aarch64-unknown-none-softfloat',
  'aarch64-unknown-nto-qnx710',
  'aarch64-unknown-openbsd',
  'aarch64-unknown-redox',
  'aarch64-unknown-teeos',
  'aarch64-unknown-uefi',
  'aarch64-uwp-windows-msvc',
  'aarch64-wrs-vxworks',
  'aarch64_be-unknown-linux-gnu',
  'aarch64_be-unknown-linux-gnu_ilp32',
  'aarch64_be-unknown-netbsd',
  'arm-linux-androideabi',
  'arm-unknown-linux-gnueabi',
  'arm-unknown-linux-gnueabihf',
  'arm-unknown-linux-musleabi',
  'arm-unknown-linux-musleabihf',
  'arm64_32-apple-watchos',
  'armeb-unknown-linux-gnueabi',
  'armebv7r-none-eabi',
  'armebv7r-none-eabihf',
  'armv4t-none-eabi',
  'armv4t-unknown-linux-gnueabi',
  'armv5te-none-eabi',
  'armv5te-unknown-linux-gnueabi',
  'armv5te-unknown-linux-musleabi',
  'armv5te-unknown-linux-uclibceabi',
  'armv6-unknown-freebsd',
  'armv6-unknown-netbsd-eabihf',
  'armv6k-nintendo-3ds',
  'armv7-linux-androideabi',
  'armv7-sony-vita-newlibeabihf',
  'armv7-unknown-freebsd',
  'armv7-unknown-linux-gnueabi',
  'armv7-unknown-linux-gnueabihf',
  'armv7-unknown-linux-musleabi',
  'armv7-unknown-linux-musleabihf',
  'armv7-unknown-linux-ohos',
  'armv7-unknown-linux-uclibceabi',
  'armv7-unknown-linux-uclibceabihf',
  'armv7-unknown-netbsd-eabihf',
  'armv7-wrs-vxworks-eabihf',
  'armv7a-kmc-solid_asp3-eabi',
  'armv7a-kmc-solid_asp3-eabihf',
  'armv7a-none-eabi',
  'armv7a-none-eabihf',
  'armv7k-apple-watchos',
  'armv7r-none-eabi',
  'armv7r-none-eabihf',
  'armv7s-apple-ios',
  'asmjs-unknown-emscripten',
  'avr-unknown-gnu-atmega328',
  'bpfeb-unknown-none',
  'bpfel-unknown-none',
  'csky-unknown-linux-gnuabiv2',
  'csky-unknown-linux-gnuabiv2hf',
  'hexagon-unknown-linux-musl',
  'i386-apple-ios',
  'i586-pc-nto-qnx700',
  'i586-pc-windows-msvc',
  'i586-unknown-linux-gnu',
  'i586-unknown-linux-musl',
  'i586-unknown-netbsd',
  'i686-apple-darwin',
  'i686-linux-android',
  'i686-pc-windows-gnu',
  'i686-pc-windows-gnullvm',
  'i686-pc-windows-msvc',
  'i686-unknown-freebsd',
  'i686-unknown-haiku',
  'i686-unknown-hurd-gnu',
  'i686-unknown-linux-gnu',
  'i686-unknown-linux-musl',
  'i686-unknown-netbsd',
  'i686-unknown-openbsd',
  'i686-unknown-uefi',
  'i686-uwp-windows-gnu',
  'i686-uwp-windows-msvc',
  'i686-wrs-vxworks',
  'loongarch64-unknown-linux-gnu',
  'loongarch64-unknown-none',
  'loongarch64-unknown-none-softfloat',
  'm68k-unknown-linux-gnu',
  'mips-unknown-linux-gnu',
  'mips-unknown-linux-musl',
  'mips-unknown-linux-uclibc',
  'mips64-openwrt-linux-musl',
  'mips64-unknown-linux-gnuabi64',
  'mips64-unknown-linux-muslabi64',
  'mips64el-unknown-linux-gnuabi64',
  'mips64el-unknown-linux-muslabi64',
  'mipsel-sony-psp',
  'mipsel-sony-psx',
  'mipsel-unknown-linux-gnu',
  'mipsel-unknown-linux-musl',
  'mipsel-unknown-linux-uclibc',
  'mipsel-unknown-netbsd',
  'mipsel-unknown-none',
  'mipsisa32r6-unknown-linux-gnu',
  'mipsisa32r6el-unknown-linux-gnu',
  'mipsisa64r6-unknown-linux-gnuabi64',
  'mipsisa64r6el-unknown-linux-gnuabi64',
  'msp430-none-elf',
  'nvptx64-nvidia-cuda',
  'powerpc-unknown-freebsd',
  'powerpc-unknown-linux-gnu',
  'powerpc-unknown-linux-gnuspe',
  'powerpc-unknown-linux-musl',
  'powerpc-unknown-netbsd',
  'powerpc-unknown-openbsd',
  'powerpc-wrs-vxworks',
  'powerpc-wrs-vxworks-spe',
  'powerpc64-ibm-aix',
  'powerpc64-unknown-freebsd',
  'powerpc64-unknown-linux-gnu',
  'powerpc64-unknown-linux-musl',
  'powerpc64-unknown-openbsd',
  'powerpc64-wrs-vxworks',
  'powerpc64le-unknown-freebsd',
  'powerpc64le-unknown-linux-gnu',
  'powerpc64le-unknown-linux-musl',
  'riscv32gc-unknown-linux-gnu',
  'riscv32gc-unknown-linux-musl',
  'riscv32i-unknown-none-elf',
  'riscv32im-unknown-none-elf',
  'riscv32imac-esp-espidf',
  'riscv32imac-unknown-none-elf',
  'riscv32imac-unknown-xous-elf',
  'riscv32imc-esp-espidf',
  'riscv32imc-unknown-none-elf',
  'riscv64-linux-android',
  'riscv64gc-unknown-freebsd',
  'riscv64gc-unknown-fuchsia',
  'riscv64gc-unknown-hermit',
  'riscv64gc-unknown-linux-gnu',
  'riscv64gc-unknown-linux-musl',
  'riscv64gc-unknown-netbsd',
  'riscv64gc-unknown-none-elf',
  'riscv64gc-unknown-openbsd',
  'riscv64imac-unknown-none-elf',
  's390x-unknown-linux-gnu',
  's390x-unknown-linux-musl',
  'sparc-unknown-linux-gnu',
  'sparc-unknown-none-elf',
  'sparc64-unknown-linux-gnu',
  'sparc64-unknown-netbsd',
  'sparc64-unknown-openbsd',
  'sparcv9-sun-solaris',
  'thumbv4t-none-eabi',
  'thumbv5te-none-eabi',
  'thumbv6m-none-eabi',
  'thumbv7a-pc-windows-msvc',
  'thumbv7a-uwp-windows-msvc',
  'thumbv7em-none-eabi',
  'thumbv7em-none-eabihf',
  'thumbv7m-none-eabi',
  'thumbv7neon-linux-androideabi',
  'thumbv7neon-unknown-linux-gnueabihf',
  'thumbv7neon-unknown-linux-musleabihf',
  'thumbv8m.base-none-eabi',
  'thumbv8m.main-none-eabi',
  'thumbv8m.main-none-eabihf',
  'wasm32-unknown-emscripten',
  'wasm32-unknown-unknown',
  'wasm32-wasi',
  'wasm32-wasi-preview1-threads',
  'wasm64-unknown-unknown',
  'x86_64-apple-darwin',
  'x86_64-apple-ios',
  'x86_64-apple-ios-macabi',
  'x86_64-apple-tvos',
  'x86_64-apple-watchos-sim',
  'x86_64-fortanix-unknown-sgx',
  'x86_64-fuchsia',
  'x86_64-linux-android',
  'x86_64-pc-nto-qnx710',
  'x86_64-pc-solaris',
  'x86_64-pc-windows-gnu',
  'x86_64-pc-windows-gnullvm',
  'x86_64-pc-windows-msvc',
  'x86_64-sun-solaris',
  'x86_64-unikraft-linux-musl',
  'x86_64-unknown-dragonfly',
  'x86_64-unknown-freebsd',
  'x86_64-unknown-fuchsia',
  'x86_64-unknown-haiku',
  'x86_64-unknown-hermit',
  'x86_64-unknown-illumos',
  'x86_64-unknown-l4re-uclibc',
  'x86_64-unknown-linux-gnu',
  'x86_64-unknown-linux-gnux32',
  'x86_64-unknown-linux-musl',
  'x86_64-unknown-linux-ohos',
  'x86_64-unknown-netbsd',
  'x86_64-unknown-none',
  'x86_64-unknown-openbsd',
  'x86_64-unknown-redox',
  'x86_64-unknown-uefi',
  'x86_64-uwp-windows-gnu',
  'x86_64-uwp-windows-msvc',
  'x86_64-wrs-vxworks',
  'x86_64h-apple-darwin',
]
export const RUST_INPUT_FORMAT: ReadonlyArray<RustInputFormat> = [
  'rust',
]
export const RUST_OUTPUT_FORMAT: ReadonlyArray<RustOutputFormat> = [
  'binary',
  'assembly',
  'llvm-ir',
  'llvm-bitcode',
  'mir',
]
export const SHARED_GEMATRIA_LANGUAGE: ReadonlyArray<SharedGematriaLanguage> =
  [
    'arabic',
    'coptic',
    'devanagari',
    'elderFuthark',
    'greek',
    'gothic',
    'hebrew',
    'japanese',
    'latin',
    'tibetan',
  ]
export const SWIFT_INPUT_FORMAT: ReadonlyArray<SwiftInputFormat> = [
  'swift',
]
export const SYMBOL_SET: ReadonlyArray<SymbolSet> = [
  'latin-lowercase',
  'latin-uppercase',
  'latin-number',
  'latin-symbol',
]

export const SYMBOL_SET_CONTENT: SymbolSetContent = {
  'latin-lowercase': {
    list: 'abcdefghijklmnopqrstuvwxyz',
  },
  'latin-uppercase': {
    list: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
  },
  'latin-number': {
    list: '0123456789',
  },
  'latin-symbol': {
    list: '!@#$%^&*()+_-=}{[]|:;"/?.><,`~',
  },
}
export const TASK: ReadonlyArray<Task> = [
  'decompress',
  'compress',
  'convert',
  'replace',
  'create',
  'remove',
  'rename',
  'update',
  'upload',
  'resize',
  'format',
  'split',
  'build',
  'slice',
  'read',
  'add',
  'verify',
  'inspect',
  'compile',
  'disassemble',
]
export const TIME_ZONE: ReadonlyArray<TimeZone> = [
  'NUT',
  'SST',
  'CKT',
  'HAST',
  'TAHT',
  'MART',
  'GAMT',
  'AKST',
  'PST',
  'GMT-7',
  'MST',
  'YT',
  'CST',
  'GALT',
  'ACT',
  'COT',
  'EAST',
  'EST',
  'ECT',
  'PET',
  'AMT',
  'AST',
  'BOT',
  'GYT',
  'VET',
  'ART',
  'BRT',
  'CLT',
  'FKST',
  'GFT',
  'PYT',
  'SRT',
  'UYT',
  'NST',
  'FNT',
  'GST',
  'PM',
  'WGT',
  'AZOT',
  'CVT',
  'EGT',
  'GMT',
  'WET',
  'CET',
  'WAT',
  'CAT',
  'EET',
  'IST',
  'SAST',
  'GMT+3',
  'EAT',
  'MSK',
  'SYOT',
  'TRT',
  'IRST',
  'AZT',
  'GET',
  'MUT',
  'RET',
  'SAMT',
  'SCT',
  'AFT',
  'FSAT',
  'MVT',
  'MAWT',
  'PKT',
  'TJT',
  'TMT',
  'UZT',
  'AQTT',
  'YEKT',
  'NPT',
  'BST',
  'BTT',
  'ALMT',
  'IOT',
  'KGT',
  'OMST',
  'VOST',
  'CCT',
  'MMT',
  'CXT',
  'DAVT',
  'HOVT',
  'ICT',
  'NOVT',
  'WIB',
  'AWST',
  'BNT',
  'WITA',
  'HKT',
  'IRKT',
  'MYT',
  'PHT',
  'SGT',
  'TWT',
  'ULAT',
  'ACWST',
  'TLT',
  'WIT',
  'JST',
  'KST',
  'PWT',
  'YAKT',
  'ACST',
  'AEST',
  'ChST',
  'CHUT',
  'DDUT',
  'PGT',
  'VLAT',
  'CAST',
  'KOST',
  'LHST',
  'NCT',
  'SAKT',
  'SBT',
  'VUT',
  'FJT',
  'GILT',
  'MHT',
  'NRT',
  'NFT',
  'PETT',
  'TVT',
  'WAKT',
  'WFT',
  'WST',
  'NZST',
  'PHOT',
  'TKT',
  'TOT',
  'CHAST',
  'LINT',
  'Pacific/Niue',
  'Pacific/Midway',
  'Pacific/Pago_Pago',
  'Pacific/Rarotonga',
  'Pacific/Honolulu',
  'Pacific/Tahiti',
  'Pacific/Marquesas',
  'Pacific/Gambier',
  'America/Adak',
  'America/Anchorage',
  'Pacific/Pitcairn',
  'America/Hermosillo',
  'America/Phoenix',
  'America/Los_Angeles',
  'America/Tijuana',
  'America/Vancouver',
  'America/Whitehorse',
  'America/Belize',
  'America/Guatemala',
  'America/Managua',
  'America/Mexico_City',
  'America/Costa_Rica',
  'America/El_Salvador',
  'America/Regina',
  'America/Tegucigalpa',
  'Pacific/Galapagos',
  'America/Edmonton',
  'America/Ciudad_Juarez',
  'America/Denver',
  'America/Rio_Branco',
  'America/Chicago',
  'America/Matamoros',
  'America/Winnipeg',
  'America/Bogota',
  'Pacific/Easter',
  'America/Atikokan',
  'America/Cancun',
  'America/Cayman',
  'America/Jamaica',
  'America/Panama',
  'America/Guayaquil',
  'America/Lima',
  'America/Manaus',
  'America/St_Kitts',
  'America/Blanc-Sablon',
  'America/Montserrat',
  'America/Barbados',
  'America/St_Lucia',
  'America/Port_of_Spain',
  'America/Martinique',
  'America/St_Barthelemy',
  'America/St_Vincent',
  'America/Kralendijk',
  'America/Guadeloupe',
  'America/Marigot',
  'America/Aruba',
  'America/Lower_Princes',
  'America/Tortola',
  'America/Dominica',
  'America/St_Thomas',
  'America/Grenada',
  'America/Antigua',
  'America/Puerto_Rico',
  'America/Santo_Domingo',
  'America/Anguilla',
  'America/Curacao',
  'America/La_Paz',
  'America/Havana',
  'America/Grand_Turk',
  'America/Nassau',
  'America/New_York',
  'America/Port-au-Prince',
  'America/Toronto',
  'America/Guyana',
  'America/Caracas',
  'America/Argentina/Buenos_Aires',
  'America/Halifax',
  'Atlantic/Bermuda',
  'America/Thule',
  'America/Sao_Paulo',
  'Antarctica/Palmer',
  'America/Punta_Arenas',
  'America/Santiago',
  'Atlantic/Stanley',
  'America/Cayenne',
  'America/Asuncion',
  'America/Paramaribo',
  'America/Montevideo',
  'America/St_Johns',
  'America/Noronha',
  'Atlantic/South_Georgia',
  'America/Miquelon',
  'America/Nuuk',
  'Atlantic/Azores',
  'Atlantic/Cape_Verde',
  'America/Scoresbysund',
  'Africa/Abidjan',
  'Africa/Bamako',
  'Africa/Bissau',
  'Africa/Conakry',
  'Africa/Dakar',
  'America/Danmarkshavn',
  'Europe/Isle_of_Man',
  'Europe/Dublin',
  'Africa/Freetown',
  'Atlantic/St_Helena',
  'Africa/Accra',
  'Africa/Lome',
  'Europe/London',
  'Africa/Monrovia',
  'Africa/Nouakchott',
  'Africa/Ouagadougou',
  'Atlantic/Reykjavik',
  'Europe/Jersey',
  'Europe/Guernsey',
  'Africa/Sao_Tome',
  'Africa/Banjul',
  'Antarctica/Troll',
  'Africa/Casablanca',
  'Africa/El_Aaiun',
  'Atlantic/Canary',
  'Europe/Lisbon',
  'Atlantic/Faroe',
  'Africa/Algiers',
  'Europe/Amsterdam',
  'Europe/Andorra',
  'Europe/Belgrade',
  'Europe/Berlin',
  'Europe/Bratislava',
  'Europe/Brussels',
  'Europe/Budapest',
  'Europe/Copenhagen',
  'Europe/Gibraltar',
  'Europe/Ljubljana',
  'Arctic/Longyearbyen',
  'Europe/Luxembourg',
  'Europe/Madrid',
  'Europe/Monaco',
  'Europe/Oslo',
  'Europe/Paris',
  'Europe/Podgorica',
  'Europe/Prague',
  'Europe/Rome',
  'Europe/San_Marino',
  'Europe/Malta',
  'Europe/Sarajevo',
  'Europe/Skopje',
  'Europe/Stockholm',
  'Europe/Tirane',
  'Africa/Tunis',
  'Europe/Vaduz',
  'Europe/Vatican',
  'Europe/Vienna',
  'Europe/Warsaw',
  'Europe/Zagreb',
  'Europe/Zurich',
  'Africa/Bangui',
  'Africa/Malabo',
  'Africa/Brazzaville',
  'Africa/Porto-Novo',
  'Africa/Douala',
  'Africa/Kinshasa',
  'Africa/Lagos',
  'Africa/Libreville',
  'Africa/Luanda',
  'Africa/Ndjamena',
  'Africa/Niamey',
  'Africa/Bujumbura',
  'Africa/Gaborone',
  'Africa/Harare',
  'Africa/Juba',
  'Africa/Khartoum',
  'Africa/Kigali',
  'Africa/Blantyre',
  'Africa/Lubumbashi',
  'Africa/Lusaka',
  'Africa/Maputo',
  'Africa/Windhoek',
  'Europe/Athens',
  'Asia/Beirut',
  'Europe/Bucharest',
  'Africa/Cairo',
  'Europe/Chisinau',
  'Asia/Hebron',
  'Europe/Helsinki',
  'Europe/Kaliningrad',
  'Europe/Kyiv',
  'Europe/Mariehamn',
  'Asia/Nicosia',
  'Europe/Riga',
  'Europe/Sofia',
  'Europe/Tallinn',
  'Africa/Tripoli',
  'Europe/Vilnius',
  'Asia/Jerusalem',
  'Africa/Johannesburg',
  'Africa/Mbabane',
  'Africa/Maseru',
  'Asia/Kuwait',
  'Asia/Bahrain',
  'Asia/Baghdad',
  'Asia/Qatar',
  'Asia/Riyadh',
  'Asia/Aden',
  'Asia/Amman',
  'Asia/Damascus',
  'Africa/Addis_Ababa',
  'Indian/Antananarivo',
  'Africa/Asmara',
  'Africa/Dar_es_Salaam',
  'Africa/Djibouti',
  'Africa/Kampala',
  'Indian/Mayotte',
  'Africa/Mogadishu',
  'Indian/Comoro',
  'Africa/Nairobi',
  'Europe/Minsk',
  'Europe/Moscow',
  'Europe/Simferopol',
  'Antarctica/Syowa',
  'Europe/Istanbul',
  'Asia/Tehran',
  'Asia/Yerevan',
  'Asia/Baku',
  'Asia/Tbilisi',
  'Asia/Dubai',
  'Asia/Muscat',
  'Indian/Mauritius',
  'Indian/Reunion',
  'Europe/Samara',
  'Indian/Mahe',
  'Asia/Kabul',
  'Indian/Kerguelen',
  'Indian/Maldives',
  'Antarctica/Mawson',
  'Asia/Karachi',
  'Asia/Dushanbe',
  'Asia/Ashgabat',
  'Asia/Tashkent',
  'Asia/Aqtobe',
  'Asia/Yekaterinburg',
  'Asia/Colombo',
  'Asia/Kolkata',
  'Asia/Kathmandu',
  'Asia/Dhaka',
  'Asia/Thimphu',
  'Asia/Urumqi',
  'Asia/Almaty',
  'Indian/Chagos',
  'Asia/Bishkek',
  'Asia/Omsk',
  'Antarctica/Vostok',
  'Indian/Cocos',
  'Asia/Yangon',
  'Indian/Christmas',
  'Antarctica/Davis',
  'Asia/Hovd',
  'Asia/Bangkok',
  'Asia/Ho_Chi_Minh',
  'Asia/Phnom_Penh',
  'Asia/Vientiane',
  'Asia/Novosibirsk',
  'Asia/Jakarta',
  'Australia/Perth',
  'Asia/Brunei',
  'Asia/Makassar',
  'Asia/Macau',
  'Asia/Shanghai',
  'Asia/Hong_Kong',
  'Asia/Irkutsk',
  'Asia/Kuala_Lumpur',
  'Asia/Manila',
  'Asia/Singapore',
  'Asia/Taipei',
  'Asia/Ulaanbaatar',
  'Australia/Eucla',
  'Asia/Dili',
  'Asia/Jayapura',
  'Asia/Tokyo',
  'Asia/Pyongyang',
  'Asia/Seoul',
  'Pacific/Palau',
  'Asia/Chita',
  'Australia/Darwin',
  'Australia/Brisbane',
  'Pacific/Guam',
  'Pacific/Saipan',
  'Pacific/Chuuk',
  'Antarctica/DumontDUrville',
  'Pacific/Port_Moresby',
  'Asia/Vladivostok',
  'Australia/Adelaide',
  'Australia/Sydney',
  'Pacific/Bougainville',
  'Antarctica/Casey',
  'Pacific/Kosrae',
  'Australia/Lord_Howe',
  'Pacific/Noumea',
  'Asia/Sakhalin',
  'Pacific/Guadalcanal',
  'Pacific/Efate',
  'Pacific/Fiji',
  'Pacific/Tarawa',
  'Pacific/Majuro',
  'Pacific/Nauru',
  'Pacific/Norfolk',
  'Asia/Kamchatka',
  'Pacific/Funafuti',
  'Pacific/Wake',
  'Pacific/Wallis',
  'Pacific/Apia',
  'Pacific/Auckland',
  'Antarctica/McMurdo',
  'Pacific/Kanton',
  'Pacific/Fakaofo',
  'Pacific/Tongatapu',
  'Pacific/Chatham',
  'Pacific/Kiritimati',
]
export const TIME_ZONE_ABBREVIATION: ReadonlyArray<TimeZoneAbbreviation> =
  [
    'NUT',
    'SST',
    'CKT',
    'HAST',
    'TAHT',
    'MART',
    'GAMT',
    'AKST',
    'PST',
    'GMT-7',
    'MST',
    'YT',
    'CST',
    'GALT',
    'ACT',
    'COT',
    'EAST',
    'EST',
    'ECT',
    'PET',
    'AMT',
    'AST',
    'BOT',
    'GYT',
    'VET',
    'ART',
    'BRT',
    'CLT',
    'FKST',
    'GFT',
    'PYT',
    'SRT',
    'UYT',
    'NST',
    'FNT',
    'GST',
    'PM',
    'WGT',
    'AZOT',
    'CVT',
    'EGT',
    'GMT',
    'WET',
    'CET',
    'WAT',
    'CAT',
    'EET',
    'IST',
    'SAST',
    'GMT+3',
    'EAT',
    'MSK',
    'SYOT',
    'TRT',
    'IRST',
    'AZT',
    'GET',
    'MUT',
    'RET',
    'SAMT',
    'SCT',
    'AFT',
    'FSAT',
    'MVT',
    'MAWT',
    'PKT',
    'TJT',
    'TMT',
    'UZT',
    'AQTT',
    'YEKT',
    'NPT',
    'BST',
    'BTT',
    'ALMT',
    'IOT',
    'KGT',
    'OMST',
    'VOST',
    'CCT',
    'MMT',
    'CXT',
    'DAVT',
    'HOVT',
    'ICT',
    'NOVT',
    'WIB',
    'AWST',
    'BNT',
    'WITA',
    'HKT',
    'IRKT',
    'MYT',
    'PHT',
    'SGT',
    'TWT',
    'ULAT',
    'ACWST',
    'TLT',
    'WIT',
    'JST',
    'KST',
    'PWT',
    'YAKT',
    'ACST',
    'AEST',
    'ChST',
    'CHUT',
    'DDUT',
    'PGT',
    'VLAT',
    'CAST',
    'KOST',
    'LHST',
    'NCT',
    'SAKT',
    'SBT',
    'VUT',
    'FJT',
    'GILT',
    'MHT',
    'NRT',
    'NFT',
    'PETT',
    'TVT',
    'WAKT',
    'WFT',
    'WST',
    'NZST',
    'PHOT',
    'TKT',
    'TOT',
    'CHAST',
    'LINT',
  ]

export const TIME_ZONE_ABBREVIATION_CONTENT: TimeZoneAbbreviationContent =
  {
    NUT: {
      name: ['Pacific/Niue'],
    },
    SST: {
      name: ['Pacific/Midway', 'Pacific/Pago_Pago'],
    },
    CKT: {
      name: ['Pacific/Rarotonga'],
    },
    HAST: {
      name: ['Pacific/Honolulu', 'America/Adak'],
    },
    TAHT: {
      name: ['Pacific/Tahiti'],
    },
    MART: {
      name: ['Pacific/Marquesas'],
    },
    GAMT: {
      name: ['Pacific/Gambier'],
    },
    AKST: {
      name: ['America/Anchorage'],
    },
    PST: {
      name: [
        'Pacific/Pitcairn',
        'America/Los_Angeles',
        'America/Tijuana',
        'America/Vancouver',
      ],
    },
    'GMT-7': {
      name: ['America/Hermosillo'],
    },
    MST: {
      name: [
        'America/Phoenix',
        'America/Edmonton',
        'America/Ciudad_Juarez',
        'America/Denver',
      ],
    },
    YT: {
      name: ['America/Whitehorse'],
    },
    CST: {
      name: [
        'America/Belize',
        'America/Guatemala',
        'America/Managua',
        'America/Mexico_City',
        'America/Costa_Rica',
        'America/El_Salvador',
        'America/Regina',
        'America/Tegucigalpa',
        'America/Chicago',
        'America/Matamoros',
        'America/Winnipeg',
        'America/Havana',
        'Asia/Urumqi',
        'Asia/Macau',
        'Asia/Shanghai',
      ],
    },
    GALT: {
      name: ['Pacific/Galapagos'],
    },
    ACT: {
      name: ['America/Rio_Branco'],
    },
    COT: {
      name: ['America/Bogota'],
    },
    EAST: {
      name: ['Pacific/Easter'],
    },
    EST: {
      name: [
        'America/Atikokan',
        'America/Cancun',
        'America/Cayman',
        'America/Jamaica',
        'America/Panama',
        'America/Grand_Turk',
        'America/Nassau',
        'America/New_York',
        'America/Port-au-Prince',
        'America/Toronto',
      ],
    },
    ECT: {
      name: ['America/Guayaquil'],
    },
    PET: {
      name: ['America/Lima'],
    },
    AMT: {
      name: ['America/Manaus', 'Asia/Yerevan'],
    },
    AST: {
      name: [
        'America/St_Kitts',
        'America/Blanc-Sablon',
        'America/Montserrat',
        'America/Barbados',
        'America/St_Lucia',
        'America/Port_of_Spain',
        'America/Martinique',
        'America/St_Barthelemy',
        'America/St_Vincent',
        'America/Kralendijk',
        'America/Guadeloupe',
        'America/Marigot',
        'America/Aruba',
        'America/Lower_Princes',
        'America/Tortola',
        'America/Dominica',
        'America/St_Thomas',
        'America/Grenada',
        'America/Antigua',
        'America/Puerto_Rico',
        'America/Santo_Domingo',
        'America/Anguilla',
        'America/Curacao',
        'America/Halifax',
        'Atlantic/Bermuda',
        'America/Thule',
        'Asia/Kuwait',
        'Asia/Bahrain',
        'Asia/Baghdad',
        'Asia/Qatar',
        'Asia/Riyadh',
        'Asia/Aden',
      ],
    },
    BOT: {
      name: ['America/La_Paz'],
    },
    GYT: {
      name: ['America/Guyana'],
    },
    VET: {
      name: ['America/Caracas'],
    },
    ART: {
      name: ['America/Argentina/Buenos_Aires'],
    },
    BRT: {
      name: ['America/Sao_Paulo'],
    },
    CLT: {
      name: [
        'Antarctica/Palmer',
        'America/Punta_Arenas',
        'America/Santiago',
      ],
    },
    FKST: {
      name: ['Atlantic/Stanley'],
    },
    GFT: {
      name: ['America/Cayenne'],
    },
    PYT: {
      name: ['America/Asuncion'],
    },
    SRT: {
      name: ['America/Paramaribo'],
    },
    UYT: {
      name: ['America/Montevideo'],
    },
    NST: {
      name: ['America/St_Johns'],
    },
    FNT: {
      name: ['America/Noronha'],
    },
    GST: {
      name: ['Atlantic/South_Georgia', 'Asia/Dubai', 'Asia/Muscat'],
    },
    PM: {
      name: ['America/Miquelon'],
    },
    WGT: {
      name: ['America/Nuuk'],
    },
    AZOT: {
      name: ['Atlantic/Azores'],
    },
    CVT: {
      name: ['Atlantic/Cape_Verde'],
    },
    EGT: {
      name: ['America/Scoresbysund'],
    },
    GMT: {
      name: [
        'Africa/Abidjan',
        'Africa/Bamako',
        'Africa/Bissau',
        'Africa/Conakry',
        'Africa/Dakar',
        'America/Danmarkshavn',
        'Europe/Isle_of_Man',
        'Europe/Dublin',
        'Africa/Freetown',
        'Atlantic/St_Helena',
        'Africa/Accra',
        'Africa/Lome',
        'Europe/London',
        'Africa/Monrovia',
        'Africa/Nouakchott',
        'Africa/Ouagadougou',
        'Atlantic/Reykjavik',
        'Europe/Jersey',
        'Europe/Guernsey',
        'Africa/Sao_Tome',
        'Africa/Banjul',
        'Antarctica/Troll',
      ],
    },
    WET: {
      name: [
        'Africa/Casablanca',
        'Africa/El_Aaiun',
        'Atlantic/Canary',
        'Europe/Lisbon',
        'Atlantic/Faroe',
      ],
    },
    CET: {
      name: [
        'Africa/Algiers',
        'Europe/Amsterdam',
        'Europe/Andorra',
        'Europe/Belgrade',
        'Europe/Berlin',
        'Europe/Bratislava',
        'Europe/Brussels',
        'Europe/Budapest',
        'Europe/Copenhagen',
        'Europe/Gibraltar',
        'Europe/Ljubljana',
        'Arctic/Longyearbyen',
        'Europe/Luxembourg',
        'Europe/Madrid',
        'Europe/Monaco',
        'Europe/Oslo',
        'Europe/Paris',
        'Europe/Podgorica',
        'Europe/Prague',
        'Europe/Rome',
        'Europe/San_Marino',
        'Europe/Malta',
        'Europe/Sarajevo',
        'Europe/Skopje',
        'Europe/Stockholm',
        'Europe/Tirane',
        'Africa/Tunis',
        'Europe/Vaduz',
        'Europe/Vatican',
        'Europe/Vienna',
        'Europe/Warsaw',
        'Europe/Zagreb',
        'Europe/Zurich',
      ],
    },
    WAT: {
      name: [
        'Africa/Bangui',
        'Africa/Malabo',
        'Africa/Brazzaville',
        'Africa/Porto-Novo',
        'Africa/Douala',
        'Africa/Kinshasa',
        'Africa/Lagos',
        'Africa/Libreville',
        'Africa/Luanda',
        'Africa/Ndjamena',
        'Africa/Niamey',
      ],
    },
    CAT: {
      name: [
        'Africa/Bujumbura',
        'Africa/Gaborone',
        'Africa/Harare',
        'Africa/Juba',
        'Africa/Khartoum',
        'Africa/Kigali',
        'Africa/Blantyre',
        'Africa/Lubumbashi',
        'Africa/Lusaka',
        'Africa/Maputo',
        'Africa/Windhoek',
      ],
    },
    EET: {
      name: [
        'Europe/Athens',
        'Asia/Beirut',
        'Europe/Bucharest',
        'Africa/Cairo',
        'Europe/Chisinau',
        'Asia/Hebron',
        'Europe/Helsinki',
        'Europe/Kaliningrad',
        'Europe/Kyiv',
        'Europe/Mariehamn',
        'Asia/Nicosia',
        'Europe/Riga',
        'Europe/Sofia',
        'Europe/Tallinn',
        'Africa/Tripoli',
        'Europe/Vilnius',
      ],
    },
    IST: {
      name: ['Asia/Jerusalem', 'Asia/Colombo', 'Asia/Kolkata'],
    },
    SAST: {
      name: ['Africa/Johannesburg', 'Africa/Mbabane', 'Africa/Maseru'],
    },
    'GMT+3': {
      name: ['Asia/Amman', 'Asia/Damascus'],
    },
    EAT: {
      name: [
        'Africa/Addis_Ababa',
        'Indian/Antananarivo',
        'Africa/Asmara',
        'Africa/Dar_es_Salaam',
        'Africa/Djibouti',
        'Africa/Kampala',
        'Indian/Mayotte',
        'Africa/Mogadishu',
        'Indian/Comoro',
        'Africa/Nairobi',
      ],
    },
    MSK: {
      name: ['Europe/Minsk', 'Europe/Moscow', 'Europe/Simferopol'],
    },
    SYOT: {
      name: ['Antarctica/Syowa'],
    },
    TRT: {
      name: ['Europe/Istanbul'],
    },
    IRST: {
      name: ['Asia/Tehran'],
    },
    AZT: {
      name: ['Asia/Baku'],
    },
    GET: {
      name: ['Asia/Tbilisi'],
    },
    MUT: {
      name: ['Indian/Mauritius'],
    },
    RET: {
      name: ['Indian/Reunion'],
    },
    SAMT: {
      name: ['Europe/Samara'],
    },
    SCT: {
      name: ['Indian/Mahe'],
    },
    AFT: {
      name: ['Asia/Kabul'],
    },
    FSAT: {
      name: ['Indian/Kerguelen'],
    },
    MVT: {
      name: ['Indian/Maldives'],
    },
    MAWT: {
      name: ['Antarctica/Mawson'],
    },
    PKT: {
      name: ['Asia/Karachi'],
    },
    TJT: {
      name: ['Asia/Dushanbe'],
    },
    TMT: {
      name: ['Asia/Ashgabat'],
    },
    UZT: {
      name: ['Asia/Tashkent'],
    },
    AQTT: {
      name: ['Asia/Aqtobe'],
    },
    YEKT: {
      name: ['Asia/Yekaterinburg'],
    },
    NPT: {
      name: ['Asia/Kathmandu'],
    },
    BST: {
      name: ['Asia/Dhaka', 'Pacific/Bougainville'],
    },
    BTT: {
      name: ['Asia/Thimphu'],
    },
    ALMT: {
      name: ['Asia/Almaty'],
    },
    IOT: {
      name: ['Indian/Chagos'],
    },
    KGT: {
      name: ['Asia/Bishkek'],
    },
    OMST: {
      name: ['Asia/Omsk'],
    },
    VOST: {
      name: ['Antarctica/Vostok'],
    },
    CCT: {
      name: ['Indian/Cocos'],
    },
    MMT: {
      name: ['Asia/Yangon'],
    },
    CXT: {
      name: ['Indian/Christmas'],
    },
    DAVT: {
      name: ['Antarctica/Davis'],
    },
    HOVT: {
      name: ['Asia/Hovd'],
    },
    ICT: {
      name: [
        'Asia/Bangkok',
        'Asia/Ho_Chi_Minh',
        'Asia/Phnom_Penh',
        'Asia/Vientiane',
      ],
    },
    NOVT: {
      name: ['Asia/Novosibirsk'],
    },
    WIB: {
      name: ['Asia/Jakarta'],
    },
    AWST: {
      name: ['Australia/Perth'],
    },
    BNT: {
      name: ['Asia/Brunei'],
    },
    WITA: {
      name: ['Asia/Makassar'],
    },
    HKT: {
      name: ['Asia/Hong_Kong'],
    },
    IRKT: {
      name: ['Asia/Irkutsk'],
    },
    MYT: {
      name: ['Asia/Kuala_Lumpur'],
    },
    PHT: {
      name: ['Asia/Manila'],
    },
    SGT: {
      name: ['Asia/Singapore'],
    },
    TWT: {
      name: ['Asia/Taipei'],
    },
    ULAT: {
      name: ['Asia/Ulaanbaatar'],
    },
    ACWST: {
      name: ['Australia/Eucla'],
    },
    TLT: {
      name: ['Asia/Dili'],
    },
    WIT: {
      name: ['Asia/Jayapura'],
    },
    JST: {
      name: ['Asia/Tokyo'],
    },
    KST: {
      name: ['Asia/Pyongyang', 'Asia/Seoul'],
    },
    PWT: {
      name: ['Pacific/Palau'],
    },
    YAKT: {
      name: ['Asia/Chita'],
    },
    ACST: {
      name: ['Australia/Darwin', 'Australia/Adelaide'],
    },
    AEST: {
      name: ['Australia/Brisbane', 'Australia/Sydney'],
    },
    ChST: {
      name: ['Pacific/Guam', 'Pacific/Saipan'],
    },
    CHUT: {
      name: ['Pacific/Chuuk'],
    },
    DDUT: {
      name: ['Antarctica/DumontDUrville'],
    },
    PGT: {
      name: ['Pacific/Port_Moresby'],
    },
    VLAT: {
      name: ['Asia/Vladivostok'],
    },
    CAST: {
      name: ['Antarctica/Casey'],
    },
    KOST: {
      name: ['Pacific/Kosrae'],
    },
    LHST: {
      name: ['Australia/Lord_Howe'],
    },
    NCT: {
      name: ['Pacific/Noumea'],
    },
    SAKT: {
      name: ['Asia/Sakhalin'],
    },
    SBT: {
      name: ['Pacific/Guadalcanal'],
    },
    VUT: {
      name: ['Pacific/Efate'],
    },
    FJT: {
      name: ['Pacific/Fiji'],
    },
    GILT: {
      name: ['Pacific/Tarawa'],
    },
    MHT: {
      name: ['Pacific/Majuro'],
    },
    NRT: {
      name: ['Pacific/Nauru'],
    },
    NFT: {
      name: ['Pacific/Norfolk'],
    },
    PETT: {
      name: ['Asia/Kamchatka'],
    },
    TVT: {
      name: ['Pacific/Funafuti'],
    },
    WAKT: {
      name: ['Pacific/Wake'],
    },
    WFT: {
      name: ['Pacific/Wallis'],
    },
    WST: {
      name: ['Pacific/Apia'],
    },
    NZST: {
      name: ['Pacific/Auckland', 'Antarctica/McMurdo'],
    },
    PHOT: {
      name: ['Pacific/Kanton'],
    },
    TKT: {
      name: ['Pacific/Fakaofo'],
    },
    TOT: {
      name: ['Pacific/Tongatapu'],
    },
    CHAST: {
      name: ['Pacific/Chatham'],
    },
    LINT: {
      name: ['Pacific/Kiritimati'],
    },
  }

export const TIME_ZONE_CONTENT: TimeZoneContent = {
  'Pacific/Niue': {
    name: 'Pacific/Niue',
    alternativeName: 'Niue Time',
    group: ['Pacific/Niue'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Niue',
    countryCode: 'NU',
    mainCities: ['Alofi'],
    rawOffsetInMinutes: -660,
    abbreviation: 'NUT',
  },
  'Pacific/Midway': {
    name: 'Pacific/Midway',
    alternativeName: 'Samoa Time',
    group: ['Pacific/Midway'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'United States Minor Outlying Islands',
    countryCode: 'UM',
    mainCities: ['Midway'],
    rawOffsetInMinutes: -660,
    abbreviation: 'SST',
  },
  'Pacific/Pago_Pago': {
    name: 'Pacific/Pago_Pago',
    alternativeName: 'Samoa Time',
    group: [
      'Pacific/Pago_Pago',
      'US/Samoa',
      'Pacific/Samoa',
      'Pacific/Midway',
    ],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'American Samoa',
    countryCode: 'AS',
    mainCities: ['Pago Pago'],
    rawOffsetInMinutes: -660,
    abbreviation: 'SST',
  },
  'Pacific/Rarotonga': {
    name: 'Pacific/Rarotonga',
    alternativeName: 'Cook Islands Time',
    group: ['Pacific/Rarotonga'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Cook Islands',
    countryCode: 'CK',
    mainCities: ['Avarua'],
    rawOffsetInMinutes: -600,
    abbreviation: 'CKT',
  },
  'Pacific/Honolulu': {
    name: 'Pacific/Honolulu',
    alternativeName: 'Hawaii-Aleutian Time',
    group: ['Pacific/Honolulu', 'US/Hawaii', 'Pacific/Johnston'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'United States',
    countryCode: 'US',
    mainCities: ['Honolulu', 'East Honolulu', 'Pearl City', 'Hilo'],
    rawOffsetInMinutes: -600,
    abbreviation: 'HAST',
  },
  'Pacific/Tahiti': {
    name: 'Pacific/Tahiti',
    alternativeName: 'Tahiti Time',
    group: ['Pacific/Tahiti'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'French Polynesia',
    countryCode: 'PF',
    mainCities: ['Faaa', 'Papeete', 'Punaauia'],
    rawOffsetInMinutes: -600,
    abbreviation: 'TAHT',
  },
  'Pacific/Marquesas': {
    name: 'Pacific/Marquesas',
    alternativeName: 'Marquesas Time',
    group: ['Pacific/Marquesas'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'French Polynesia',
    countryCode: 'PF',
    mainCities: ['Marquesas'],
    rawOffsetInMinutes: -570,
    abbreviation: 'MART',
  },
  'Pacific/Gambier': {
    name: 'Pacific/Gambier',
    alternativeName: 'Gambier Time',
    group: ['Pacific/Gambier'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'French Polynesia',
    countryCode: 'PF',
    mainCities: ['Gambier'],
    rawOffsetInMinutes: -540,
    abbreviation: 'GAMT',
  },
  'America/Adak': {
    name: 'America/Adak',
    alternativeName: 'Hawaii-Aleutian Time',
    group: ['America/Adak', 'US/Aleutian', 'America/Atka'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'United States',
    countryCode: 'US',
    mainCities: ['Adak'],
    rawOffsetInMinutes: -600,
    abbreviation: 'HAST',
  },
  'America/Anchorage': {
    name: 'America/Anchorage',
    alternativeName: 'Alaska Time',
    group: [
      'America/Anchorage',
      'America/Juneau',
      'America/Metlakatla',
      'America/Nome',
      'America/Sitka',
      'America/Yakutat',
      'US/Alaska',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'United States',
    countryCode: 'US',
    mainCities: ['Anchorage', 'Juneau', 'Fairbanks', 'Eagle River'],
    rawOffsetInMinutes: -540,
    abbreviation: 'AKST',
  },
  'Pacific/Pitcairn': {
    name: 'Pacific/Pitcairn',
    alternativeName: 'Pitcairn Time',
    group: ['Pacific/Pitcairn'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Pitcairn',
    countryCode: 'PN',
    mainCities: ['Adamstown'],
    rawOffsetInMinutes: -480,
    abbreviation: 'PST',
  },
  'America/Hermosillo': {
    name: 'America/Hermosillo',
    alternativeName: 'Mexican Pacific Time',
    group: ['America/Hermosillo', 'America/Mazatlan', 'Mexico/BajaSur'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Mexico',
    countryCode: 'MX',
    mainCities: [
      'Hermosillo',
      'Culiacán',
      'Ciudad Obregón',
      'Mazatlán',
    ],
    rawOffsetInMinutes: -420,
    abbreviation: 'GMT-7',
  },
  'America/Phoenix': {
    name: 'America/Phoenix',
    alternativeName: 'Mountain Time',
    group: ['America/Phoenix', 'US/Arizona', 'America/Creston'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'United States',
    countryCode: 'US',
    mainCities: ['Phoenix', 'Tucson', 'Mesa', 'Chandler'],
    rawOffsetInMinutes: -420,
    abbreviation: 'MST',
  },
  'America/Los_Angeles': {
    name: 'America/Los_Angeles',
    alternativeName: 'Pacific Time',
    group: ['America/Los_Angeles', 'US/Pacific'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'United States',
    countryCode: 'US',
    mainCities: [
      'Los Angeles',
      'San Diego',
      'San Jose',
      'San Francisco',
    ],
    rawOffsetInMinutes: -480,
    abbreviation: 'PST',
  },
  'America/Tijuana': {
    name: 'America/Tijuana',
    alternativeName: 'Pacific Time',
    group: [
      'America/Tijuana',
      'Mexico/BajaNorte',
      'America/Ensenada',
      'America/Santa_Isabel',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Mexico',
    countryCode: 'MX',
    mainCities: ['Tijuana', 'Mexicali', 'Ensenada', 'Rosarito'],
    rawOffsetInMinutes: -480,
    abbreviation: 'PST',
  },
  'America/Vancouver': {
    name: 'America/Vancouver',
    alternativeName: 'Pacific Time',
    group: ['America/Vancouver', 'Canada/Pacific'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Canada',
    countryCode: 'CA',
    mainCities: ['Vancouver', 'Surrey', 'Okanagan', 'Victoria'],
    rawOffsetInMinutes: -480,
    abbreviation: 'PST',
  },
  'America/Whitehorse': {
    name: 'America/Whitehorse',
    alternativeName: 'Yukon Time',
    group: [
      'America/Creston',
      'America/Dawson',
      'America/Dawson_Creek',
      'America/Fort_Nelson',
      'America/Whitehorse',
      'Canada/Yukon',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Canada',
    countryCode: 'CA',
    mainCities: ['Whitehorse', 'Fort St. John', 'Creston', 'Dawson'],
    rawOffsetInMinutes: -420,
    abbreviation: 'YT',
  },
  'America/Belize': {
    name: 'America/Belize',
    alternativeName: 'Central Time',
    group: ['America/Belize'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Belize',
    countryCode: 'BZ',
    mainCities: [
      'Belize City',
      'San Ignacio',
      'San Pedro',
      'Orange Walk',
    ],
    rawOffsetInMinutes: -360,
    abbreviation: 'CST',
  },
  'America/Guatemala': {
    name: 'America/Guatemala',
    alternativeName: 'Central Time',
    group: ['America/Guatemala'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Guatemala',
    countryCode: 'GT',
    mainCities: ['Guatemala City', 'Villa Nueva', 'Mixco', 'Cobán'],
    rawOffsetInMinutes: -360,
    abbreviation: 'CST',
  },
  'America/Managua': {
    name: 'America/Managua',
    alternativeName: 'Central Time',
    group: ['America/Managua'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Nicaragua',
    countryCode: 'NI',
    mainCities: ['Managua', 'León', 'Masaya', 'Chinandega'],
    rawOffsetInMinutes: -360,
    abbreviation: 'CST',
  },
  'America/Mexico_City': {
    name: 'America/Mexico_City',
    alternativeName: 'Central Time',
    group: [
      'America/Bahia_Banderas',
      'America/Chihuahua',
      'America/Merida',
      'America/Mexico_City',
      'America/Monterrey',
      'Mexico/General',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Mexico',
    countryCode: 'MX',
    mainCities: [
      'Mexico City',
      'Iztapalapa',
      'León de los Aldama',
      'Puebla',
    ],
    rawOffsetInMinutes: -360,
    abbreviation: 'CST',
  },
  'America/Costa_Rica': {
    name: 'America/Costa_Rica',
    alternativeName: 'Central Time',
    group: ['America/Costa_Rica'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Costa Rica',
    countryCode: 'CR',
    mainCities: ['San José', 'Limón', 'San Francisco', 'Alajuela'],
    rawOffsetInMinutes: -360,
    abbreviation: 'CST',
  },
  'America/El_Salvador': {
    name: 'America/El_Salvador',
    alternativeName: 'Central Time',
    group: ['America/El_Salvador'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'El Salvador',
    countryCode: 'SV',
    mainCities: [
      'San Salvador',
      'Soyapango',
      'San Miguel',
      'Santa Ana',
    ],
    rawOffsetInMinutes: -360,
    abbreviation: 'CST',
  },
  'America/Regina': {
    name: 'America/Regina',
    alternativeName: 'Central Time',
    group: [
      'America/Regina',
      'America/Swift_Current',
      'Canada/Saskatchewan',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Canada',
    countryCode: 'CA',
    mainCities: ['Saskatoon', 'Regina', 'Prince Albert', 'Moose Jaw'],
    rawOffsetInMinutes: -360,
    abbreviation: 'CST',
  },
  'America/Tegucigalpa': {
    name: 'America/Tegucigalpa',
    alternativeName: 'Central Time',
    group: ['America/Tegucigalpa'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Honduras',
    countryCode: 'HN',
    mainCities: [
      'Tegucigalpa',
      'San Pedro Sula',
      'La Ceiba',
      'Choloma',
    ],
    rawOffsetInMinutes: -360,
    abbreviation: 'CST',
  },
  'Pacific/Galapagos': {
    name: 'Pacific/Galapagos',
    alternativeName: 'Galapagos Time',
    group: ['Pacific/Galapagos'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Ecuador',
    countryCode: 'EC',
    mainCities: ['Galapagos'],
    rawOffsetInMinutes: -360,
    abbreviation: 'GALT',
  },
  'America/Edmonton': {
    name: 'America/Edmonton',
    alternativeName: 'Mountain Time',
    group: [
      'America/Cambridge_Bay',
      'America/Edmonton',
      'America/Inuvik',
      'America/Yellowknife',
      'Canada/Mountain',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Canada',
    countryCode: 'CA',
    mainCities: ['Calgary', 'Edmonton', 'Red Deer', 'Sherwood Park'],
    rawOffsetInMinutes: -420,
    abbreviation: 'MST',
  },
  'America/Ciudad_Juarez': {
    name: 'America/Ciudad_Juarez',
    alternativeName: 'Mountain Time',
    group: ['America/Ciudad_Juarez'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Mexico',
    countryCode: 'MX',
    mainCities: ['Ciudad Juárez'],
    rawOffsetInMinutes: -420,
    abbreviation: 'MST',
  },
  'America/Denver': {
    name: 'America/Denver',
    alternativeName: 'Mountain Time',
    group: [
      'America/Boise',
      'America/Denver',
      'Navajo',
      'US/Mountain',
      'America/Shiprock',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'United States',
    countryCode: 'US',
    mainCities: [
      'Denver',
      'El Paso',
      'Albuquerque',
      'Colorado Springs',
    ],
    rawOffsetInMinutes: -420,
    abbreviation: 'MST',
  },
  'America/Rio_Branco': {
    name: 'America/Rio_Branco',
    alternativeName: 'Acre Time',
    group: [
      'America/Eirunepe',
      'America/Rio_Branco',
      'Brazil/Acre',
      'America/Porto_Acre',
    ],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Brazil',
    countryCode: 'BR',
    mainCities: [
      'Rio Branco',
      'Cruzeiro do Sul',
      'Senador Guiomard',
      'Sena Madureira',
    ],
    rawOffsetInMinutes: -300,
    abbreviation: 'ACT',
  },
  'America/Chicago': {
    name: 'America/Chicago',
    alternativeName: 'Central Time',
    group: [
      'America/Chicago',
      'America/Indiana/Knox',
      'America/Indiana/Tell_City',
      'America/Menominee',
      'America/North_Dakota/Beulah',
      'America/North_Dakota/Center',
      'America/North_Dakota/New_Salem',
      'US/Central',
      'US/Indiana-Starke',
      'America/Knox_IN',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'United States',
    countryCode: 'US',
    mainCities: ['Chicago', 'Houston', 'San Antonio', 'Dallas'],
    rawOffsetInMinutes: -360,
    abbreviation: 'CST',
  },
  'America/Matamoros': {
    name: 'America/Matamoros',
    alternativeName: 'Central Time',
    group: ['America/Matamoros', 'America/Ojinaga'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Mexico',
    countryCode: 'MX',
    mainCities: [
      'Reynosa',
      'Heroica Matamoros',
      'Nuevo Laredo',
      'Piedras Negras',
    ],
    rawOffsetInMinutes: -360,
    abbreviation: 'CST',
  },
  'America/Winnipeg': {
    name: 'America/Winnipeg',
    alternativeName: 'Central Time',
    group: [
      'America/Rankin_Inlet',
      'America/Resolute',
      'America/Winnipeg',
      'Canada/Central',
      'America/Rainy_River',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Canada',
    countryCode: 'CA',
    mainCities: ['Winnipeg', 'Brandon', 'Steinbach', 'Kenora'],
    rawOffsetInMinutes: -360,
    abbreviation: 'CST',
  },
  'America/Bogota': {
    name: 'America/Bogota',
    alternativeName: 'Colombia Time',
    group: ['America/Bogota'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Colombia',
    countryCode: 'CO',
    mainCities: ['Bogotá', 'Cali', 'Medellín', 'Barranquilla'],
    rawOffsetInMinutes: -300,
    abbreviation: 'COT',
  },
  'Pacific/Easter': {
    name: 'Pacific/Easter',
    alternativeName: 'Easter Island Time',
    group: ['Pacific/Easter', 'Chile/EasterIsland'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Chile',
    countryCode: 'CL',
    mainCities: ['Easter'],
    rawOffsetInMinutes: -360,
    abbreviation: 'EAST',
  },
  'America/Atikokan': {
    name: 'America/Atikokan',
    alternativeName: 'Eastern Time',
    group: ['America/Atikokan'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Canada',
    countryCode: 'CA',
    mainCities: ['Atikokan'],
    rawOffsetInMinutes: -300,
    abbreviation: 'EST',
  },
  'America/Cancun': {
    name: 'America/Cancun',
    alternativeName: 'Eastern Time',
    group: ['America/Cancun'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Mexico',
    countryCode: 'MX',
    mainCities: ['Cancún', 'Chetumal', 'Playa del Carmen', 'Cozumel'],
    rawOffsetInMinutes: -300,
    abbreviation: 'EST',
  },
  'America/Cayman': {
    name: 'America/Cayman',
    alternativeName: 'Eastern Time',
    group: ['America/Cayman'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Cayman Islands',
    countryCode: 'KY',
    mainCities: ['George Town', 'West Bay'],
    rawOffsetInMinutes: -300,
    abbreviation: 'EST',
  },
  'America/Jamaica': {
    name: 'America/Jamaica',
    alternativeName: 'Eastern Time',
    group: ['America/Jamaica', 'Jamaica'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Jamaica',
    countryCode: 'JM',
    mainCities: [
      'Kingston',
      'New Kingston',
      'Spanish Town',
      'Portmore',
    ],
    rawOffsetInMinutes: -300,
    abbreviation: 'EST',
  },
  'America/Panama': {
    name: 'America/Panama',
    alternativeName: 'Eastern Time',
    group: [
      'America/Panama',
      'America/Atikokan',
      'America/Cayman',
      'America/Coral_Harbour',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Panama',
    countryCode: 'PA',
    mainCities: ['Panamá', 'San Miguelito', 'Juan Díaz', 'David'],
    rawOffsetInMinutes: -300,
    abbreviation: 'EST',
  },
  'America/Guayaquil': {
    name: 'America/Guayaquil',
    alternativeName: 'Ecuador Time',
    group: ['America/Guayaquil'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Ecuador',
    countryCode: 'EC',
    mainCities: [
      'Quito',
      'Guayaquil',
      'Cuenca',
      'Santo Domingo de los Colorados',
    ],
    rawOffsetInMinutes: -300,
    abbreviation: 'ECT',
  },
  'America/Lima': {
    name: 'America/Lima',
    alternativeName: 'Peru Time',
    group: ['America/Lima'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Peru',
    countryCode: 'PE',
    mainCities: ['Lima', 'Callao', 'Arequipa', 'Trujillo'],
    rawOffsetInMinutes: -300,
    abbreviation: 'PET',
  },
  'America/Manaus': {
    name: 'America/Manaus',
    alternativeName: 'Amazon Time',
    group: [
      'America/Boa_Vista',
      'America/Campo_Grande',
      'America/Cuiaba',
      'America/Manaus',
      'America/Porto_Velho',
      'Brazil/West',
    ],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Brazil',
    countryCode: 'BR',
    mainCities: ['Manaus', 'Campo Grande', 'Cuiabá', 'Porto Velho'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AMT',
  },
  'America/St_Kitts': {
    name: 'America/St_Kitts',
    alternativeName: 'Atlantic Time',
    group: ['America/St_Kitts'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Saint Kitts and Nevis',
    countryCode: 'KN',
    mainCities: ['Basseterre'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Blanc-Sablon': {
    name: 'America/Blanc-Sablon',
    alternativeName: 'Atlantic Time',
    group: ['America/Blanc-Sablon'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Canada',
    countryCode: 'CA',
    mainCities: ['Blanc-Sablon'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Montserrat': {
    name: 'America/Montserrat',
    alternativeName: 'Atlantic Time',
    group: ['America/Montserrat'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Montserrat',
    countryCode: 'MS',
    mainCities: ['Brades', 'Plymouth'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Barbados': {
    name: 'America/Barbados',
    alternativeName: 'Atlantic Time',
    group: ['America/Barbados'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Barbados',
    countryCode: 'BB',
    mainCities: ['Bridgetown'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/St_Lucia': {
    name: 'America/St_Lucia',
    alternativeName: 'Atlantic Time',
    group: ['America/St_Lucia'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Saint Lucia',
    countryCode: 'LC',
    mainCities: ['Castries'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Port_of_Spain': {
    name: 'America/Port_of_Spain',
    alternativeName: 'Atlantic Time',
    group: ['America/Port_of_Spain'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Trinidad and Tobago',
    countryCode: 'TT',
    mainCities: [
      'Chaguanas',
      'Mon Repos',
      'San Fernando',
      'Port of Spain',
    ],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Martinique': {
    name: 'America/Martinique',
    alternativeName: 'Atlantic Time',
    group: ['America/Martinique'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Martinique',
    countryCode: 'MQ',
    mainCities: [
      'Fort-de-France',
      'Le Lamentin',
      'Le Robert',
      'Sainte-Marie',
    ],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/St_Barthelemy': {
    name: 'America/St_Barthelemy',
    alternativeName: 'Atlantic Time',
    group: ['America/St_Barthelemy'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Saint Barthelemy',
    countryCode: 'BL',
    mainCities: ['Gustavia'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/St_Vincent': {
    name: 'America/St_Vincent',
    alternativeName: 'Atlantic Time',
    group: ['America/St_Vincent'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Saint Vincent and the Grenadines',
    countryCode: 'VC',
    mainCities: ['Kingstown'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Kralendijk': {
    name: 'America/Kralendijk',
    alternativeName: 'Atlantic Time',
    group: ['America/Kralendijk'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Bonaire, Saint Eustatius and Saba ',
    countryCode: 'BQ',
    mainCities: ['Kralendijk'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Guadeloupe': {
    name: 'America/Guadeloupe',
    alternativeName: 'Atlantic Time',
    group: ['America/Guadeloupe'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Guadeloupe',
    countryCode: 'GP',
    mainCities: [
      'Les Abymes',
      'Baie-Mahault',
      'Le Gosier',
      'Petit-Bourg',
    ],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Marigot': {
    name: 'America/Marigot',
    alternativeName: 'Atlantic Time',
    group: ['America/Marigot'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Saint Martin',
    countryCode: 'MF',
    mainCities: ['Marigot'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Aruba': {
    name: 'America/Aruba',
    alternativeName: 'Atlantic Time',
    group: ['America/Aruba'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Aruba',
    countryCode: 'AW',
    mainCities: ['Oranjestad', 'Tanki Leendert', 'San Nicolas'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Lower_Princes': {
    name: 'America/Lower_Princes',
    alternativeName: 'Atlantic Time',
    group: ['America/Lower_Princes'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Sint Maarten',
    countryCode: 'SX',
    mainCities: ['Philipsburg'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Tortola': {
    name: 'America/Tortola',
    alternativeName: 'Atlantic Time',
    group: ['America/Tortola'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'British Virgin Islands',
    countryCode: 'VG',
    mainCities: ['Road Town'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Dominica': {
    name: 'America/Dominica',
    alternativeName: 'Atlantic Time',
    group: ['America/Dominica'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Dominica',
    countryCode: 'DM',
    mainCities: ['Roseau'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/St_Thomas': {
    name: 'America/St_Thomas',
    alternativeName: 'Atlantic Time',
    group: ['America/St_Thomas'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'U.S. Virgin Islands',
    countryCode: 'VI',
    mainCities: ['Saint Croix', 'Charlotte Amalie'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Grenada': {
    name: 'America/Grenada',
    alternativeName: 'Atlantic Time',
    group: ['America/Grenada'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Grenada',
    countryCode: 'GD',
    mainCities: ["Saint George's"],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Antigua': {
    name: 'America/Antigua',
    alternativeName: 'Atlantic Time',
    group: ['America/Antigua'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Antigua and Barbuda',
    countryCode: 'AG',
    mainCities: ['Saint John’s'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Puerto_Rico': {
    name: 'America/Puerto_Rico',
    alternativeName: 'Atlantic Time',
    group: [
      'America/Puerto_Rico',
      'America/Virgin',
      'America/Anguilla',
      'America/Antigua',
      'America/Aruba',
      'America/Blanc-Sablon',
      'America/Curacao',
      'America/Dominica',
      'America/Grenada',
      'America/Guadeloupe',
      'America/Kralendijk',
      'America/Lower_Princes',
      'America/Marigot',
      'America/Montserrat',
      'America/Port_of_Spain',
      'America/St_Barthelemy',
      'America/St_Kitts',
      'America/St_Lucia',
      'America/St_Thomas',
      'America/St_Vincent',
      'America/Tortola',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Puerto Rico',
    countryCode: 'PR',
    mainCities: ['San Juan', 'Bayamón', 'Carolina', 'Ponce'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Santo_Domingo': {
    name: 'America/Santo_Domingo',
    alternativeName: 'Atlantic Time',
    group: ['America/Santo_Domingo'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Dominican Republic',
    countryCode: 'DO',
    mainCities: [
      'Santo Domingo',
      'Santiago de los Caballeros',
      'Santo Domingo Oeste',
      'Santo Domingo Este',
    ],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Anguilla': {
    name: 'America/Anguilla',
    alternativeName: 'Atlantic Time',
    group: ['America/Anguilla'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Anguilla',
    countryCode: 'AI',
    mainCities: ['The Valley'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Curacao': {
    name: 'America/Curacao',
    alternativeName: 'Atlantic Time',
    group: ['America/Curacao'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Curacao',
    countryCode: 'CW',
    mainCities: ['Willemstad'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/La_Paz': {
    name: 'America/La_Paz',
    alternativeName: 'Bolivia Time',
    group: ['America/La_Paz'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Bolivia',
    countryCode: 'BO',
    mainCities: [
      'La Paz',
      'Santa Cruz de la Sierra',
      'Cochabamba',
      'Sucre',
    ],
    rawOffsetInMinutes: -240,
    abbreviation: 'BOT',
  },
  'America/Havana': {
    name: 'America/Havana',
    alternativeName: 'Cuba Time',
    group: ['America/Havana', 'Cuba'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Cuba',
    countryCode: 'CU',
    mainCities: ['Havana', 'Santiago de Cuba', 'Camagüey', 'Holguín'],
    rawOffsetInMinutes: -300,
    abbreviation: 'CST',
  },
  'America/Grand_Turk': {
    name: 'America/Grand_Turk',
    alternativeName: 'Eastern Time',
    group: ['America/Grand_Turk'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Turks and Caicos Islands',
    countryCode: 'TC',
    mainCities: ['Cockburn Town'],
    rawOffsetInMinutes: -300,
    abbreviation: 'EST',
  },
  'America/Nassau': {
    name: 'America/Nassau',
    alternativeName: 'Eastern Time',
    group: ['America/Nassau'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Bahamas',
    countryCode: 'BS',
    mainCities: ['Nassau', 'Lucaya', 'Freeport'],
    rawOffsetInMinutes: -300,
    abbreviation: 'EST',
  },
  'America/New_York': {
    name: 'America/New_York',
    alternativeName: 'Eastern Time',
    group: [
      'America/Detroit',
      'America/Indiana/Indianapolis',
      'America/Indiana/Marengo',
      'America/Indiana/Petersburg',
      'America/Indiana/Vevay',
      'America/Indiana/Vincennes',
      'America/Indiana/Winamac',
      'America/Kentucky/Louisville',
      'America/Kentucky/Monticello',
      'America/New_York',
      'US/Michigan',
      'US/East-Indiana',
      'America/Indianapolis',
      'America/Fort_Wayne',
      'America/Louisville',
      'US/Eastern',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'United States',
    countryCode: 'US',
    mainCities: ['New York City', 'Brooklyn', 'Queens', 'Philadelphia'],
    rawOffsetInMinutes: -300,
    abbreviation: 'EST',
  },
  'America/Port-au-Prince': {
    name: 'America/Port-au-Prince',
    alternativeName: 'Eastern Time',
    group: ['America/Port-au-Prince'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Haiti',
    countryCode: 'HT',
    mainCities: [
      'Port-au-Prince',
      'Carrefour',
      'Delmas 73',
      'Port-de-Paix',
    ],
    rawOffsetInMinutes: -300,
    abbreviation: 'EST',
  },
  'America/Toronto': {
    name: 'America/Toronto',
    alternativeName: 'Eastern Time',
    group: [
      'America/Iqaluit',
      'America/Toronto',
      'America/Pangnirtung',
      'Canada/Eastern',
      'America/Nassau',
      'America/Montreal',
      'America/Nipigon',
      'America/Thunder_Bay',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Canada',
    countryCode: 'CA',
    mainCities: ['Toronto', 'Montréal', 'Ottawa', 'Mississauga'],
    rawOffsetInMinutes: -300,
    abbreviation: 'EST',
  },
  'America/Guyana': {
    name: 'America/Guyana',
    alternativeName: 'Guyana Time',
    group: ['America/Guyana'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Guyana',
    countryCode: 'GY',
    mainCities: ['Georgetown', 'Linden', 'New Amsterdam'],
    rawOffsetInMinutes: -240,
    abbreviation: 'GYT',
  },
  'America/Caracas': {
    name: 'America/Caracas',
    alternativeName: 'Venezuela Time',
    group: ['America/Caracas'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Venezuela',
    countryCode: 'VE',
    mainCities: ['Caracas', 'Maracaibo', 'Maracay', 'Valencia'],
    rawOffsetInMinutes: -240,
    abbreviation: 'VET',
  },
  'America/Argentina/Buenos_Aires': {
    name: 'America/Argentina/Buenos_Aires',
    alternativeName: 'Argentina Time',
    group: [
      'America/Argentina/Buenos_Aires',
      'America/Argentina/Catamarca',
      'America/Argentina/Cordoba',
      'America/Argentina/Jujuy',
      'America/Argentina/La_Rioja',
      'America/Argentina/Mendoza',
      'America/Argentina/Rio_Gallegos',
      'America/Argentina/Salta',
      'America/Argentina/San_Juan',
      'America/Argentina/San_Luis',
      'America/Argentina/Tucuman',
      'America/Argentina/Ushuaia',
      'America/Buenos_Aires',
      'America/Catamarca',
      'America/Argentina/ComodRivadavia',
      'America/Cordoba',
      'America/Rosario',
      'America/Jujuy',
      'America/Mendoza',
    ],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Argentina',
    countryCode: 'AR',
    mainCities: ['Buenos Aires', 'Córdoba', 'Rosario', 'Mar del Plata'],
    rawOffsetInMinutes: -180,
    abbreviation: 'ART',
  },
  'America/Halifax': {
    name: 'America/Halifax',
    alternativeName: 'Atlantic Time',
    group: [
      'America/Glace_Bay',
      'America/Goose_Bay',
      'America/Halifax',
      'America/Moncton',
      'Canada/Atlantic',
    ],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Canada',
    countryCode: 'CA',
    mainCities: ['Halifax', 'Moncton', 'Sydney', 'Dartmouth'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'Atlantic/Bermuda': {
    name: 'Atlantic/Bermuda',
    alternativeName: 'Atlantic Time',
    group: ['Atlantic/Bermuda'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Bermuda',
    countryCode: 'BM',
    mainCities: ['Hamilton'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Thule': {
    name: 'America/Thule',
    alternativeName: 'Atlantic Time',
    group: ['America/Thule'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Greenland',
    countryCode: 'GL',
    mainCities: ['Thule'],
    rawOffsetInMinutes: -240,
    abbreviation: 'AST',
  },
  'America/Sao_Paulo': {
    name: 'America/Sao_Paulo',
    alternativeName: 'Brasilia Time',
    group: [
      'America/Araguaina',
      'America/Bahia',
      'America/Belem',
      'America/Fortaleza',
      'America/Maceio',
      'America/Recife',
      'America/Santarem',
      'America/Sao_Paulo',
      'Brazil/East',
    ],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Brazil',
    countryCode: 'BR',
    mainCities: [
      'São Paulo',
      'Rio de Janeiro',
      'Belo Horizonte',
      'Salvador',
    ],
    rawOffsetInMinutes: -180,
    abbreviation: 'BRT',
  },
  'Antarctica/Palmer': {
    name: 'Antarctica/Palmer',
    alternativeName: 'Chile Time',
    group: ['Antarctica/Palmer', 'Antarctica/Rothera'],
    continentCode: 'AN',
    continentName: 'Antarctica',
    countryName: 'Antarctica',
    countryCode: 'AQ',
    mainCities: ['Palmer', 'Rothera'],
    rawOffsetInMinutes: -180,
    abbreviation: 'CLT',
  },
  'America/Punta_Arenas': {
    name: 'America/Punta_Arenas',
    alternativeName: 'Chile Time',
    group: ['America/Punta_Arenas'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Chile',
    countryCode: 'CL',
    mainCities: ['Punta Arenas', 'Puerto Natales'],
    rawOffsetInMinutes: -180,
    abbreviation: 'CLT',
  },
  'America/Santiago': {
    name: 'America/Santiago',
    alternativeName: 'Chile Time',
    group: ['America/Santiago', 'Chile/Continental'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Chile',
    countryCode: 'CL',
    mainCities: [
      'Santiago',
      'Puente Alto',
      'Antofagasta',
      'Viña del Mar',
    ],
    rawOffsetInMinutes: -240,
    abbreviation: 'CLT',
  },
  'Atlantic/Stanley': {
    name: 'Atlantic/Stanley',
    alternativeName: 'Falkland Islands Time',
    group: ['Atlantic/Stanley'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Falkland Islands',
    countryCode: 'FK',
    mainCities: ['Stanley'],
    rawOffsetInMinutes: -180,
    abbreviation: 'FKST',
  },
  'America/Cayenne': {
    name: 'America/Cayenne',
    alternativeName: 'French Guiana Time',
    group: ['America/Cayenne'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'French Guiana',
    countryCode: 'GF',
    mainCities: [
      'Cayenne',
      'Matoury',
      'Saint-Laurent-du-Maroni',
      'Kourou',
    ],
    rawOffsetInMinutes: -180,
    abbreviation: 'GFT',
  },
  'America/Asuncion': {
    name: 'America/Asuncion',
    alternativeName: 'Paraguay Time',
    group: ['America/Asuncion'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Paraguay',
    countryCode: 'PY',
    mainCities: [
      'Asunción',
      'Ciudad del Este',
      'San Lorenzo',
      'Capiatá',
    ],
    rawOffsetInMinutes: -240,
    abbreviation: 'PYT',
  },
  'America/Paramaribo': {
    name: 'America/Paramaribo',
    alternativeName: 'Suriname Time',
    group: ['America/Paramaribo'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Suriname',
    countryCode: 'SR',
    mainCities: ['Paramaribo', 'Lelydorp'],
    rawOffsetInMinutes: -180,
    abbreviation: 'SRT',
  },
  'America/Montevideo': {
    name: 'America/Montevideo',
    alternativeName: 'Uruguay Time',
    group: ['America/Montevideo'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Uruguay',
    countryCode: 'UY',
    mainCities: ['Montevideo', 'Salto', 'Paysandú', 'Las Piedras'],
    rawOffsetInMinutes: -180,
    abbreviation: 'UYT',
  },
  'America/St_Johns': {
    name: 'America/St_Johns',
    alternativeName: 'Newfoundland Time',
    group: ['America/St_Johns', 'Canada/Newfoundland'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Canada',
    countryCode: 'CA',
    mainCities: [
      "St. John's",
      'Mount Pearl',
      'Corner Brook',
      'Conception Bay South',
    ],
    rawOffsetInMinutes: -210,
    abbreviation: 'NST',
  },
  'America/Noronha': {
    name: 'America/Noronha',
    alternativeName: 'Fernando de Noronha Time',
    group: ['America/Noronha', 'Brazil/DeNoronha'],
    continentCode: 'SA',
    continentName: 'South America',
    countryName: 'Brazil',
    countryCode: 'BR',
    mainCities: ['Noronha'],
    rawOffsetInMinutes: -120,
    abbreviation: 'FNT',
  },
  'Atlantic/South_Georgia': {
    name: 'Atlantic/South_Georgia',
    alternativeName: 'South Georgia Time',
    group: ['Atlantic/South_Georgia'],
    continentCode: 'AN',
    continentName: 'Antarctica',
    countryName: 'South Georgia and the South Sandwich Islands',
    countryCode: 'GS',
    mainCities: ['Grytviken'],
    rawOffsetInMinutes: -120,
    abbreviation: 'GST',
  },
  'America/Miquelon': {
    name: 'America/Miquelon',
    alternativeName: 'St. Pierre & Miquelon Time',
    group: ['America/Miquelon'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Saint Pierre and Miquelon',
    countryCode: 'PM',
    mainCities: ['Saint-Pierre'],
    rawOffsetInMinutes: -180,
    abbreviation: 'PM',
  },
  'America/Nuuk': {
    name: 'America/Nuuk',
    alternativeName: 'West Greenland Time',
    group: ['America/Nuuk', 'America/Godthab'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Greenland',
    countryCode: 'GL',
    mainCities: ['Nuuk'],
    rawOffsetInMinutes: -120,
    abbreviation: 'WGT',
  },
  'Atlantic/Azores': {
    name: 'Atlantic/Azores',
    alternativeName: 'Azores Time',
    group: ['Atlantic/Azores'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Portugal',
    countryCode: 'PT',
    mainCities: ['Ponta Delgada'],
    rawOffsetInMinutes: -60,
    abbreviation: 'AZOT',
  },
  'Atlantic/Cape_Verde': {
    name: 'Atlantic/Cape_Verde',
    alternativeName: 'Cape Verde Time',
    group: ['Atlantic/Cape_Verde'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Cabo Verde',
    countryCode: 'CV',
    mainCities: ['Praia', 'Mindelo', 'Espargos', 'Assomada'],
    rawOffsetInMinutes: -60,
    abbreviation: 'CVT',
  },
  'America/Scoresbysund': {
    name: 'America/Scoresbysund',
    alternativeName: 'East Greenland Time',
    group: ['America/Scoresbysund'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Greenland',
    countryCode: 'GL',
    mainCities: ['Scoresbysund'],
    rawOffsetInMinutes: -60,
    abbreviation: 'EGT',
  },
  'Africa/Abidjan': {
    name: 'Africa/Abidjan',
    alternativeName: 'Greenwich Mean Time',
    group: [
      'Africa/Abidjan',
      'Iceland',
      'Africa/Accra',
      'Africa/Bamako',
      'Africa/Banjul',
      'Africa/Conakry',
      'Africa/Dakar',
      'Africa/Freetown',
      'Africa/Lome',
      'Africa/Nouakchott',
      'Africa/Ouagadougou',
      'Atlantic/Reykjavik',
      'Atlantic/St_Helena',
      'Africa/Timbuktu',
    ],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Ivory Coast',
    countryCode: 'CI',
    mainCities: ['Abidjan', 'Abobo', 'Bouaké', 'Korhogo'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Bamako': {
    name: 'Africa/Bamako',
    alternativeName: 'Greenwich Mean Time',
    group: ['Africa/Bamako'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Mali',
    countryCode: 'ML',
    mainCities: ['Bamako', 'Sikasso', 'Koutiala', 'Ségou'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Bissau': {
    name: 'Africa/Bissau',
    alternativeName: 'Greenwich Mean Time',
    group: ['Africa/Bissau'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Guinea-Bissau',
    countryCode: 'GW',
    mainCities: ['Bissau', 'Gabú', 'Bafatá'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Conakry': {
    name: 'Africa/Conakry',
    alternativeName: 'Greenwich Mean Time',
    group: ['Africa/Conakry'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Guinea',
    countryCode: 'GN',
    mainCities: ['Conakry', 'Camayenne', 'Nzérékoré', 'Kankan'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Dakar': {
    name: 'Africa/Dakar',
    alternativeName: 'Greenwich Mean Time',
    group: ['Africa/Dakar'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Senegal',
    countryCode: 'SN',
    mainCities: ['Dakar', 'Pikine', 'Touba', 'Thiès'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'America/Danmarkshavn': {
    name: 'America/Danmarkshavn',
    alternativeName: 'Greenwich Mean Time',
    group: ['America/Danmarkshavn'],
    continentCode: 'NA',
    continentName: 'North America',
    countryName: 'Greenland',
    countryCode: 'GL',
    mainCities: ['Danmarkshavn'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Europe/Isle_of_Man': {
    name: 'Europe/Isle_of_Man',
    alternativeName: 'Greenwich Mean Time',
    group: ['Europe/Isle_of_Man'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Isle of Man',
    countryCode: 'IM',
    mainCities: ['Douglas'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Europe/Dublin': {
    name: 'Europe/Dublin',
    alternativeName: 'Greenwich Mean Time',
    group: ['Europe/Dublin', 'Eire'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Ireland',
    countryCode: 'IE',
    mainCities: ['Dublin', 'South Dublin', 'Cork', 'Limerick'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Freetown': {
    name: 'Africa/Freetown',
    alternativeName: 'Greenwich Mean Time',
    group: ['Africa/Freetown'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Sierra Leone',
    countryCode: 'SL',
    mainCities: ['Freetown', 'Bo', 'Kenema', 'Koidu'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Atlantic/St_Helena': {
    name: 'Atlantic/St_Helena',
    alternativeName: 'Greenwich Mean Time',
    group: ['Atlantic/St_Helena'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Saint Helena',
    countryCode: 'SH',
    mainCities: ['Jamestown'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Accra': {
    name: 'Africa/Accra',
    alternativeName: 'Greenwich Mean Time',
    group: ['Africa/Accra'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Ghana',
    countryCode: 'GH',
    mainCities: ['Kumasi', 'Accra', 'Tamale', 'Takoradi'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Lome': {
    name: 'Africa/Lome',
    alternativeName: 'Greenwich Mean Time',
    group: ['Africa/Lome'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Togo',
    countryCode: 'TG',
    mainCities: ['Lomé', 'Sokodé', 'Kara', 'Atakpamé'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Europe/London': {
    name: 'Europe/London',
    alternativeName: 'Greenwich Mean Time',
    group: [
      'Europe/London',
      'GB',
      'GB-Eire',
      'Europe/Guernsey',
      'Europe/Isle_of_Man',
      'Europe/Jersey',
      'Europe/Belfast',
    ],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'United Kingdom',
    countryCode: 'GB',
    mainCities: ['London', 'Birmingham', 'Liverpool', 'Glasgow'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Monrovia': {
    name: 'Africa/Monrovia',
    alternativeName: 'Greenwich Mean Time',
    group: ['Africa/Monrovia'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Liberia',
    countryCode: 'LR',
    mainCities: ['Monrovia', 'Gbarnga', 'Buchanan', 'Ganta'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Nouakchott': {
    name: 'Africa/Nouakchott',
    alternativeName: 'Greenwich Mean Time',
    group: ['Africa/Nouakchott'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Mauritania',
    countryCode: 'MR',
    mainCities: ['Nouakchott', 'Nouadhibou', 'Kiffa', 'Dar Naim'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Ouagadougou': {
    name: 'Africa/Ouagadougou',
    alternativeName: 'Greenwich Mean Time',
    group: ['Africa/Ouagadougou'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Burkina Faso',
    countryCode: 'BF',
    mainCities: ['Ouagadougou', 'Bobo-Dioulasso', 'Koudougou', 'Saaba'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Atlantic/Reykjavik': {
    name: 'Atlantic/Reykjavik',
    alternativeName: 'Greenwich Mean Time',
    group: ['Atlantic/Reykjavik', 'Iceland'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Iceland',
    countryCode: 'IS',
    mainCities: [
      'Reykjavík',
      'Kópavogur',
      'Hafnarfjörður',
      'Reykjanesbær',
    ],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Europe/Jersey': {
    name: 'Europe/Jersey',
    alternativeName: 'Greenwich Mean Time',
    group: ['Europe/Jersey'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Jersey',
    countryCode: 'JE',
    mainCities: ['Saint Helier'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Europe/Guernsey': {
    name: 'Europe/Guernsey',
    alternativeName: 'Greenwich Mean Time',
    group: ['Europe/Guernsey'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Guernsey',
    countryCode: 'GG',
    mainCities: ['Saint Peter Port'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Sao_Tome': {
    name: 'Africa/Sao_Tome',
    alternativeName: 'Greenwich Mean Time',
    group: ['Africa/Sao_Tome'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Sao Tome and Principe',
    countryCode: 'ST',
    mainCities: ['São Tomé'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Banjul': {
    name: 'Africa/Banjul',
    alternativeName: 'Greenwich Mean Time',
    group: ['Africa/Banjul'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Gambia',
    countryCode: 'GM',
    mainCities: ['Serekunda', 'Brikama', 'Bununka Kunda', 'Sukuta'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Antarctica/Troll': {
    name: 'Antarctica/Troll',
    alternativeName: 'Greenwich Mean Time',
    group: ['Antarctica/Troll'],
    continentCode: 'AN',
    continentName: 'Antarctica',
    countryName: 'Antarctica',
    countryCode: 'AQ',
    mainCities: ['Troll'],
    rawOffsetInMinutes: 0,
    abbreviation: 'GMT',
  },
  'Africa/Casablanca': {
    name: 'Africa/Casablanca',
    alternativeName: 'Western European Time',
    group: ['Africa/Casablanca'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Morocco',
    countryCode: 'MA',
    mainCities: ['Casablanca', 'Rabat', 'Fes', 'Tangier'],
    rawOffsetInMinutes: 0,
    abbreviation: 'WET',
  },
  'Africa/El_Aaiun': {
    name: 'Africa/El_Aaiun',
    alternativeName: 'Western European Time',
    group: ['Africa/El_Aaiun'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Western Sahara',
    countryCode: 'EH',
    mainCities: ['Laayoune', 'Dakhla', 'Boujdour'],
    rawOffsetInMinutes: 0,
    abbreviation: 'WET',
  },
  'Atlantic/Canary': {
    name: 'Atlantic/Canary',
    alternativeName: 'Western European Time',
    group: ['Atlantic/Canary'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Spain',
    countryCode: 'ES',
    mainCities: [
      'Las Palmas de Gran Canaria',
      'Santa Cruz de Tenerife',
      'La Laguna',
      'Telde',
    ],
    rawOffsetInMinutes: 0,
    abbreviation: 'WET',
  },
  'Europe/Lisbon': {
    name: 'Europe/Lisbon',
    alternativeName: 'Western European Time',
    group: ['Atlantic/Madeira', 'Europe/Lisbon', 'Portugal'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Portugal',
    countryCode: 'PT',
    mainCities: ['Lisbon', 'Porto', 'Amadora', 'Braga'],
    rawOffsetInMinutes: 0,
    abbreviation: 'WET',
  },
  'Atlantic/Faroe': {
    name: 'Atlantic/Faroe',
    alternativeName: 'Western European Time',
    group: ['Atlantic/Faroe', 'Atlantic/Faeroe'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Faroe Islands',
    countryCode: 'FO',
    mainCities: ['Tórshavn'],
    rawOffsetInMinutes: 0,
    abbreviation: 'WET',
  },
  'Africa/Algiers': {
    name: 'Africa/Algiers',
    alternativeName: 'Central European Time',
    group: ['Africa/Algiers'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Algeria',
    countryCode: 'DZ',
    mainCities: ['Algiers', 'Oran', 'Constantine', 'Annaba'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Amsterdam': {
    name: 'Europe/Amsterdam',
    alternativeName: 'Central European Time',
    group: ['Europe/Amsterdam'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'The Netherlands',
    countryCode: 'NL',
    mainCities: ['Amsterdam', 'Rotterdam', 'The Hague', 'Utrecht'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Andorra': {
    name: 'Europe/Andorra',
    alternativeName: 'Central European Time',
    group: ['Europe/Andorra'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Andorra',
    countryCode: 'AD',
    mainCities: ['Andorra la Vella', 'les Escaldes'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Belgrade': {
    name: 'Europe/Belgrade',
    alternativeName: 'Central European Time',
    group: [
      'Europe/Belgrade',
      'Europe/Ljubljana',
      'Europe/Podgorica',
      'Europe/Sarajevo',
      'Europe/Skopje',
      'Europe/Zagreb',
    ],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Serbia',
    countryCode: 'RS',
    mainCities: ['Belgrade', 'Niš', 'Novi Sad', 'Zemun'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Berlin': {
    name: 'Europe/Berlin',
    alternativeName: 'Central European Time',
    group: [
      'Europe/Berlin',
      'Europe/Busingen',
      'Arctic/Longyearbyen',
      'Europe/Copenhagen',
      'Europe/Oslo',
      'Europe/Stockholm',
      'Atlantic/Jan_Mayen',
    ],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Germany',
    countryCode: 'DE',
    mainCities: ['Berlin', 'Hamburg', 'Munich', 'Köln'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Bratislava': {
    name: 'Europe/Bratislava',
    alternativeName: 'Central European Time',
    group: ['Europe/Bratislava'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Slovakia',
    countryCode: 'SK',
    mainCities: ['Bratislava', 'Košice', 'Nitra', 'Prešov'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Brussels': {
    name: 'Europe/Brussels',
    alternativeName: 'Central European Time',
    group: ['Europe/Brussels', 'Europe/Amsterdam', 'Europe/Luxembourg'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Belgium',
    countryCode: 'BE',
    mainCities: ['Brussels', 'Antwerpen', 'Gent', 'Charleroi'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Budapest': {
    name: 'Europe/Budapest',
    alternativeName: 'Central European Time',
    group: ['Europe/Budapest'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Hungary',
    countryCode: 'HU',
    mainCities: ['Budapest', 'Debrecen', 'Szeged', 'Miskolc'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Copenhagen': {
    name: 'Europe/Copenhagen',
    alternativeName: 'Central European Time',
    group: ['Europe/Copenhagen'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Denmark',
    countryCode: 'DK',
    mainCities: ['Copenhagen', 'Århus', 'Odense', 'Aalborg'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Gibraltar': {
    name: 'Europe/Gibraltar',
    alternativeName: 'Central European Time',
    group: ['Europe/Gibraltar'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Gibraltar',
    countryCode: 'GI',
    mainCities: ['Gibraltar'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Ljubljana': {
    name: 'Europe/Ljubljana',
    alternativeName: 'Central European Time',
    group: ['Europe/Ljubljana'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Slovenia',
    countryCode: 'SI',
    mainCities: ['Ljubljana', 'Maribor', 'Kranj', 'Celje'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Arctic/Longyearbyen': {
    name: 'Arctic/Longyearbyen',
    alternativeName: 'Central European Time',
    group: ['Arctic/Longyearbyen'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Svalbard and Jan Mayen',
    countryCode: 'SJ',
    mainCities: ['Longyearbyen'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Luxembourg': {
    name: 'Europe/Luxembourg',
    alternativeName: 'Central European Time',
    group: ['Europe/Luxembourg'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Luxembourg',
    countryCode: 'LU',
    mainCities: ['Luxembourg', 'Esch-sur-Alzette', 'Dudelange'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Madrid': {
    name: 'Europe/Madrid',
    alternativeName: 'Central European Time',
    group: ['Africa/Ceuta', 'Europe/Madrid'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Spain',
    countryCode: 'ES',
    mainCities: ['Madrid', 'Barcelona', 'Valencia', 'Sevilla'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Monaco': {
    name: 'Europe/Monaco',
    alternativeName: 'Central European Time',
    group: ['Europe/Monaco'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Monaco',
    countryCode: 'MC',
    mainCities: ['Monaco', 'Monte-Carlo'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Oslo': {
    name: 'Europe/Oslo',
    alternativeName: 'Central European Time',
    group: ['Europe/Oslo', 'Atlantic/Jan_Mayen'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Norway',
    countryCode: 'NO',
    mainCities: ['Oslo', 'Bergen', 'Trondheim', 'Stavanger'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Paris': {
    name: 'Europe/Paris',
    alternativeName: 'Central European Time',
    group: ['Europe/Paris', 'Europe/Monaco'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'France',
    countryCode: 'FR',
    mainCities: ['Paris', 'Marseille', 'Lyon', 'Toulouse'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Podgorica': {
    name: 'Europe/Podgorica',
    alternativeName: 'Central European Time',
    group: ['Europe/Podgorica'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Montenegro',
    countryCode: 'ME',
    mainCities: ['Podgorica', 'Nikšić', 'Herceg Novi', 'Pljevlja'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Prague': {
    name: 'Europe/Prague',
    alternativeName: 'Central European Time',
    group: ['Europe/Prague', 'Europe/Bratislava'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Czechia',
    countryCode: 'CZ',
    mainCities: ['Prague', 'Brno', 'Ostrava', 'Pilsen'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Rome': {
    name: 'Europe/Rome',
    alternativeName: 'Central European Time',
    group: ['Europe/Rome', 'Europe/San_Marino', 'Europe/Vatican'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Italy',
    countryCode: 'IT',
    mainCities: ['Rome', 'Milan', 'Naples', 'Turin'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/San_Marino': {
    name: 'Europe/San_Marino',
    alternativeName: 'Central European Time',
    group: ['Europe/San_Marino'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'San Marino',
    countryCode: 'SM',
    mainCities: ['San Marino'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Malta': {
    name: 'Europe/Malta',
    alternativeName: 'Central European Time',
    group: ['Europe/Malta'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Malta',
    countryCode: 'MT',
    mainCities: ['San Pawl il-Baħar', 'Birkirkara', 'Mosta', 'Sliema'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Sarajevo': {
    name: 'Europe/Sarajevo',
    alternativeName: 'Central European Time',
    group: ['Europe/Sarajevo'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Bosnia and Herzegovina',
    countryCode: 'BA',
    mainCities: ['Sarajevo', 'Banja Luka', 'Zenica', 'Tuzla'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Skopje': {
    name: 'Europe/Skopje',
    alternativeName: 'Central European Time',
    group: ['Europe/Skopje'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'North Macedonia',
    countryCode: 'MK',
    mainCities: ['Skopje', 'Kumanovo', 'Prilep', 'Bitola'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Stockholm': {
    name: 'Europe/Stockholm',
    alternativeName: 'Central European Time',
    group: ['Europe/Stockholm'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Sweden',
    countryCode: 'SE',
    mainCities: ['Stockholm', 'Göteborg', 'Malmö', 'Uppsala'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Tirane': {
    name: 'Europe/Tirane',
    alternativeName: 'Central European Time',
    group: ['Europe/Tirane'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Albania',
    countryCode: 'AL',
    mainCities: ['Tirana', 'Durrës', 'Elbasan', 'Vlorë'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Africa/Tunis': {
    name: 'Africa/Tunis',
    alternativeName: 'Central European Time',
    group: ['Africa/Tunis'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Tunisia',
    countryCode: 'TN',
    mainCities: ['Tunis', 'Sfax', 'Sousse', 'Kairouan'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Vaduz': {
    name: 'Europe/Vaduz',
    alternativeName: 'Central European Time',
    group: ['Europe/Vaduz'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Liechtenstein',
    countryCode: 'LI',
    mainCities: ['Vaduz'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Vatican': {
    name: 'Europe/Vatican',
    alternativeName: 'Central European Time',
    group: ['Europe/Vatican'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Vatican',
    countryCode: 'VA',
    mainCities: ['Vatican City'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Vienna': {
    name: 'Europe/Vienna',
    alternativeName: 'Central European Time',
    group: ['Europe/Vienna'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Austria',
    countryCode: 'AT',
    mainCities: ['Vienna', 'Graz', 'Linz', 'Favoriten'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Warsaw': {
    name: 'Europe/Warsaw',
    alternativeName: 'Central European Time',
    group: ['Europe/Warsaw', 'Poland'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Poland',
    countryCode: 'PL',
    mainCities: ['Warsaw', 'Łódź', 'Kraków', 'Wrocław'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Zagreb': {
    name: 'Europe/Zagreb',
    alternativeName: 'Central European Time',
    group: ['Europe/Zagreb'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Croatia',
    countryCode: 'HR',
    mainCities: ['Zagreb', 'Split', 'Rijeka', 'Osijek'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Europe/Zurich': {
    name: 'Europe/Zurich',
    alternativeName: 'Central European Time',
    group: ['Europe/Zurich', 'Europe/Busingen', 'Europe/Vaduz'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Switzerland',
    countryCode: 'CH',
    mainCities: ['Zürich', 'Genève', 'Basel', 'Lausanne'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CET',
  },
  'Africa/Bangui': {
    name: 'Africa/Bangui',
    alternativeName: 'West Africa Time',
    group: ['Africa/Bangui'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Central African Republic',
    countryCode: 'CF',
    mainCities: ['Bangui', 'Bimbo', 'Bégoua', 'Carnot'],
    rawOffsetInMinutes: 60,
    abbreviation: 'WAT',
  },
  'Africa/Malabo': {
    name: 'Africa/Malabo',
    alternativeName: 'West Africa Time',
    group: ['Africa/Malabo'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Equatorial Guinea',
    countryCode: 'GQ',
    mainCities: ['Bata', 'Malabo', 'Ebebiyin'],
    rawOffsetInMinutes: 60,
    abbreviation: 'WAT',
  },
  'Africa/Brazzaville': {
    name: 'Africa/Brazzaville',
    alternativeName: 'West Africa Time',
    group: ['Africa/Brazzaville'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Republic of the Congo',
    countryCode: 'CG',
    mainCities: ['Brazzaville', 'Pointe-Noire', 'Dolisie', 'Nkayi'],
    rawOffsetInMinutes: 60,
    abbreviation: 'WAT',
  },
  'Africa/Porto-Novo': {
    name: 'Africa/Porto-Novo',
    alternativeName: 'West Africa Time',
    group: ['Africa/Porto-Novo'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Benin',
    countryCode: 'BJ',
    mainCities: ['Cotonou', 'Abomey-Calavi', 'Porto-Novo', 'Parakou'],
    rawOffsetInMinutes: 60,
    abbreviation: 'WAT',
  },
  'Africa/Douala': {
    name: 'Africa/Douala',
    alternativeName: 'West Africa Time',
    group: ['Africa/Douala'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Cameroon',
    countryCode: 'CM',
    mainCities: ['Douala', 'Yaoundé', 'Bamenda', 'Bafoussam'],
    rawOffsetInMinutes: 60,
    abbreviation: 'WAT',
  },
  'Africa/Kinshasa': {
    name: 'Africa/Kinshasa',
    alternativeName: 'West Africa Time',
    group: ['Africa/Kinshasa'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Democratic Republic of the Congo',
    countryCode: 'CD',
    mainCities: ['Kinshasa', 'Kikwit', 'Masina', 'Mbandaka'],
    rawOffsetInMinutes: 60,
    abbreviation: 'WAT',
  },
  'Africa/Lagos': {
    name: 'Africa/Lagos',
    alternativeName: 'West Africa Time',
    group: [
      'Africa/Lagos',
      'Africa/Bangui',
      'Africa/Brazzaville',
      'Africa/Douala',
      'Africa/Kinshasa',
      'Africa/Libreville',
      'Africa/Luanda',
      'Africa/Malabo',
      'Africa/Niamey',
      'Africa/Porto-Novo',
    ],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Nigeria',
    countryCode: 'NG',
    mainCities: ['Lagos', 'Kano', 'Ibadan', 'Abuja'],
    rawOffsetInMinutes: 60,
    abbreviation: 'WAT',
  },
  'Africa/Libreville': {
    name: 'Africa/Libreville',
    alternativeName: 'West Africa Time',
    group: ['Africa/Libreville'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Gabon',
    countryCode: 'GA',
    mainCities: ['Libreville', 'Port-Gentil', 'Franceville', 'Owendo'],
    rawOffsetInMinutes: 60,
    abbreviation: 'WAT',
  },
  'Africa/Luanda': {
    name: 'Africa/Luanda',
    alternativeName: 'West Africa Time',
    group: ['Africa/Luanda'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Angola',
    countryCode: 'AO',
    mainCities: ['Luanda', 'Lubango', 'Huambo', 'Benguela'],
    rawOffsetInMinutes: 60,
    abbreviation: 'WAT',
  },
  'Africa/Ndjamena': {
    name: 'Africa/Ndjamena',
    alternativeName: 'West Africa Time',
    group: ['Africa/Ndjamena'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Chad',
    countryCode: 'TD',
    mainCities: ["N'Djamena", 'Moundou', 'Abéché', 'Sarh'],
    rawOffsetInMinutes: 60,
    abbreviation: 'WAT',
  },
  'Africa/Niamey': {
    name: 'Africa/Niamey',
    alternativeName: 'West Africa Time',
    group: ['Africa/Niamey'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Niger',
    countryCode: 'NE',
    mainCities: ['Niamey', 'Maradi', 'Zinder', 'Tahoua'],
    rawOffsetInMinutes: 60,
    abbreviation: 'WAT',
  },
  'Africa/Bujumbura': {
    name: 'Africa/Bujumbura',
    alternativeName: 'Central Africa Time',
    group: ['Africa/Bujumbura'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Burundi',
    countryCode: 'BI',
    mainCities: ['Bujumbura', 'Gitega', 'Ngozi', 'Rumonge'],
    rawOffsetInMinutes: 120,
    abbreviation: 'CAT',
  },
  'Africa/Gaborone': {
    name: 'Africa/Gaborone',
    alternativeName: 'Central Africa Time',
    group: ['Africa/Gaborone'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Botswana',
    countryCode: 'BW',
    mainCities: ['Gaborone', 'Francistown', 'Mogoditshane', 'Maun'],
    rawOffsetInMinutes: 120,
    abbreviation: 'CAT',
  },
  'Africa/Harare': {
    name: 'Africa/Harare',
    alternativeName: 'Central Africa Time',
    group: ['Africa/Harare'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Zimbabwe',
    countryCode: 'ZW',
    mainCities: ['Harare', 'Bulawayo', 'Chitungwiza', 'Mutare'],
    rawOffsetInMinutes: 120,
    abbreviation: 'CAT',
  },
  'Africa/Juba': {
    name: 'Africa/Juba',
    alternativeName: 'Central Africa Time',
    group: ['Africa/Juba'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'South Sudan',
    countryCode: 'SS',
    mainCities: ['Juba', 'Winejok', 'Yei', 'Malakal'],
    rawOffsetInMinutes: 120,
    abbreviation: 'CAT',
  },
  'Africa/Khartoum': {
    name: 'Africa/Khartoum',
    alternativeName: 'Central Africa Time',
    group: ['Africa/Khartoum'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Sudan',
    countryCode: 'SD',
    mainCities: ['Khartoum', 'Omdurman', 'Nyala', 'Port Sudan'],
    rawOffsetInMinutes: 120,
    abbreviation: 'CAT',
  },
  'Africa/Kigali': {
    name: 'Africa/Kigali',
    alternativeName: 'Central Africa Time',
    group: ['Africa/Kigali'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Rwanda',
    countryCode: 'RW',
    mainCities: ['Kigali', 'Gisenyi', 'Butare', 'Gitarama'],
    rawOffsetInMinutes: 120,
    abbreviation: 'CAT',
  },
  'Africa/Blantyre': {
    name: 'Africa/Blantyre',
    alternativeName: 'Central Africa Time',
    group: ['Africa/Blantyre'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Malawi',
    countryCode: 'MW',
    mainCities: ['Lilongwe', 'Blantyre', 'Mzuzu', 'Zomba'],
    rawOffsetInMinutes: 120,
    abbreviation: 'CAT',
  },
  'Africa/Lubumbashi': {
    name: 'Africa/Lubumbashi',
    alternativeName: 'Central Africa Time',
    group: ['Africa/Lubumbashi'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Democratic Republic of the Congo',
    countryCode: 'CD',
    mainCities: ['Lubumbashi', 'Mbuji-Mayi', 'Kananga', 'Kisangani'],
    rawOffsetInMinutes: 120,
    abbreviation: 'CAT',
  },
  'Africa/Lusaka': {
    name: 'Africa/Lusaka',
    alternativeName: 'Central Africa Time',
    group: ['Africa/Lusaka'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Zambia',
    countryCode: 'ZM',
    mainCities: ['Lusaka', 'Ndola', 'Kitwe', 'Chipata'],
    rawOffsetInMinutes: 120,
    abbreviation: 'CAT',
  },
  'Africa/Maputo': {
    name: 'Africa/Maputo',
    alternativeName: 'Central Africa Time',
    group: [
      'Africa/Maputo',
      'Africa/Blantyre',
      'Africa/Bujumbura',
      'Africa/Gaborone',
      'Africa/Harare',
      'Africa/Kigali',
      'Africa/Lubumbashi',
      'Africa/Lusaka',
    ],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Mozambique',
    countryCode: 'MZ',
    mainCities: ['Maputo', 'Matola', 'Nampula', 'Beira'],
    rawOffsetInMinutes: 120,
    abbreviation: 'CAT',
  },
  'Africa/Windhoek': {
    name: 'Africa/Windhoek',
    alternativeName: 'Central Africa Time',
    group: ['Africa/Windhoek'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Namibia',
    countryCode: 'NA',
    mainCities: ['Windhoek', 'Rundu', 'Walvis Bay', 'Swakopmund'],
    rawOffsetInMinutes: 60,
    abbreviation: 'CAT',
  },
  'Europe/Athens': {
    name: 'Europe/Athens',
    alternativeName: 'Eastern European Time',
    group: ['Europe/Athens'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Greece',
    countryCode: 'GR',
    mainCities: ['Athens', 'Thessaloníki', 'Pátra', 'Piraeus'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Asia/Beirut': {
    name: 'Asia/Beirut',
    alternativeName: 'Eastern European Time',
    group: ['Asia/Beirut'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Lebanon',
    countryCode: 'LB',
    mainCities: ['Beirut', 'Ra’s Bayrūt', 'Tripoli', 'Sidon'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Europe/Bucharest': {
    name: 'Europe/Bucharest',
    alternativeName: 'Eastern European Time',
    group: ['Europe/Bucharest'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Romania',
    countryCode: 'RO',
    mainCities: ['Bucharest', 'Sector 3', 'Iaşi', 'Sector 6'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Africa/Cairo': {
    name: 'Africa/Cairo',
    alternativeName: 'Eastern European Time',
    group: ['Africa/Cairo', 'Egypt'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Egypt',
    countryCode: 'EG',
    mainCities: ['Cairo', 'Alexandria', 'Giza', 'Shubrā al Khaymah'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Europe/Chisinau': {
    name: 'Europe/Chisinau',
    alternativeName: 'Eastern European Time',
    group: ['Europe/Chisinau', 'Europe/Tiraspol'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Moldova',
    countryCode: 'MD',
    mainCities: ['Chisinau', 'Tiraspol', 'Bălţi', 'Bender'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Asia/Hebron': {
    name: 'Asia/Hebron',
    alternativeName: 'Eastern European Time',
    group: ['Asia/Gaza', 'Asia/Hebron'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Palestinian Territory',
    countryCode: 'PS',
    mainCities: ['East Jerusalem', 'Gaza', 'Khān Yūnis', 'Jabālyā'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Europe/Helsinki': {
    name: 'Europe/Helsinki',
    alternativeName: 'Eastern European Time',
    group: ['Europe/Helsinki', 'Europe/Mariehamn'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Finland',
    countryCode: 'FI',
    mainCities: ['Helsinki', 'Espoo', 'Tampere', 'Oulu'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Europe/Kaliningrad': {
    name: 'Europe/Kaliningrad',
    alternativeName: 'Eastern European Time',
    group: ['Europe/Kaliningrad'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Russia',
    countryCode: 'RU',
    mainCities: ['Kaliningrad', 'Chernyakhovsk', 'Sovetsk', 'Baltiysk'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Europe/Kyiv': {
    name: 'Europe/Kyiv',
    alternativeName: 'Eastern European Time',
    group: [
      'Europe/Kyiv',
      'Europe/Uzhgorod',
      'Europe/Zaporozhye',
      'Europe/Kiev',
    ],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Ukraine',
    countryCode: 'UA',
    mainCities: ['Kyiv', 'Kharkiv', 'Odesa', 'Dnipro'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Europe/Mariehamn': {
    name: 'Europe/Mariehamn',
    alternativeName: 'Eastern European Time',
    group: ['Europe/Mariehamn'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Aland Islands',
    countryCode: 'AX',
    mainCities: ['Mariehamn'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Asia/Nicosia': {
    name: 'Asia/Nicosia',
    alternativeName: 'Eastern European Time',
    group: ['Asia/Famagusta', 'Asia/Nicosia', 'Europe/Nicosia'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Cyprus',
    countryCode: 'CY',
    mainCities: ['Nicosia', 'Limassol', 'Larnaca', 'Stróvolos'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Europe/Riga': {
    name: 'Europe/Riga',
    alternativeName: 'Eastern European Time',
    group: ['Europe/Riga'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Latvia',
    countryCode: 'LV',
    mainCities: ['Riga', 'Daugavpils', 'Liepāja', 'Jelgava'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Europe/Sofia': {
    name: 'Europe/Sofia',
    alternativeName: 'Eastern European Time',
    group: ['Europe/Sofia'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Bulgaria',
    countryCode: 'BG',
    mainCities: ['Sofia', 'Plovdiv', 'Varna', 'Burgas'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Europe/Tallinn': {
    name: 'Europe/Tallinn',
    alternativeName: 'Eastern European Time',
    group: ['Europe/Tallinn'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Estonia',
    countryCode: 'EE',
    mainCities: ['Tallinn', 'Tartu', 'Narva', 'Pärnu'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Africa/Tripoli': {
    name: 'Africa/Tripoli',
    alternativeName: 'Eastern European Time',
    group: ['Africa/Tripoli', 'Libya'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Libya',
    countryCode: 'LY',
    mainCities: ['Tripoli', 'Benghazi', 'Misratah', 'Zliten'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Europe/Vilnius': {
    name: 'Europe/Vilnius',
    alternativeName: 'Eastern European Time',
    group: ['Europe/Vilnius'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Lithuania',
    countryCode: 'LT',
    mainCities: ['Vilnius', 'Kaunas', 'Klaipėda', 'Šiauliai'],
    rawOffsetInMinutes: 120,
    abbreviation: 'EET',
  },
  'Asia/Jerusalem': {
    name: 'Asia/Jerusalem',
    alternativeName: 'Israel Time',
    group: ['Asia/Jerusalem', 'Israel', 'Asia/Tel_Aviv'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Israel',
    countryCode: 'IL',
    mainCities: ['Jerusalem', 'Tel Aviv', 'West Jerusalem', 'Haifa'],
    rawOffsetInMinutes: 120,
    abbreviation: 'IST',
  },
  'Africa/Johannesburg': {
    name: 'Africa/Johannesburg',
    alternativeName: 'South Africa Time',
    group: ['Africa/Johannesburg', 'Africa/Maseru', 'Africa/Mbabane'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'South Africa',
    countryCode: 'ZA',
    mainCities: ['Johannesburg', 'Cape Town', 'Durban', 'Soweto'],
    rawOffsetInMinutes: 120,
    abbreviation: 'SAST',
  },
  'Africa/Mbabane': {
    name: 'Africa/Mbabane',
    alternativeName: 'South Africa Time',
    group: ['Africa/Mbabane'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Eswatini',
    countryCode: 'SZ',
    mainCities: ['Manzini', 'Mbabane', 'Lobamba'],
    rawOffsetInMinutes: 120,
    abbreviation: 'SAST',
  },
  'Africa/Maseru': {
    name: 'Africa/Maseru',
    alternativeName: 'South Africa Time',
    group: ['Africa/Maseru'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Lesotho',
    countryCode: 'LS',
    mainCities: ['Maseru', 'Maputsoe', "Mohale's Hoek", 'Mafeteng'],
    rawOffsetInMinutes: 120,
    abbreviation: 'SAST',
  },
  'Asia/Kuwait': {
    name: 'Asia/Kuwait',
    alternativeName: 'Arabian Time',
    group: ['Asia/Kuwait'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Kuwait',
    countryCode: 'KW',
    mainCities: [
      'Al Aḩmadī',
      'Ḩawallī',
      'As Sālimīyah',
      'Şabāḩ as Sālim',
    ],
    rawOffsetInMinutes: 180,
    abbreviation: 'AST',
  },
  'Asia/Bahrain': {
    name: 'Asia/Bahrain',
    alternativeName: 'Arabian Time',
    group: ['Asia/Bahrain'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Bahrain',
    countryCode: 'BH',
    mainCities: ['Ar Rifā‘', 'Manama', 'Al Muharraq', 'Dār Kulayb'],
    rawOffsetInMinutes: 180,
    abbreviation: 'AST',
  },
  'Asia/Baghdad': {
    name: 'Asia/Baghdad',
    alternativeName: 'Arabian Time',
    group: ['Asia/Baghdad'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Iraq',
    countryCode: 'IQ',
    mainCities: [
      'Baghdad',
      'Al Mawşil al Jadīdah',
      'Al Başrah al Qadīmah',
      'Mosul',
    ],
    rawOffsetInMinutes: 180,
    abbreviation: 'AST',
  },
  'Asia/Qatar': {
    name: 'Asia/Qatar',
    alternativeName: 'Arabian Time',
    group: ['Asia/Qatar', 'Asia/Bahrain'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Qatar',
    countryCode: 'QA',
    mainCities: [
      'Doha',
      'Ar Rayyān',
      'Umm Şalāl Muḩammad',
      'Al Wakrah',
    ],
    rawOffsetInMinutes: 180,
    abbreviation: 'AST',
  },
  'Asia/Riyadh': {
    name: 'Asia/Riyadh',
    alternativeName: 'Arabian Time',
    group: [
      'Asia/Riyadh',
      'Antarctica/Syowa',
      'Asia/Aden',
      'Asia/Kuwait',
    ],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Saudi Arabia',
    countryCode: 'SA',
    mainCities: ['Jeddah', 'Riyadh', 'Mecca', 'Medina'],
    rawOffsetInMinutes: 180,
    abbreviation: 'AST',
  },
  'Asia/Aden': {
    name: 'Asia/Aden',
    alternativeName: 'Arabian Time',
    group: ['Asia/Aden'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Yemen',
    countryCode: 'YE',
    mainCities: ['Sanaa', 'Aden', 'Al Ḩudaydah', 'Taiz'],
    rawOffsetInMinutes: 180,
    abbreviation: 'AST',
  },
  'Asia/Amman': {
    name: 'Asia/Amman',
    alternativeName: 'Asia/Amman',
    group: ['Asia/Amman'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Jordan',
    countryCode: 'JO',
    mainCities: ['Amman', 'Zarqa', 'Irbid', 'Russeifa'],
    rawOffsetInMinutes: 180,
    abbreviation: 'GMT+3',
  },
  'Asia/Damascus': {
    name: 'Asia/Damascus',
    alternativeName: 'Asia/Damascus',
    group: ['Asia/Damascus'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Syria',
    countryCode: 'SY',
    mainCities: ['Aleppo', 'Damascus', 'Homs', 'Latakia'],
    rawOffsetInMinutes: 180,
    abbreviation: 'GMT+3',
  },
  'Africa/Addis_Ababa': {
    name: 'Africa/Addis_Ababa',
    alternativeName: 'East Africa Time',
    group: ['Africa/Addis_Ababa'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Ethiopia',
    countryCode: 'ET',
    mainCities: ['Addis Ababa', 'Jijiga', 'Gonder', "Mek'ele"],
    rawOffsetInMinutes: 180,
    abbreviation: 'EAT',
  },
  'Indian/Antananarivo': {
    name: 'Indian/Antananarivo',
    alternativeName: 'East Africa Time',
    group: ['Indian/Antananarivo'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Madagascar',
    countryCode: 'MG',
    mainCities: ['Antananarivo', 'Toamasina', 'Antsirabe', 'Mahajanga'],
    rawOffsetInMinutes: 180,
    abbreviation: 'EAT',
  },
  'Africa/Asmara': {
    name: 'Africa/Asmara',
    alternativeName: 'East Africa Time',
    group: ['Africa/Asmara'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Eritrea',
    countryCode: 'ER',
    mainCities: ['Asmara', 'Keren', 'Himora', 'Massawa'],
    rawOffsetInMinutes: 180,
    abbreviation: 'EAT',
  },
  'Africa/Dar_es_Salaam': {
    name: 'Africa/Dar_es_Salaam',
    alternativeName: 'East Africa Time',
    group: ['Africa/Dar_es_Salaam'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Tanzania',
    countryCode: 'TZ',
    mainCities: ['Dar es Salaam', 'Mwanza', 'Arusha', 'Mbeya'],
    rawOffsetInMinutes: 180,
    abbreviation: 'EAT',
  },
  'Africa/Djibouti': {
    name: 'Africa/Djibouti',
    alternativeName: 'East Africa Time',
    group: ['Africa/Djibouti'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Djibouti',
    countryCode: 'DJ',
    mainCities: ['Djibouti', 'Ali Sabih', 'Dikhil', 'Tadjoura'],
    rawOffsetInMinutes: 180,
    abbreviation: 'EAT',
  },
  'Africa/Kampala': {
    name: 'Africa/Kampala',
    alternativeName: 'East Africa Time',
    group: ['Africa/Kampala'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Uganda',
    countryCode: 'UG',
    mainCities: ['Kampala', 'Gulu', 'Lira', 'Mbarara'],
    rawOffsetInMinutes: 180,
    abbreviation: 'EAT',
  },
  'Indian/Mayotte': {
    name: 'Indian/Mayotte',
    alternativeName: 'East Africa Time',
    group: ['Indian/Mayotte'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Mayotte',
    countryCode: 'YT',
    mainCities: ['Mamoudzou', 'Koungou', 'Labattoir', 'Kaouéni'],
    rawOffsetInMinutes: 180,
    abbreviation: 'EAT',
  },
  'Africa/Mogadishu': {
    name: 'Africa/Mogadishu',
    alternativeName: 'East Africa Time',
    group: ['Africa/Mogadishu'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Somalia',
    countryCode: 'SO',
    mainCities: ['Mogadishu', 'Borama', 'Hargeysa', 'Berbera'],
    rawOffsetInMinutes: 180,
    abbreviation: 'EAT',
  },
  'Indian/Comoro': {
    name: 'Indian/Comoro',
    alternativeName: 'East Africa Time',
    group: ['Indian/Comoro'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Comoros',
    countryCode: 'KM',
    mainCities: ['Moroni', 'Moutsamoudou', 'Fomboni'],
    rawOffsetInMinutes: 180,
    abbreviation: 'EAT',
  },
  'Africa/Nairobi': {
    name: 'Africa/Nairobi',
    alternativeName: 'East Africa Time',
    group: [
      'Africa/Nairobi',
      'Africa/Addis_Ababa',
      'Africa/Asmara',
      'Africa/Dar_es_Salaam',
      'Africa/Djibouti',
      'Africa/Kampala',
      'Africa/Mogadishu',
      'Indian/Antananarivo',
      'Indian/Comoro',
      'Indian/Mayotte',
      'Africa/Asmera',
    ],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Kenya',
    countryCode: 'KE',
    mainCities: ['Nairobi', 'Kakamega', 'Mombasa', 'Nakuru'],
    rawOffsetInMinutes: 180,
    abbreviation: 'EAT',
  },
  'Europe/Minsk': {
    name: 'Europe/Minsk',
    alternativeName: 'Moscow Time',
    group: ['Europe/Minsk'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Belarus',
    countryCode: 'BY',
    mainCities: ['Minsk', "Homyel'", 'Hrodna', 'Mahilyow'],
    rawOffsetInMinutes: 180,
    abbreviation: 'MSK',
  },
  'Europe/Moscow': {
    name: 'Europe/Moscow',
    alternativeName: 'Moscow Time',
    group: [
      'Europe/Kirov',
      'Europe/Moscow',
      'Europe/Volgograd',
      'W-SU',
    ],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Russia',
    countryCode: 'RU',
    mainCities: [
      'Moscow',
      'Saint Petersburg',
      'Nizhniy Novgorod',
      'Kazan',
    ],
    rawOffsetInMinutes: 180,
    abbreviation: 'MSK',
  },
  'Europe/Simferopol': {
    name: 'Europe/Simferopol',
    alternativeName: 'Moscow Time',
    group: ['Europe/Simferopol'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Ukraine',
    countryCode: 'UA',
    mainCities: ['Sevastopol', 'Simferopol', 'Kerch', 'Yevpatoriya'],
    rawOffsetInMinutes: 180,
    abbreviation: 'MSK',
  },
  'Antarctica/Syowa': {
    name: 'Antarctica/Syowa',
    alternativeName: 'Syowa Time',
    group: ['Antarctica/Syowa'],
    continentCode: 'AN',
    continentName: 'Antarctica',
    countryName: 'Antarctica',
    countryCode: 'AQ',
    mainCities: ['Syowa'],
    rawOffsetInMinutes: 180,
    abbreviation: 'SYOT',
  },
  'Europe/Istanbul': {
    name: 'Europe/Istanbul',
    alternativeName: 'Turkey Time',
    group: ['Europe/Istanbul', 'Turkey', 'Asia/Istanbul'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Turkey',
    countryCode: 'TR',
    mainCities: ['Istanbul', 'Ankara', 'Bursa', 'İzmir'],
    rawOffsetInMinutes: 180,
    abbreviation: 'TRT',
  },
  'Asia/Tehran': {
    name: 'Asia/Tehran',
    alternativeName: 'Iran Time',
    group: ['Asia/Tehran', 'Iran'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Iran',
    countryCode: 'IR',
    mainCities: ['Tehran', 'Mashhad', 'Isfahan', 'Karaj'],
    rawOffsetInMinutes: 210,
    abbreviation: 'IRST',
  },
  'Asia/Yerevan': {
    name: 'Asia/Yerevan',
    alternativeName: 'Armenia Time',
    group: ['Asia/Yerevan'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Armenia',
    countryCode: 'AM',
    mainCities: ['Yerevan', 'Gyumri', 'Vanadzor', 'Vagharshapat'],
    rawOffsetInMinutes: 240,
    abbreviation: 'AMT',
  },
  'Asia/Baku': {
    name: 'Asia/Baku',
    alternativeName: 'Azerbaijan Time',
    group: ['Asia/Baku'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Azerbaijan',
    countryCode: 'AZ',
    mainCities: ['Baku', 'Sumqayıt', 'Ganja', 'Lankaran'],
    rawOffsetInMinutes: 240,
    abbreviation: 'AZT',
  },
  'Asia/Tbilisi': {
    name: 'Asia/Tbilisi',
    alternativeName: 'Georgia Time',
    group: ['Asia/Tbilisi'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Georgia',
    countryCode: 'GE',
    mainCities: ['Tbilisi', 'Batumi', 'Kutaisi', 'Rustavi'],
    rawOffsetInMinutes: 240,
    abbreviation: 'GET',
  },
  'Asia/Dubai': {
    name: 'Asia/Dubai',
    alternativeName: 'Gulf Time',
    group: [
      'Asia/Dubai',
      'Asia/Muscat',
      'Indian/Mahe',
      'Indian/Reunion',
    ],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'United Arab Emirates',
    countryCode: 'AE',
    mainCities: ['Dubai', 'Abu Dhabi', 'Sharjah', 'Al Ain City'],
    rawOffsetInMinutes: 240,
    abbreviation: 'GST',
  },
  'Asia/Muscat': {
    name: 'Asia/Muscat',
    alternativeName: 'Gulf Time',
    group: ['Asia/Muscat'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Oman',
    countryCode: 'OM',
    mainCities: ['Muscat', 'Seeb', 'Bawshar', '‘Ibrī'],
    rawOffsetInMinutes: 240,
    abbreviation: 'GST',
  },
  'Indian/Mauritius': {
    name: 'Indian/Mauritius',
    alternativeName: 'Mauritius Time',
    group: ['Indian/Mauritius'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Mauritius',
    countryCode: 'MU',
    mainCities: [
      'Port Louis',
      'Vacoas',
      'Beau Bassin-Rose Hill',
      'Curepipe',
    ],
    rawOffsetInMinutes: 240,
    abbreviation: 'MUT',
  },
  'Indian/Reunion': {
    name: 'Indian/Reunion',
    alternativeName: 'Réunion Time',
    group: ['Indian/Reunion'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Reunion',
    countryCode: 'RE',
    mainCities: [
      'Saint-Denis',
      'Saint-Paul',
      'Saint-Pierre',
      'Le Tampon',
    ],
    rawOffsetInMinutes: 240,
    abbreviation: 'RET',
  },
  'Europe/Samara': {
    name: 'Europe/Samara',
    alternativeName: 'Samara Time',
    group: [
      'Europe/Astrakhan',
      'Europe/Samara',
      'Europe/Saratov',
      'Europe/Ulyanovsk',
    ],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Russia',
    countryCode: 'RU',
    mainCities: ['Samara', 'Saratov', 'Tolyatti', 'Izhevsk'],
    rawOffsetInMinutes: 240,
    abbreviation: 'SAMT',
  },
  'Indian/Mahe': {
    name: 'Indian/Mahe',
    alternativeName: 'Seychelles Time',
    group: ['Indian/Mahe'],
    continentCode: 'AF',
    continentName: 'Africa',
    countryName: 'Seychelles',
    countryCode: 'SC',
    mainCities: ['Victoria'],
    rawOffsetInMinutes: 240,
    abbreviation: 'SCT',
  },
  'Asia/Kabul': {
    name: 'Asia/Kabul',
    alternativeName: 'Afghanistan Time',
    group: ['Asia/Kabul'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Afghanistan',
    countryCode: 'AF',
    mainCities: ['Kabul', 'Herāt', 'Mazār-e Sharīf', 'Kandahār'],
    rawOffsetInMinutes: 270,
    abbreviation: 'AFT',
  },
  'Indian/Kerguelen': {
    name: 'Indian/Kerguelen',
    alternativeName: 'French Southern & Antarctic Time',
    group: ['Indian/Kerguelen'],
    continentCode: 'AN',
    continentName: 'Antarctica',
    countryName: 'French Southern Territories',
    countryCode: 'TF',
    mainCities: ['Port-aux-Français'],
    rawOffsetInMinutes: 300,
    abbreviation: 'FSAT',
  },
  'Indian/Maldives': {
    name: 'Indian/Maldives',
    alternativeName: 'Maldives Time',
    group: ['Indian/Maldives', 'Indian/Kerguelen'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Maldives',
    countryCode: 'MV',
    mainCities: ['Male'],
    rawOffsetInMinutes: 300,
    abbreviation: 'MVT',
  },
  'Antarctica/Mawson': {
    name: 'Antarctica/Mawson',
    alternativeName: 'Mawson Time',
    group: ['Antarctica/Mawson'],
    continentCode: 'AN',
    continentName: 'Antarctica',
    countryName: 'Antarctica',
    countryCode: 'AQ',
    mainCities: ['Mawson'],
    rawOffsetInMinutes: 300,
    abbreviation: 'MAWT',
  },
  'Asia/Karachi': {
    name: 'Asia/Karachi',
    alternativeName: 'Pakistan Time',
    group: ['Asia/Karachi'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Pakistan',
    countryCode: 'PK',
    mainCities: ['Karachi', 'Lahore', 'Faisalabad', 'Rawalpindi'],
    rawOffsetInMinutes: 300,
    abbreviation: 'PKT',
  },
  'Asia/Dushanbe': {
    name: 'Asia/Dushanbe',
    alternativeName: 'Tajikistan Time',
    group: ['Asia/Dushanbe'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Tajikistan',
    countryCode: 'TJ',
    mainCities: ['Dushanbe', 'Isfara', 'Istaravshan', 'Kŭlob'],
    rawOffsetInMinutes: 300,
    abbreviation: 'TJT',
  },
  'Asia/Ashgabat': {
    name: 'Asia/Ashgabat',
    alternativeName: 'Turkmenistan Time',
    group: ['Asia/Ashgabat', 'Asia/Ashkhabad'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Turkmenistan',
    countryCode: 'TM',
    mainCities: ['Ashgabat', 'Türkmenabat', 'Daşoguz', 'Mary'],
    rawOffsetInMinutes: 300,
    abbreviation: 'TMT',
  },
  'Asia/Tashkent': {
    name: 'Asia/Tashkent',
    alternativeName: 'Uzbekistan Time',
    group: ['Asia/Samarkand', 'Asia/Tashkent'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Uzbekistan',
    countryCode: 'UZ',
    mainCities: ['Tashkent', 'Namangan', 'Samarkand', 'Andijon'],
    rawOffsetInMinutes: 300,
    abbreviation: 'UZT',
  },
  'Asia/Aqtobe': {
    name: 'Asia/Aqtobe',
    alternativeName: 'West Kazakhstan Time',
    group: [
      'Asia/Aqtau',
      'Asia/Aqtobe',
      'Asia/Atyrau',
      'Asia/Oral',
      'Asia/Qyzylorda',
    ],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Kazakhstan',
    countryCode: 'KZ',
    mainCities: ['Aktobe', 'Kyzylorda', 'Oral', 'Atyrau'],
    rawOffsetInMinutes: 300,
    abbreviation: 'AQTT',
  },
  'Asia/Yekaterinburg': {
    name: 'Asia/Yekaterinburg',
    alternativeName: 'Yekaterinburg Time',
    group: ['Asia/Yekaterinburg'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Russia',
    countryCode: 'RU',
    mainCities: ['Yekaterinburg', 'Chelyabinsk', 'Ufa', 'Perm'],
    rawOffsetInMinutes: 300,
    abbreviation: 'YEKT',
  },
  'Asia/Colombo': {
    name: 'Asia/Colombo',
    alternativeName: 'India Time',
    group: ['Asia/Colombo'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Sri Lanka',
    countryCode: 'LK',
    mainCities: [
      'Colombo',
      'Dehiwala-Mount Lavinia',
      'Maharagama',
      'Jaffna',
    ],
    rawOffsetInMinutes: 330,
    abbreviation: 'IST',
  },
  'Asia/Kolkata': {
    name: 'Asia/Kolkata',
    alternativeName: 'India Time',
    group: ['Asia/Kolkata', 'Asia/Calcutta'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'India',
    countryCode: 'IN',
    mainCities: ['Mumbai', 'Delhi', 'Bengaluru', 'Hyderābād'],
    rawOffsetInMinutes: 330,
    abbreviation: 'IST',
  },
  'Asia/Kathmandu': {
    name: 'Asia/Kathmandu',
    alternativeName: 'Nepal Time',
    group: ['Asia/Kathmandu', 'Asia/Katmandu'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Nepal',
    countryCode: 'NP',
    mainCities: ['Kathmandu', 'Bharatpur', 'Pātan', 'Birgañj'],
    rawOffsetInMinutes: 345,
    abbreviation: 'NPT',
  },
  'Asia/Dhaka': {
    name: 'Asia/Dhaka',
    alternativeName: 'Bangladesh Time',
    group: ['Asia/Dhaka', 'Asia/Dacca'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Bangladesh',
    countryCode: 'BD',
    mainCities: ['Dhaka', 'Chattogram', 'Khulna', 'Rangpur'],
    rawOffsetInMinutes: 360,
    abbreviation: 'BST',
  },
  'Asia/Thimphu': {
    name: 'Asia/Thimphu',
    alternativeName: 'Bhutan Time',
    group: ['Asia/Thimphu', 'Asia/Thimbu'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Bhutan',
    countryCode: 'BT',
    mainCities: ['Thimphu', 'Phuntsholing', 'Tsirang', 'Punākha'],
    rawOffsetInMinutes: 360,
    abbreviation: 'BTT',
  },
  'Asia/Urumqi': {
    name: 'Asia/Urumqi',
    alternativeName: 'China Time',
    group: ['Asia/Urumqi', 'Asia/Kashgar'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'China',
    countryCode: 'CN',
    mainCities: ['Ürümqi', 'Shihezi', 'Korla', 'Aksu'],
    rawOffsetInMinutes: 360,
    abbreviation: 'CST',
  },
  'Asia/Almaty': {
    name: 'Asia/Almaty',
    alternativeName: 'East Kazakhstan Time',
    group: ['Asia/Almaty', 'Asia/Qostanay'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Kazakhstan',
    countryCode: 'KZ',
    mainCities: ['Almaty', 'Shymkent', 'Karagandy', 'Taraz'],
    rawOffsetInMinutes: 360,
    abbreviation: 'ALMT',
  },
  'Indian/Chagos': {
    name: 'Indian/Chagos',
    alternativeName: 'Indian Ocean Time',
    group: ['Indian/Chagos'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'British Indian Ocean Territory',
    countryCode: 'IO',
    mainCities: ['Chagos'],
    rawOffsetInMinutes: 360,
    abbreviation: 'IOT',
  },
  'Asia/Bishkek': {
    name: 'Asia/Bishkek',
    alternativeName: 'Kyrgyzstan Time',
    group: ['Asia/Bishkek'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Kyrgyzstan',
    countryCode: 'KG',
    mainCities: ['Bishkek', 'Osh', 'Jalal-Abad', 'Karakol'],
    rawOffsetInMinutes: 360,
    abbreviation: 'KGT',
  },
  'Asia/Omsk': {
    name: 'Asia/Omsk',
    alternativeName: 'Omsk Time',
    group: ['Asia/Omsk'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Russia',
    countryCode: 'RU',
    mainCities: ['Omsk', 'Tara', 'Kalachinsk'],
    rawOffsetInMinutes: 360,
    abbreviation: 'OMST',
  },
  'Antarctica/Vostok': {
    name: 'Antarctica/Vostok',
    alternativeName: 'Vostok Time',
    group: ['Antarctica/Vostok'],
    continentCode: 'AN',
    continentName: 'Antarctica',
    countryName: 'Antarctica',
    countryCode: 'AQ',
    mainCities: ['Vostok'],
    rawOffsetInMinutes: 360,
    abbreviation: 'VOST',
  },
  'Indian/Cocos': {
    name: 'Indian/Cocos',
    alternativeName: 'Cocos Islands Time',
    group: ['Indian/Cocos'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Cocos Islands',
    countryCode: 'CC',
    mainCities: ['West Island'],
    rawOffsetInMinutes: 390,
    abbreviation: 'CCT',
  },
  'Asia/Yangon': {
    name: 'Asia/Yangon',
    alternativeName: 'Myanmar Time',
    group: ['Asia/Yangon', 'Indian/Cocos', 'Asia/Rangoon'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Myanmar',
    countryCode: 'MM',
    mainCities: ['Yangon', 'Mandalay', 'Nay Pyi Taw', 'Mawlamyine'],
    rawOffsetInMinutes: 390,
    abbreviation: 'MMT',
  },
  'Indian/Christmas': {
    name: 'Indian/Christmas',
    alternativeName: 'Christmas Island Time',
    group: ['Indian/Christmas'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Christmas Island',
    countryCode: 'CX',
    mainCities: ['Flying Fish Cove'],
    rawOffsetInMinutes: 420,
    abbreviation: 'CXT',
  },
  'Antarctica/Davis': {
    name: 'Antarctica/Davis',
    alternativeName: 'Davis Time',
    group: ['Antarctica/Davis'],
    continentCode: 'AN',
    continentName: 'Antarctica',
    countryName: 'Antarctica',
    countryCode: 'AQ',
    mainCities: ['Davis'],
    rawOffsetInMinutes: 420,
    abbreviation: 'DAVT',
  },
  'Asia/Hovd': {
    name: 'Asia/Hovd',
    alternativeName: 'Hovd Time',
    group: ['Asia/Hovd'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Mongolia',
    countryCode: 'MN',
    mainCities: ['Ulaangom', 'Khovd', 'Ölgii', 'Altai'],
    rawOffsetInMinutes: 420,
    abbreviation: 'HOVT',
  },
  'Asia/Bangkok': {
    name: 'Asia/Bangkok',
    alternativeName: 'Indochina Time',
    group: [
      'Asia/Bangkok',
      'Asia/Phnom_Penh',
      'Asia/Vientiane',
      'Indian/Christmas',
    ],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Thailand',
    countryCode: 'TH',
    mainCities: [
      'Bangkok',
      'Samut Prakan',
      'Mueang Nonthaburi',
      'Chon Buri',
    ],
    rawOffsetInMinutes: 420,
    abbreviation: 'ICT',
  },
  'Asia/Ho_Chi_Minh': {
    name: 'Asia/Ho_Chi_Minh',
    alternativeName: 'Indochina Time',
    group: ['Asia/Ho_Chi_Minh', 'Asia/Saigon'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Vietnam',
    countryCode: 'VN',
    mainCities: ['Ho Chi Minh City', 'Da Nang', 'Biên Hòa', 'Cần Thơ'],
    rawOffsetInMinutes: 420,
    abbreviation: 'ICT',
  },
  'Asia/Phnom_Penh': {
    name: 'Asia/Phnom_Penh',
    alternativeName: 'Indochina Time',
    group: ['Asia/Phnom_Penh'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Cambodia',
    countryCode: 'KH',
    mainCities: ['Phnom Penh', 'Takeo', 'Siem Reap', 'Battambang'],
    rawOffsetInMinutes: 420,
    abbreviation: 'ICT',
  },
  'Asia/Vientiane': {
    name: 'Asia/Vientiane',
    alternativeName: 'Indochina Time',
    group: ['Asia/Vientiane'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Laos',
    countryCode: 'LA',
    mainCities: ['Vientiane', 'Savannakhet', 'Pakse', 'Thakhèk'],
    rawOffsetInMinutes: 420,
    abbreviation: 'ICT',
  },
  'Asia/Novosibirsk': {
    name: 'Asia/Novosibirsk',
    alternativeName: 'Novosibirsk Time',
    group: [
      'Asia/Barnaul',
      'Asia/Krasnoyarsk',
      'Asia/Novokuznetsk',
      'Asia/Novosibirsk',
      'Asia/Tomsk',
    ],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Russia',
    countryCode: 'RU',
    mainCities: ['Novosibirsk', 'Krasnoyarsk', 'Barnaul', 'Tomsk'],
    rawOffsetInMinutes: 420,
    abbreviation: 'NOVT',
  },
  'Asia/Jakarta': {
    name: 'Asia/Jakarta',
    alternativeName: 'Western Indonesia Time',
    group: ['Asia/Jakarta', 'Asia/Pontianak'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Indonesia',
    countryCode: 'ID',
    mainCities: ['Jakarta', 'Surabaya', 'Bekasi', 'Bandung'],
    rawOffsetInMinutes: 420,
    abbreviation: 'WIB',
  },
  'Australia/Perth': {
    name: 'Australia/Perth',
    alternativeName: 'Australian Western Time',
    group: ['Australia/Perth', 'Australia/West'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Australia',
    countryCode: 'AU',
    mainCities: ['Perth', 'Mandurah', 'Bunbury', 'Baldivis'],
    rawOffsetInMinutes: 480,
    abbreviation: 'AWST',
  },
  'Asia/Brunei': {
    name: 'Asia/Brunei',
    alternativeName: 'Brunei Darussalam Time',
    group: ['Asia/Brunei'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Brunei',
    countryCode: 'BN',
    mainCities: [
      'Bandar Seri Begawan',
      'Kuala Belait',
      'Seria',
      'Tutong',
    ],
    rawOffsetInMinutes: 480,
    abbreviation: 'BNT',
  },
  'Asia/Makassar': {
    name: 'Asia/Makassar',
    alternativeName: 'Central Indonesia Time',
    group: ['Asia/Makassar', 'Asia/Ujung_Pandang'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Indonesia',
    countryCode: 'ID',
    mainCities: ['Makassar', 'Samarinda', 'Denpasar', 'Balikpapan'],
    rawOffsetInMinutes: 480,
    abbreviation: 'WITA',
  },
  'Asia/Macau': {
    name: 'Asia/Macau',
    alternativeName: 'China Time',
    group: ['Asia/Macau', 'Asia/Macao'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Macao',
    countryCode: 'MO',
    mainCities: ['Macau', 'Taipa'],
    rawOffsetInMinutes: 480,
    abbreviation: 'CST',
  },
  'Asia/Shanghai': {
    name: 'Asia/Shanghai',
    alternativeName: 'China Time',
    group: [
      'Asia/Shanghai',
      'PRC',
      'Asia/Chongqing',
      'Asia/Harbin',
      'Asia/Chungking',
    ],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'China',
    countryCode: 'CN',
    mainCities: ['Shanghai', 'Beijing', 'Shenzhen', 'Guangzhou'],
    rawOffsetInMinutes: 480,
    abbreviation: 'CST',
  },
  'Asia/Hong_Kong': {
    name: 'Asia/Hong_Kong',
    alternativeName: 'Hong Kong Time',
    group: ['Asia/Hong_Kong', 'Hongkong'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Hong Kong',
    countryCode: 'HK',
    mainCities: ['Hong Kong', 'Kowloon', 'Victoria', 'Tuen Mun'],
    rawOffsetInMinutes: 480,
    abbreviation: 'HKT',
  },
  'Asia/Irkutsk': {
    name: 'Asia/Irkutsk',
    alternativeName: 'Irkutsk Time',
    group: ['Asia/Irkutsk'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Russia',
    countryCode: 'RU',
    mainCities: ['Irkutsk', 'Ulan-Ude', 'Bratsk', 'Angarsk'],
    rawOffsetInMinutes: 480,
    abbreviation: 'IRKT',
  },
  'Asia/Kuala_Lumpur': {
    name: 'Asia/Kuala_Lumpur',
    alternativeName: 'Malaysia Time',
    group: ['Asia/Kuala_Lumpur', 'Asia/Kuching', 'Asia/Brunei'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Malaysia',
    countryCode: 'MY',
    mainCities: [
      'Kuala Lumpur',
      'Petaling Jaya',
      'Klang',
      'Johor Bahru',
    ],
    rawOffsetInMinutes: 480,
    abbreviation: 'MYT',
  },
  'Asia/Manila': {
    name: 'Asia/Manila',
    alternativeName: 'Philippine Time',
    group: ['Asia/Manila'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Philippines',
    countryCode: 'PH',
    mainCities: ['Quezon City', 'Davao', 'Manila', 'Caloocan City'],
    rawOffsetInMinutes: 480,
    abbreviation: 'PHT',
  },
  'Asia/Singapore': {
    name: 'Asia/Singapore',
    alternativeName: 'Singapore Time',
    group: ['Asia/Singapore', 'Singapore', 'Asia/Kuala_Lumpur'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Singapore',
    countryCode: 'SG',
    mainCities: ['Singapore', 'Jurong Town', 'Woodlands', 'Punggol'],
    rawOffsetInMinutes: 480,
    abbreviation: 'SGT',
  },
  'Asia/Taipei': {
    name: 'Asia/Taipei',
    alternativeName: 'Taipei Time',
    group: ['Asia/Taipei', 'ROC'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Taiwan',
    countryCode: 'TW',
    mainCities: ['Taipei', 'Kaohsiung', 'Taichung', 'Tainan'],
    rawOffsetInMinutes: 480,
    abbreviation: 'TWT',
  },
  'Asia/Ulaanbaatar': {
    name: 'Asia/Ulaanbaatar',
    alternativeName: 'Ulaanbaatar Time',
    group: ['Asia/Choibalsan', 'Asia/Ulaanbaatar', 'Asia/Ulan_Bator'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Mongolia',
    countryCode: 'MN',
    mainCities: ['Ulan Bator', 'Erdenet', 'Darhan', 'Mörön'],
    rawOffsetInMinutes: 480,
    abbreviation: 'ULAT',
  },
  'Australia/Eucla': {
    name: 'Australia/Eucla',
    alternativeName: 'Australian Central Western Time',
    group: ['Australia/Eucla'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Australia',
    countryCode: 'AU',
    mainCities: ['Eucla'],
    rawOffsetInMinutes: 525,
    abbreviation: 'ACWST',
  },
  'Asia/Dili': {
    name: 'Asia/Dili',
    alternativeName: 'East Timor Time',
    group: ['Asia/Dili'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Timor Leste',
    countryCode: 'TL',
    mainCities: ['Dili', 'Maliana', 'Suai', 'Likisá'],
    rawOffsetInMinutes: 540,
    abbreviation: 'TLT',
  },
  'Asia/Jayapura': {
    name: 'Asia/Jayapura',
    alternativeName: 'Eastern Indonesia Time',
    group: ['Asia/Jayapura'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Indonesia',
    countryCode: 'ID',
    mainCities: ['Jayapura', 'Ambon', 'Sorong', 'Ternate'],
    rawOffsetInMinutes: 540,
    abbreviation: 'WIT',
  },
  'Asia/Tokyo': {
    name: 'Asia/Tokyo',
    alternativeName: 'Japan Time',
    group: ['Asia/Tokyo', 'Japan'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'Japan',
    countryCode: 'JP',
    mainCities: ['Tokyo', 'Yokohama', 'Osaka', 'Nagoya'],
    rawOffsetInMinutes: 540,
    abbreviation: 'JST',
  },
  'Asia/Pyongyang': {
    name: 'Asia/Pyongyang',
    alternativeName: 'Korean Time',
    group: ['Asia/Pyongyang'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'North Korea',
    countryCode: 'KP',
    mainCities: ['Pyongyang', 'Hamhŭng', 'Namp’o', 'Sunch’ŏn'],
    rawOffsetInMinutes: 540,
    abbreviation: 'KST',
  },
  'Asia/Seoul': {
    name: 'Asia/Seoul',
    alternativeName: 'Korean Time',
    group: ['Asia/Seoul', 'ROK'],
    continentCode: 'AS',
    continentName: 'Asia',
    countryName: 'South Korea',
    countryCode: 'KR',
    mainCities: ['Seoul', 'Busan', 'Incheon', 'Daegu'],
    rawOffsetInMinutes: 540,
    abbreviation: 'KST',
  },
  'Pacific/Palau': {
    name: 'Pacific/Palau',
    alternativeName: 'Palau Time',
    group: ['Pacific/Palau'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Palau',
    countryCode: 'PW',
    mainCities: ['Ngerulmud'],
    rawOffsetInMinutes: 540,
    abbreviation: 'PWT',
  },
  'Asia/Chita': {
    name: 'Asia/Chita',
    alternativeName: 'Yakutsk Time',
    group: ['Asia/Chita', 'Asia/Khandyga', 'Asia/Yakutsk'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Russia',
    countryCode: 'RU',
    mainCities: ['Chita', 'Yakutsk', 'Blagoveshchensk', 'Belogorsk'],
    rawOffsetInMinutes: 540,
    abbreviation: 'YAKT',
  },
  'Australia/Darwin': {
    name: 'Australia/Darwin',
    alternativeName: 'Australian Central Time',
    group: ['Australia/Darwin', 'Australia/North'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Australia',
    countryCode: 'AU',
    mainCities: ['Darwin', 'Alice Springs', 'Palmerston'],
    rawOffsetInMinutes: 570,
    abbreviation: 'ACST',
  },
  'Australia/Brisbane': {
    name: 'Australia/Brisbane',
    alternativeName: 'Australian Eastern Time',
    group: [
      'Australia/Brisbane',
      'Australia/Lindeman',
      'Australia/Queensland',
    ],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Australia',
    countryCode: 'AU',
    mainCities: ['Brisbane', 'Gold Coast', 'Logan City', 'Townsville'],
    rawOffsetInMinutes: 600,
    abbreviation: 'AEST',
  },
  'Pacific/Guam': {
    name: 'Pacific/Guam',
    alternativeName: 'Chamorro Time',
    group: ['Pacific/Guam', 'Pacific/Saipan'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Guam',
    countryCode: 'GU',
    mainCities: [
      'Dededo Village',
      'Yigo Village',
      'Tamuning-Tumon-Harmon Village',
      'Tamuning',
    ],
    rawOffsetInMinutes: 600,
    abbreviation: 'ChST',
  },
  'Pacific/Saipan': {
    name: 'Pacific/Saipan',
    alternativeName: 'Chamorro Time',
    group: ['Pacific/Saipan'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Northern Mariana Islands',
    countryCode: 'MP',
    mainCities: ['Saipan'],
    rawOffsetInMinutes: 600,
    abbreviation: 'ChST',
  },
  'Pacific/Chuuk': {
    name: 'Pacific/Chuuk',
    alternativeName: 'Chuuk Time',
    group: ['Pacific/Chuuk', 'Pacific/Truk', 'Pacific/Yap'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Micronesia',
    countryCode: 'FM',
    mainCities: ['Chuuk'],
    rawOffsetInMinutes: 600,
    abbreviation: 'CHUT',
  },
  'Antarctica/DumontDUrville': {
    name: 'Antarctica/DumontDUrville',
    alternativeName: 'Dumont-d’Urville Time',
    group: ['Antarctica/DumontDUrville'],
    continentCode: 'AN',
    continentName: 'Antarctica',
    countryName: 'Antarctica',
    countryCode: 'AQ',
    mainCities: ['DumontDUrville'],
    rawOffsetInMinutes: 600,
    abbreviation: 'DDUT',
  },
  'Pacific/Port_Moresby': {
    name: 'Pacific/Port_Moresby',
    alternativeName: 'Papua New Guinea Time',
    group: [
      'Pacific/Port_Moresby',
      'Antarctica/DumontDUrville',
      'Pacific/Chuuk',
      'Pacific/Yap',
      'Pacific/Truk',
    ],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Papua New Guinea',
    countryCode: 'PG',
    mainCities: ['Port Moresby', 'Lae', 'Mount Hagen', 'Popondetta'],
    rawOffsetInMinutes: 600,
    abbreviation: 'PGT',
  },
  'Asia/Vladivostok': {
    name: 'Asia/Vladivostok',
    alternativeName: 'Vladivostok Time',
    group: ['Asia/Ust-Nera', 'Asia/Vladivostok'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Russia',
    countryCode: 'RU',
    mainCities: [
      'Khabarovsk',
      'Vladivostok',
      'Khabarovsk Vtoroy',
      'Komsomolsk-on-Amur',
    ],
    rawOffsetInMinutes: 600,
    abbreviation: 'VLAT',
  },
  'Australia/Adelaide': {
    name: 'Australia/Adelaide',
    alternativeName: 'Australian Central Time',
    group: [
      'Australia/Adelaide',
      'Australia/Broken_Hill',
      'Australia/South',
      'Australia/Yancowinna',
    ],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Australia',
    countryCode: 'AU',
    mainCities: [
      'Adelaide',
      'Adelaide Hills',
      'Mount Gambier',
      'Morphett Vale',
    ],
    rawOffsetInMinutes: 570,
    abbreviation: 'ACST',
  },
  'Australia/Sydney': {
    name: 'Australia/Sydney',
    alternativeName: 'Australian Eastern Time',
    group: [
      'Antarctica/Macquarie',
      'Australia/Hobart',
      'Australia/Melbourne',
      'Australia/Sydney',
      'Australia/Tasmania',
      'Australia/Currie',
      'Australia/Victoria',
      'Australia/ACT',
      'Australia/NSW',
      'Australia/Canberra',
    ],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Australia',
    countryCode: 'AU',
    mainCities: ['Sydney', 'Melbourne', 'Canberra', 'Newcastle'],
    rawOffsetInMinutes: 600,
    abbreviation: 'AEST',
  },
  'Pacific/Bougainville': {
    name: 'Pacific/Bougainville',
    alternativeName: 'Bougainville Time',
    group: ['Pacific/Bougainville'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Papua New Guinea',
    countryCode: 'PG',
    mainCities: ['Arawa'],
    rawOffsetInMinutes: 660,
    abbreviation: 'BST',
  },
  'Antarctica/Casey': {
    name: 'Antarctica/Casey',
    alternativeName: 'Casey Time',
    group: ['Antarctica/Casey'],
    continentCode: 'AN',
    continentName: 'Antarctica',
    countryName: 'Antarctica',
    countryCode: 'AQ',
    mainCities: ['Casey'],
    rawOffsetInMinutes: 660,
    abbreviation: 'CAST',
  },
  'Pacific/Kosrae': {
    name: 'Pacific/Kosrae',
    alternativeName: 'Kosrae Time',
    group: ['Pacific/Kosrae', 'Pacific/Pohnpei'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Micronesia',
    countryCode: 'FM',
    mainCities: ['Kosrae', 'Palikir - National Government Center'],
    rawOffsetInMinutes: 660,
    abbreviation: 'KOST',
  },
  'Australia/Lord_Howe': {
    name: 'Australia/Lord_Howe',
    alternativeName: 'Lord Howe Time',
    group: ['Australia/Lord_Howe', 'Australia/LHI'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Australia',
    countryCode: 'AU',
    mainCities: ['Lord Howe'],
    rawOffsetInMinutes: 630,
    abbreviation: 'LHST',
  },
  'Pacific/Noumea': {
    name: 'Pacific/Noumea',
    alternativeName: 'New Caledonia Time',
    group: ['Pacific/Noumea'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'New Caledonia',
    countryCode: 'NC',
    mainCities: ['Nouméa', 'Mont-Dore', 'Dumbéa'],
    rawOffsetInMinutes: 660,
    abbreviation: 'NCT',
  },
  'Asia/Sakhalin': {
    name: 'Asia/Sakhalin',
    alternativeName: 'Sakhalin Time',
    group: ['Asia/Magadan', 'Asia/Sakhalin', 'Asia/Srednekolymsk'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Russia',
    countryCode: 'RU',
    mainCities: ['Yuzhno-Sakhalinsk', 'Magadan', 'Korsakov', 'Kholmsk'],
    rawOffsetInMinutes: 660,
    abbreviation: 'SAKT',
  },
  'Pacific/Guadalcanal': {
    name: 'Pacific/Guadalcanal',
    alternativeName: 'Solomon Islands Time',
    group: ['Pacific/Guadalcanal', 'Pacific/Pohnpei', 'Pacific/Ponape'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Solomon Islands',
    countryCode: 'SB',
    mainCities: ['Honiara'],
    rawOffsetInMinutes: 660,
    abbreviation: 'SBT',
  },
  'Pacific/Efate': {
    name: 'Pacific/Efate',
    alternativeName: 'Vanuatu Time',
    group: ['Pacific/Efate'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Vanuatu',
    countryCode: 'VU',
    mainCities: ['Port-Vila'],
    rawOffsetInMinutes: 660,
    abbreviation: 'VUT',
  },
  'Pacific/Fiji': {
    name: 'Pacific/Fiji',
    alternativeName: 'Fiji Time',
    group: ['Pacific/Fiji'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Fiji',
    countryCode: 'FJ',
    mainCities: ['Nasinu', 'Suva', 'Lautoka', 'Nadi'],
    rawOffsetInMinutes: 720,
    abbreviation: 'FJT',
  },
  'Pacific/Tarawa': {
    name: 'Pacific/Tarawa',
    alternativeName: 'Gilbert Islands Time',
    group: [
      'Pacific/Tarawa',
      'Pacific/Funafuti',
      'Pacific/Majuro',
      'Pacific/Wake',
      'Pacific/Wallis',
    ],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Kiribati',
    countryCode: 'KI',
    mainCities: ['Tarawa'],
    rawOffsetInMinutes: 720,
    abbreviation: 'GILT',
  },
  'Pacific/Majuro': {
    name: 'Pacific/Majuro',
    alternativeName: 'Marshall Islands Time',
    group: ['Pacific/Kwajalein', 'Pacific/Majuro', 'Kwajalein'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Marshall Islands',
    countryCode: 'MH',
    mainCities: ['Majuro', 'Kwajalein', 'RMI Capitol'],
    rawOffsetInMinutes: 720,
    abbreviation: 'MHT',
  },
  'Pacific/Nauru': {
    name: 'Pacific/Nauru',
    alternativeName: 'Nauru Time',
    group: ['Pacific/Nauru'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Nauru',
    countryCode: 'NR',
    mainCities: ['Yaren'],
    rawOffsetInMinutes: 720,
    abbreviation: 'NRT',
  },
  'Pacific/Norfolk': {
    name: 'Pacific/Norfolk',
    alternativeName: 'Norfolk Island Time',
    group: ['Pacific/Norfolk'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Norfolk Island',
    countryCode: 'NF',
    mainCities: ['Kingston'],
    rawOffsetInMinutes: 660,
    abbreviation: 'NFT',
  },
  'Asia/Kamchatka': {
    name: 'Asia/Kamchatka',
    alternativeName: 'Petropavlovsk-Kamchatski Time',
    group: ['Asia/Anadyr', 'Asia/Kamchatka'],
    continentCode: 'EU',
    continentName: 'Europe',
    countryName: 'Russia',
    countryCode: 'RU',
    mainCities: [
      'Petropavlovsk-Kamchatsky',
      'Yelizovo',
      'Vilyuchinsk',
      'Anadyr',
    ],
    rawOffsetInMinutes: 720,
    abbreviation: 'PETT',
  },
  'Pacific/Funafuti': {
    name: 'Pacific/Funafuti',
    alternativeName: 'Tuvalu Time',
    group: ['Pacific/Funafuti'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Tuvalu',
    countryCode: 'TV',
    mainCities: ['Funafuti'],
    rawOffsetInMinutes: 720,
    abbreviation: 'TVT',
  },
  'Pacific/Wake': {
    name: 'Pacific/Wake',
    alternativeName: 'Wake Island Time',
    group: ['Pacific/Wake'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'United States Minor Outlying Islands',
    countryCode: 'UM',
    mainCities: ['Wake'],
    rawOffsetInMinutes: 720,
    abbreviation: 'WAKT',
  },
  'Pacific/Wallis': {
    name: 'Pacific/Wallis',
    alternativeName: 'Wallis & Futuna Time',
    group: ['Pacific/Wallis'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Wallis and Futuna',
    countryCode: 'WF',
    mainCities: ['Mata-Utu'],
    rawOffsetInMinutes: 720,
    abbreviation: 'WFT',
  },
  'Pacific/Apia': {
    name: 'Pacific/Apia',
    alternativeName: 'Apia Time',
    group: ['Pacific/Apia'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Samoa',
    countryCode: 'WS',
    mainCities: ['Apia'],
    rawOffsetInMinutes: 780,
    abbreviation: 'WST',
  },
  'Pacific/Auckland': {
    name: 'Pacific/Auckland',
    alternativeName: 'New Zealand Time',
    group: [
      'Pacific/Auckland',
      'NZ',
      'Antarctica/McMurdo',
      'Antarctica/South_Pole',
    ],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'New Zealand',
    countryCode: 'NZ',
    mainCities: [
      'Auckland',
      'Wellington',
      'Christchurch',
      'Manukau City',
    ],
    rawOffsetInMinutes: 720,
    abbreviation: 'NZST',
  },
  'Antarctica/McMurdo': {
    name: 'Antarctica/McMurdo',
    alternativeName: 'New Zealand Time',
    group: ['Antarctica/McMurdo'],
    continentCode: 'AN',
    continentName: 'Antarctica',
    countryName: 'Antarctica',
    countryCode: 'AQ',
    mainCities: ['McMurdo'],
    rawOffsetInMinutes: 720,
    abbreviation: 'NZST',
  },
  'Pacific/Kanton': {
    name: 'Pacific/Kanton',
    alternativeName: 'Phoenix Islands Time',
    group: ['Pacific/Kanton', 'Pacific/Enderbury'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Kiribati',
    countryCode: 'KI',
    mainCities: ['Kanton'],
    rawOffsetInMinutes: 780,
    abbreviation: 'PHOT',
  },
  'Pacific/Fakaofo': {
    name: 'Pacific/Fakaofo',
    alternativeName: 'Tokelau Time',
    group: ['Pacific/Fakaofo'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Tokelau',
    countryCode: 'TK',
    mainCities: ['Fakaofo'],
    rawOffsetInMinutes: 780,
    abbreviation: 'TKT',
  },
  'Pacific/Tongatapu': {
    name: 'Pacific/Tongatapu',
    alternativeName: 'Tonga Time',
    group: ['Pacific/Tongatapu'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Tonga',
    countryCode: 'TO',
    mainCities: ['Nuku‘alofa'],
    rawOffsetInMinutes: 780,
    abbreviation: 'TOT',
  },
  'Pacific/Chatham': {
    name: 'Pacific/Chatham',
    alternativeName: 'Chatham Time',
    group: ['Pacific/Chatham', 'NZ-CHAT'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'New Zealand',
    countryCode: 'NZ',
    mainCities: ['Chatham'],
    rawOffsetInMinutes: 765,
    abbreviation: 'CHAST',
  },
  'Pacific/Kiritimati': {
    name: 'Pacific/Kiritimati',
    alternativeName: 'Line Islands Time',
    group: ['Pacific/Kiritimati'],
    continentCode: 'OC',
    continentName: 'Oceania',
    countryName: 'Kiribati',
    countryCode: 'KI',
    mainCities: ['Kiritimati'],
    rawOffsetInMinutes: 840,
    abbreviation: 'LINT',
  },
}
export const TIME_ZONE_LOCATION: ReadonlyArray<TimeZoneLocation> = [
  'Pacific/Niue',
  'Pacific/Midway',
  'Pacific/Pago_Pago',
  'Pacific/Rarotonga',
  'Pacific/Honolulu',
  'Pacific/Tahiti',
  'Pacific/Marquesas',
  'Pacific/Gambier',
  'America/Adak',
  'America/Anchorage',
  'Pacific/Pitcairn',
  'America/Hermosillo',
  'America/Phoenix',
  'America/Los_Angeles',
  'America/Tijuana',
  'America/Vancouver',
  'America/Whitehorse',
  'America/Belize',
  'America/Guatemala',
  'America/Managua',
  'America/Mexico_City',
  'America/Costa_Rica',
  'America/El_Salvador',
  'America/Regina',
  'America/Tegucigalpa',
  'Pacific/Galapagos',
  'America/Edmonton',
  'America/Ciudad_Juarez',
  'America/Denver',
  'America/Rio_Branco',
  'America/Chicago',
  'America/Matamoros',
  'America/Winnipeg',
  'America/Bogota',
  'Pacific/Easter',
  'America/Atikokan',
  'America/Cancun',
  'America/Cayman',
  'America/Jamaica',
  'America/Panama',
  'America/Guayaquil',
  'America/Lima',
  'America/Manaus',
  'America/St_Kitts',
  'America/Blanc-Sablon',
  'America/Montserrat',
  'America/Barbados',
  'America/St_Lucia',
  'America/Port_of_Spain',
  'America/Martinique',
  'America/St_Barthelemy',
  'America/St_Vincent',
  'America/Kralendijk',
  'America/Guadeloupe',
  'America/Marigot',
  'America/Aruba',
  'America/Lower_Princes',
  'America/Tortola',
  'America/Dominica',
  'America/St_Thomas',
  'America/Grenada',
  'America/Antigua',
  'America/Puerto_Rico',
  'America/Santo_Domingo',
  'America/Anguilla',
  'America/Curacao',
  'America/La_Paz',
  'America/Havana',
  'America/Grand_Turk',
  'America/Nassau',
  'America/New_York',
  'America/Port-au-Prince',
  'America/Toronto',
  'America/Guyana',
  'America/Caracas',
  'America/Argentina/Buenos_Aires',
  'America/Halifax',
  'Atlantic/Bermuda',
  'America/Thule',
  'America/Sao_Paulo',
  'Antarctica/Palmer',
  'America/Punta_Arenas',
  'America/Santiago',
  'Atlantic/Stanley',
  'America/Cayenne',
  'America/Asuncion',
  'America/Paramaribo',
  'America/Montevideo',
  'America/St_Johns',
  'America/Noronha',
  'Atlantic/South_Georgia',
  'America/Miquelon',
  'America/Nuuk',
  'Atlantic/Azores',
  'Atlantic/Cape_Verde',
  'America/Scoresbysund',
  'Africa/Abidjan',
  'Africa/Bamako',
  'Africa/Bissau',
  'Africa/Conakry',
  'Africa/Dakar',
  'America/Danmarkshavn',
  'Europe/Isle_of_Man',
  'Europe/Dublin',
  'Africa/Freetown',
  'Atlantic/St_Helena',
  'Africa/Accra',
  'Africa/Lome',
  'Europe/London',
  'Africa/Monrovia',
  'Africa/Nouakchott',
  'Africa/Ouagadougou',
  'Atlantic/Reykjavik',
  'Europe/Jersey',
  'Europe/Guernsey',
  'Africa/Sao_Tome',
  'Africa/Banjul',
  'Antarctica/Troll',
  'Africa/Casablanca',
  'Africa/El_Aaiun',
  'Atlantic/Canary',
  'Europe/Lisbon',
  'Atlantic/Faroe',
  'Africa/Algiers',
  'Europe/Amsterdam',
  'Europe/Andorra',
  'Europe/Belgrade',
  'Europe/Berlin',
  'Europe/Bratislava',
  'Europe/Brussels',
  'Europe/Budapest',
  'Europe/Copenhagen',
  'Europe/Gibraltar',
  'Europe/Ljubljana',
  'Arctic/Longyearbyen',
  'Europe/Luxembourg',
  'Europe/Madrid',
  'Europe/Monaco',
  'Europe/Oslo',
  'Europe/Paris',
  'Europe/Podgorica',
  'Europe/Prague',
  'Europe/Rome',
  'Europe/San_Marino',
  'Europe/Malta',
  'Europe/Sarajevo',
  'Europe/Skopje',
  'Europe/Stockholm',
  'Europe/Tirane',
  'Africa/Tunis',
  'Europe/Vaduz',
  'Europe/Vatican',
  'Europe/Vienna',
  'Europe/Warsaw',
  'Europe/Zagreb',
  'Europe/Zurich',
  'Africa/Bangui',
  'Africa/Malabo',
  'Africa/Brazzaville',
  'Africa/Porto-Novo',
  'Africa/Douala',
  'Africa/Kinshasa',
  'Africa/Lagos',
  'Africa/Libreville',
  'Africa/Luanda',
  'Africa/Ndjamena',
  'Africa/Niamey',
  'Africa/Bujumbura',
  'Africa/Gaborone',
  'Africa/Harare',
  'Africa/Juba',
  'Africa/Khartoum',
  'Africa/Kigali',
  'Africa/Blantyre',
  'Africa/Lubumbashi',
  'Africa/Lusaka',
  'Africa/Maputo',
  'Africa/Windhoek',
  'Europe/Athens',
  'Asia/Beirut',
  'Europe/Bucharest',
  'Africa/Cairo',
  'Europe/Chisinau',
  'Asia/Hebron',
  'Europe/Helsinki',
  'Europe/Kaliningrad',
  'Europe/Kyiv',
  'Europe/Mariehamn',
  'Asia/Nicosia',
  'Europe/Riga',
  'Europe/Sofia',
  'Europe/Tallinn',
  'Africa/Tripoli',
  'Europe/Vilnius',
  'Asia/Jerusalem',
  'Africa/Johannesburg',
  'Africa/Mbabane',
  'Africa/Maseru',
  'Asia/Kuwait',
  'Asia/Bahrain',
  'Asia/Baghdad',
  'Asia/Qatar',
  'Asia/Riyadh',
  'Asia/Aden',
  'Asia/Amman',
  'Asia/Damascus',
  'Africa/Addis_Ababa',
  'Indian/Antananarivo',
  'Africa/Asmara',
  'Africa/Dar_es_Salaam',
  'Africa/Djibouti',
  'Africa/Kampala',
  'Indian/Mayotte',
  'Africa/Mogadishu',
  'Indian/Comoro',
  'Africa/Nairobi',
  'Europe/Minsk',
  'Europe/Moscow',
  'Europe/Simferopol',
  'Antarctica/Syowa',
  'Europe/Istanbul',
  'Asia/Tehran',
  'Asia/Yerevan',
  'Asia/Baku',
  'Asia/Tbilisi',
  'Asia/Dubai',
  'Asia/Muscat',
  'Indian/Mauritius',
  'Indian/Reunion',
  'Europe/Samara',
  'Indian/Mahe',
  'Asia/Kabul',
  'Indian/Kerguelen',
  'Indian/Maldives',
  'Antarctica/Mawson',
  'Asia/Karachi',
  'Asia/Dushanbe',
  'Asia/Ashgabat',
  'Asia/Tashkent',
  'Asia/Aqtobe',
  'Asia/Yekaterinburg',
  'Asia/Colombo',
  'Asia/Kolkata',
  'Asia/Kathmandu',
  'Asia/Dhaka',
  'Asia/Thimphu',
  'Asia/Urumqi',
  'Asia/Almaty',
  'Indian/Chagos',
  'Asia/Bishkek',
  'Asia/Omsk',
  'Antarctica/Vostok',
  'Indian/Cocos',
  'Asia/Yangon',
  'Indian/Christmas',
  'Antarctica/Davis',
  'Asia/Hovd',
  'Asia/Bangkok',
  'Asia/Ho_Chi_Minh',
  'Asia/Phnom_Penh',
  'Asia/Vientiane',
  'Asia/Novosibirsk',
  'Asia/Jakarta',
  'Australia/Perth',
  'Asia/Brunei',
  'Asia/Makassar',
  'Asia/Macau',
  'Asia/Shanghai',
  'Asia/Hong_Kong',
  'Asia/Irkutsk',
  'Asia/Kuala_Lumpur',
  'Asia/Manila',
  'Asia/Singapore',
  'Asia/Taipei',
  'Asia/Ulaanbaatar',
  'Australia/Eucla',
  'Asia/Dili',
  'Asia/Jayapura',
  'Asia/Tokyo',
  'Asia/Pyongyang',
  'Asia/Seoul',
  'Pacific/Palau',
  'Asia/Chita',
  'Australia/Darwin',
  'Australia/Brisbane',
  'Pacific/Guam',
  'Pacific/Saipan',
  'Pacific/Chuuk',
  'Antarctica/DumontDUrville',
  'Pacific/Port_Moresby',
  'Asia/Vladivostok',
  'Australia/Adelaide',
  'Australia/Sydney',
  'Pacific/Bougainville',
  'Antarctica/Casey',
  'Pacific/Kosrae',
  'Australia/Lord_Howe',
  'Pacific/Noumea',
  'Asia/Sakhalin',
  'Pacific/Guadalcanal',
  'Pacific/Efate',
  'Pacific/Fiji',
  'Pacific/Tarawa',
  'Pacific/Majuro',
  'Pacific/Nauru',
  'Pacific/Norfolk',
  'Asia/Kamchatka',
  'Pacific/Funafuti',
  'Pacific/Wake',
  'Pacific/Wallis',
  'Pacific/Apia',
  'Pacific/Auckland',
  'Antarctica/McMurdo',
  'Pacific/Kanton',
  'Pacific/Fakaofo',
  'Pacific/Tongatapu',
  'Pacific/Chatham',
  'Pacific/Kiritimati',
]
export const UNARCHIVER_FORMAT: ReadonlyArray<UnarchiverFormat> = [
  'zip',
  'rar',
  '7z',
  'tar',
  'gzip',
  'bzip2',
  'lzma',
  'cab',
  'msi',
  'nsis',
  'exe',
  'iso',
]
export const UNIT: ReadonlyArray<Unit> = [
  'millimeter',
  'centimeter',
  'meter',
  'kilometer',
  'inch',
  'yard',
  'us-survey-foot',
  'foot',
  'mile',
  'square-millimeter',
  'square-centimeter',
  'square-meter',
  'hectare',
  'square-kilometer',
  'square-inch',
  'square-yard',
  'square-foot',
  'acre',
  'square-mile',
  'microgram',
  'milligram',
  'gram',
  'kilogram',
  'metric-tonne',
  'ounce',
  'pound',
  'ton',
  'cubic-millimeter',
  'cubic-centimeter',
  'millilitre',
  'centilitre',
  'decilitre',
  'litre',
  'kilolitre',
  'cubic-meter',
  'cubic-kilometer',
  'tesked',
  'matsked',
  'kaffekopp',
  'glas',
  'kanna',
  'teaspoon',
  'tablespoon',
  'cubic-inch',
  'fluid-ounce',
  'cup',
  'pint',
  'quart',
  'gallon',
  'cubic-foot',
  'cubic-yard',
  'each',
  'dozen',
  'celsius',
  'kelvin',
  'fahrenheit',
  'rankine',
  'nanosecond',
  'microsecond',
  'millisecond',
  'second',
  'minute',
  'hour',
  'day',
  'week',
  'month',
  'year',
  'bit',
  'kilobit',
  'megabit',
  'gigabit',
  'terabit',
  'byte',
  'kilobyte',
  'megabyte',
  'gigabyte',
  'terabyte',
  'part-per-million',
  'part-per-billion',
  'part-per-trillion',
  'part-per-quadrillion',
  'metre-per-second',
  'kilometre-per-hour',
  'mile-per-hour',
  'knot',
  'foot-per-second',
  'minute-per-kilometre',
  'second-per-metre',
  'minute-per-mile',
  'second-per-foot',
  'pascal',
  'kilopascal',
  'megapascal',
  'hectopascal',
  'bar',
  'torr',
  'pound-per-square-inch',
  'kilopound-per-square-inch',
  'ampere',
  'milliampere',
  'kiloampere',
  'volt',
  'millivolt',
  'kilovolt',
  'watt',
  'milliwatt',
  'kilowatt',
  'megawatt',
  'gigawatt',
  'volt-ampere-reactive',
  'millivolt-ampere-reactive',
  'kilovolt-ampere-reactive',
  'megavolt-ampere-reactive',
  'gigavolt-ampere-reactive',
  'volt-ampere',
  'millivolt-ampere',
  'kilovolt-ampere',
  'megavolt-ampere',
  'gigavolt-ampere',
  'watt-hour',
  'milliwatt-hour',
  'kilowatt-hour',
  'megawatt-hour',
  'gigawatt-hour',
  'joule',
  'kilojoule',
  'volt-ampere-reactive-hour',
  'millivolt-ampere-reactive-hour',
  'kilovolt-ampere-reactive-hour',
  'megavolt-ampere-reactive-hour',
  'gigavolt-ampere-reactive-hour',
  'cubic-millimeter-per-second',
  'cubic-centimeter-per-second',
  'millilitre-per-second',
  'centilitre-per-second',
  'decilitre-per-second',
  'litre-per-second',
  'litre-per-minute',
  'litre-per-hour',
  'kilolitre-per-second',
  'kilolitre-per-minute',
  'kilolitre-per-hour',
  'cubic-meter-per-second',
  'cubic-meter-per-minute',
  'cubic-meter-per-hour',
  'cubic-kilometer-per-second',
  'teaspoon-per-second',
  'tablespoon-per-second',
  'cubic-inch-per-second',
  'cubic-inch-per-minute',
  'cubic-inch-per-hour',
  'fluid-ounce-per-second',
  'fluid-ounce-per-minute',
  'fluid-ounce-per-hour',
  'cup-per-second',
  'pint-per-second',
  'pint-per-minute',
  'pint-per-hour',
  'quart-per-second',
  'gallon-per-second',
  'gallon-per-minute',
  'gallon-per-hour',
  'cubic-foot-per-second',
  'cubic-foot-per-minute',
  'cubic-foot-per-hour',
  'cubic-yard-per-second',
  'cubic-yard-per-minute',
  'cubic-yard-per-hour',
  'lux',
  'foot-candle',
  'millihertz',
  'hertz',
  'kilohertz',
  'megahertz',
  'gigahertz',
  'terahertz',
  'rotation-per-minute',
  'degree-per-second',
  'radian-per-second',
  'radian',
  'degree',
  'gradian',
  'arcminute',
  'arcsecond',
]

export const UNIT_KEY: UnitKey = {
  millimeter: {
    key: 'mm',
  },
  centimeter: {
    key: 'cm',
  },
  meter: {
    key: 'm',
  },
  kilometer: {
    key: 'km',
  },
  inch: {
    key: 'in',
  },
  yard: {
    key: 'yd',
  },
  'us-survey-foot': {
    key: 'ft-us',
  },
  foot: {
    key: 'ft',
  },
  mile: {
    key: 'mi',
  },
  'square-millimeter': {
    key: 'mm2',
  },
  'square-centimeter': {
    key: 'cm2',
  },
  'square-meter': {
    key: 'm2',
  },
  hectare: {
    key: 'ha',
  },
  'square-kilometer': {
    key: 'km2',
  },
  'square-inch': {
    key: 'in2',
  },
  'square-yard': {
    key: 'yd2',
  },
  'square-foot': {
    key: 'ft2',
  },
  acre: {
    key: 'ac',
  },
  'square-mile': {
    key: 'mi2',
  },
  microgram: {
    key: 'mcg',
  },
  milligram: {
    key: 'mg',
  },
  gram: {
    key: 'g',
  },
  kilogram: {
    key: 'kg',
  },
  'metric-tonne': {
    key: 'mt',
  },
  ounce: {
    key: 'oz',
  },
  pound: {
    key: 'lb',
  },
  ton: {
    key: 't',
  },
  'cubic-millimeter': {
    key: 'mm3',
  },
  'cubic-centimeter': {
    key: 'cm3',
  },
  millilitre: {
    key: 'ml',
  },
  centilitre: {
    key: 'cl',
  },
  decilitre: {
    key: 'dl',
  },
  litre: {
    key: 'l',
  },
  kilolitre: {
    key: 'kl',
  },
  'cubic-meter': {
    key: 'm3',
  },
  'cubic-kilometer': {
    key: 'km3',
  },
  tesked: {
    key: 'tsk',
  },
  matsked: {
    key: 'msk',
  },
  kaffekopp: {
    key: 'kkp',
  },
  glas: {
    key: 'glas',
  },
  kanna: {
    key: 'kanna',
  },
  teaspoon: {
    key: 'tsp',
  },
  tablespoon: {
    key: 'Tbs',
  },
  'cubic-inch': {
    key: 'in3',
  },
  'fluid-ounce': {
    key: 'fl-oz',
  },
  cup: {
    key: 'cup',
  },
  pint: {
    key: 'pnt',
  },
  quart: {
    key: 'qt',
  },
  gallon: {
    key: 'gal',
  },
  'cubic-foot': {
    key: 'ft3',
  },
  'cubic-yard': {
    key: 'yd3',
  },
  each: {
    key: 'ea',
  },
  dozen: {
    key: 'dz',
  },
  celsius: {
    key: 'C',
  },
  kelvin: {
    key: 'K',
  },
  fahrenheit: {
    key: 'F',
  },
  rankine: {
    key: 'R',
  },
  nanosecond: {
    key: 'ns',
  },
  microsecond: {
    key: 'mu',
  },
  millisecond: {
    key: 'ms',
  },
  second: {
    key: 's',
  },
  minute: {
    key: 'min',
  },
  hour: {
    key: 'h',
  },
  day: {
    key: 'd',
  },
  week: {
    key: 'week',
  },
  month: {
    key: 'month',
  },
  year: {
    key: 'year',
  },
  bit: {
    key: 'b',
  },
  kilobit: {
    key: 'Kb',
  },
  megabit: {
    key: 'Mb',
  },
  gigabit: {
    key: 'Gb',
  },
  terabit: {
    key: 'Tb',
  },
  byte: {
    key: 'B',
  },
  kilobyte: {
    key: 'KB',
  },
  megabyte: {
    key: 'MB',
  },
  gigabyte: {
    key: 'GB',
  },
  terabyte: {
    key: 'TB',
  },
  'part-per-million': {
    key: 'ppm',
  },
  'part-per-billion': {
    key: 'ppb',
  },
  'part-per-trillion': {
    key: 'ppt',
  },
  'part-per-quadrillion': {
    key: 'ppq',
  },
  'metre-per-second': {
    key: 'm/s',
  },
  'kilometre-per-hour': {
    key: 'km/h',
  },
  'mile-per-hour': {
    key: 'm/h',
  },
  knot: {
    key: 'knot',
  },
  'foot-per-second': {
    key: 'ft/s',
  },
  'minute-per-kilometre': {
    key: 'min/km',
  },
  'second-per-metre': {
    key: 's/m',
  },
  'minute-per-mile': {
    key: 'min/mi',
  },
  'second-per-foot': {
    key: 's/ft',
  },
  pascal: {
    key: 'Pa',
  },
  kilopascal: {
    key: 'kPa',
  },
  megapascal: {
    key: 'MPa',
  },
  hectopascal: {
    key: 'hPa',
  },
  bar: {
    key: 'bar',
  },
  torr: {
    key: 'torr',
  },
  'pound-per-square-inch': {
    key: 'psi',
  },
  'kilopound-per-square-inch': {
    key: 'ksi',
  },
  ampere: {
    key: 'A',
  },
  milliampere: {
    key: 'mA',
  },
  kiloampere: {
    key: 'kA',
  },
  volt: {
    key: 'V',
  },
  millivolt: {
    key: 'mV',
  },
  kilovolt: {
    key: 'kV',
  },
  watt: {
    key: 'W',
  },
  milliwatt: {
    key: 'mW',
  },
  kilowatt: {
    key: 'kW',
  },
  megawatt: {
    key: 'MW',
  },
  gigawatt: {
    key: 'GW',
  },
  'volt-ampere-reactive': {
    key: 'VAR',
  },
  'millivolt-ampere-reactive': {
    key: 'mVAR',
  },
  'kilovolt-ampere-reactive': {
    key: 'kVAR',
  },
  'megavolt-ampere-reactive': {
    key: 'MVAR',
  },
  'gigavolt-ampere-reactive': {
    key: 'GVAR',
  },
  'volt-ampere': {
    key: 'VA',
  },
  'millivolt-ampere': {
    key: 'mVA',
  },
  'kilovolt-ampere': {
    key: 'kVA',
  },
  'megavolt-ampere': {
    key: 'MVA',
  },
  'gigavolt-ampere': {
    key: 'GVA',
  },
  'watt-hour': {
    key: 'Wh',
  },
  'milliwatt-hour': {
    key: 'mWh',
  },
  'kilowatt-hour': {
    key: 'kWh',
  },
  'megawatt-hour': {
    key: 'MWh',
  },
  'gigawatt-hour': {
    key: 'GWh',
  },
  joule: {
    key: 'J',
  },
  kilojoule: {
    key: 'kJ',
  },
  'volt-ampere-reactive-hour': {
    key: 'VARh',
  },
  'millivolt-ampere-reactive-hour': {
    key: 'mVARh',
  },
  'kilovolt-ampere-reactive-hour': {
    key: 'kVARh',
  },
  'megavolt-ampere-reactive-hour': {
    key: 'MVARh',
  },
  'gigavolt-ampere-reactive-hour': {
    key: 'GVARh',
  },
  'cubic-millimeter-per-second': {
    key: 'mm3/s',
  },
  'cubic-centimeter-per-second': {
    key: 'cm3/s',
  },
  'millilitre-per-second': {
    key: 'ml/s',
  },
  'centilitre-per-second': {
    key: 'cl/s',
  },
  'decilitre-per-second': {
    key: 'dl/s',
  },
  'litre-per-second': {
    key: 'l/s',
  },
  'litre-per-minute': {
    key: 'l/min',
  },
  'litre-per-hour': {
    key: 'l/h',
  },
  'kilolitre-per-second': {
    key: 'kl/s',
  },
  'kilolitre-per-minute': {
    key: 'kl/min',
  },
  'kilolitre-per-hour': {
    key: 'kl/h',
  },
  'cubic-meter-per-second': {
    key: 'm3/s',
  },
  'cubic-meter-per-minute': {
    key: 'm3/min',
  },
  'cubic-meter-per-hour': {
    key: 'm3/h',
  },
  'cubic-kilometer-per-second': {
    key: 'km3/s',
  },
  'teaspoon-per-second': {
    key: 'tsp/s',
  },
  'tablespoon-per-second': {
    key: 'Tbs/s',
  },
  'cubic-inch-per-second': {
    key: 'in3/s',
  },
  'cubic-inch-per-minute': {
    key: 'in3/min',
  },
  'cubic-inch-per-hour': {
    key: 'in3/h',
  },
  'fluid-ounce-per-second': {
    key: 'fl-oz/s',
  },
  'fluid-ounce-per-minute': {
    key: 'fl-oz/min',
  },
  'fluid-ounce-per-hour': {
    key: 'fl-oz/h',
  },
  'cup-per-second': {
    key: 'cup/s',
  },
  'pint-per-second': {
    key: 'pnt/s',
  },
  'pint-per-minute': {
    key: 'pnt/min',
  },
  'pint-per-hour': {
    key: 'pnt/h',
  },
  'quart-per-second': {
    key: 'qt/s',
  },
  'gallon-per-second': {
    key: 'gal/s',
  },
  'gallon-per-minute': {
    key: 'gal/min',
  },
  'gallon-per-hour': {
    key: 'gal/h',
  },
  'cubic-foot-per-second': {
    key: 'ft3/s',
  },
  'cubic-foot-per-minute': {
    key: 'ft3/min',
  },
  'cubic-foot-per-hour': {
    key: 'ft3/h',
  },
  'cubic-yard-per-second': {
    key: 'yd3/s',
  },
  'cubic-yard-per-minute': {
    key: 'yd3/min',
  },
  'cubic-yard-per-hour': {
    key: 'yd3/h',
  },
  lux: {
    key: 'lx',
  },
  'foot-candle': {
    key: 'ft-cd',
  },
  millihertz: {
    key: 'mHz',
  },
  hertz: {
    key: 'Hz',
  },
  kilohertz: {
    key: 'kHz',
  },
  megahertz: {
    key: 'MHz',
  },
  gigahertz: {
    key: 'GHz',
  },
  terahertz: {
    key: 'THz',
  },
  'rotation-per-minute': {
    key: 'rpm',
  },
  'degree-per-second': {
    key: 'deg/s',
  },
  'radian-per-second': {
    key: 'rad/s',
  },
  radian: {
    key: 'rad',
  },
  degree: {
    key: 'deg',
  },
  gradian: {
    key: 'grad',
  },
  arcminute: {
    key: 'arcmin',
  },
  arcsecond: {
    key: 'arcsec',
  },
}
export const WAST_INPUT_FORMAT: ReadonlyArray<WastInputFormat> = [
  'wast',
]
export const WAST_OUTPUT_FORMAT: ReadonlyArray<WastOutputFormat> = [
  'wasm',
]
export const WORD_SET: ReadonlyArray<WordSet> = [
  'pleasant-adjective',
  'pleasant-noun',
]

export const WORD_SET_CONTENT: WordSetContent = {
  'pleasant-noun': {
    name: 'pleasant_noun',
  },
  'pleasant-adjective': {
    name: 'pleasant_adjective',
  },
}
