import {
  FfmpegCodecContent,
  FfmpegCodecContentKey,
  FfmpegDecoderContent,
  FfmpegDecoderContentKey,
  FfmpegEncoderContent,
  FfmpegEncoderContentKey,
  FfmpegFormatContent,
  FfmpegFormatContentKey,
  FfmpegStrictOptionContent,
} from '~/code/type/shared/ffmpeg.js'

export const FFMPEG_CODEC_CONTENT_KEY: ReadonlyArray<FfmpegCodecContentKey> =
  [
    '012v',
    '4xm',
    '8bps',
    'a64_multi',
    'a64_multi5',
    'aasc',
    'agm',
    'aic',
    'alias_pix',
    'amv',
    'anm',
    'ansi',
    'apng',
    'arbc',
    'argo',
    'asv1',
    'asv2',
    'aura',
    'aura2',
    'av1',
    'avrn',
    'avrp',
    'avs',
    'avs2',
    'avs3',
    'avui',
    'ayuv',
    'bethsoftvid',
    'bfi',
    'binkvideo',
    'bintext',
    'bitpacked',
    'bmp',
    'bmv_video',
    'brender_pix',
    'c93',
    'cavs',
    'cdgraphics',
    'cdtoons',
    'cdxl',
    'cfhd',
    'cinepak',
    'clearvideo',
    'cljr',
    'cllc',
    'cmv',
    'cpia',
    'cri',
    'cscd',
    'cyuv',
    'daala',
    'dds',
    'dfa',
    'dirac',
    'dnxhd',
    'dpx',
    'dsicinvideo',
    'dvvideo',
    'dxa',
    'dxtory',
    'dxv',
    'escape124',
    'escape130',
    'evc',
    'exr',
    'ffv1',
    'ffvhuff',
    'fic',
    'fits',
    'flashsv',
    'flashsv2',
    'flic',
    'flv1',
    'fmvc',
    'fraps',
    'frwu',
    'g2m',
    'gdv',
    'gem',
    'gif',
    'h261',
    'h263',
    'h263i',
    'h263p',
    'h264',
    'hap',
    'hdr',
    'hevc',
    'hnm4video',
    'hq_hqa',
    'hqx',
    'huffyuv',
    'hymt',
    'idcin',
    'idf',
    'iff_ilbm',
    'imm4',
    'imm5',
    'indeo2',
    'indeo3',
    'indeo4',
    'indeo5',
    'interplayvideo',
    'ipu',
    'jpeg2000',
    'jpegls',
    'jpegxl',
    'jv',
    'kgv1',
    'kmvc',
    'lagarith',
    'ljpeg',
    'loco',
    'lscr',
    'm101',
    'mad',
    'magicyuv',
    'mdec',
    'media100',
    'mimic',
    'mjpeg',
    'mjpegb',
    'mmvideo',
    'mobiclip',
    'motionpixels',
    'mpeg1video',
    'mpeg2video',
    'mpeg4',
    'msa1',
    'mscc',
    'msmpeg4v1',
    'msmpeg4v2',
    'msmpeg4v3',
    'msp2',
    'msrle',
    'mss1',
    'mss2',
    'msvideo1',
    'mszh',
    'mts2',
    'mv30',
    'mvc1',
    'mvc2',
    'mvdv',
    'mvha',
    'mwsc',
    'mxpeg',
    'notchlc',
    'nuv',
    'paf_video',
    'pam',
    'pbm',
    'pcx',
    'pdv',
    'pfm',
    'pgm',
    'pgmyuv',
    'pgx',
    'phm',
    'photocd',
    'pictor',
    'pixlet',
    'png',
    'ppm',
    'prores',
    'prosumer',
    'psd',
    'ptx',
    'qdraw',
    'qoi',
    'qpeg',
    'qtrle',
    'r10k',
    'r210',
    'rasc',
    'rawvideo',
    'rl2',
    'roq',
    'rpza',
    'rscc',
    'rtv1',
    'rv10',
    'rv20',
    'rv30',
    'rv40',
    'sanm',
    'scpr',
    'screenpresso',
    'sga',
    'sgi',
    'sgirle',
    'sheervideo',
    'simbiosis_imx',
    'smackvideo',
    'smc',
    'smvjpeg',
    'snow',
    'sp5x',
    'speedhq',
    'srgc',
    'sunrast',
    'svg',
    'svq1',
    'svq3',
    'targa',
    'targa_y216',
    'tdsc',
    'tgq',
    'tgv',
    'theora',
    'thp',
    'tiertexseqvideo',
    'tiff',
    'tmv',
    'tqi',
    'truemotion1',
    'truemotion2',
    'truemotion2rt',
    'tscc',
    'tscc2',
    'txd',
    'ulti',
    'utvideo',
    'v210',
    'v210x',
    'v308',
    'v408',
    'v410',
    'vb',
    'vble',
    'vbn',
    'vc1',
    'vc1image',
    'vcr1',
    'vixl',
    'vmdvideo',
    'vmix',
    'vmnc',
    'vnull',
    'vp3',
    'vp4',
    'vp5',
    'vp6',
    'vp6a',
    'vp6f',
    'vp7',
    'vp8',
    'vp9',
    'vqc',
    'vvc',
    'wbmp',
    'wcmv',
    'webp',
    'wmv1',
    'wmv2',
    'wmv3',
    'wmv3image',
    'wnv1',
    'wrapped_avframe',
    'ws_vqa',
    'xan_wc3',
    'xan_wc4',
    'xbin',
    'xbm',
    'xface',
    'xpm',
    'xwd',
    'y41p',
    'ylc',
    'yop',
    'yuv4',
    'zerocodec',
    'zlib',
    'zmbv',
    '4gv',
    '8svx_exp',
    '8svx_fib',
    'aac',
    'aac_latm',
    'ac3',
    'ac4',
    'acelp.kelvin',
    'adpcm_4xm',
    'adpcm_adx',
    'adpcm_afc',
    'adpcm_agm',
    'adpcm_aica',
    'adpcm_argo',
    'adpcm_ct',
    'adpcm_dtk',
    'adpcm_ea',
    'adpcm_ea_maxis_xa',
    'adpcm_ea_r1',
    'adpcm_ea_r2',
    'adpcm_ea_r3',
    'adpcm_ea_xas',
    'adpcm_g722',
    'adpcm_g726',
    'adpcm_g726le',
    'adpcm_ima_acorn',
    'adpcm_ima_alp',
    'adpcm_ima_amv',
    'adpcm_ima_apc',
    'adpcm_ima_apm',
    'adpcm_ima_cunning',
    'adpcm_ima_dat4',
    'adpcm_ima_dk3',
    'adpcm_ima_dk4',
    'adpcm_ima_ea_eacs',
    'adpcm_ima_ea_sead',
    'adpcm_ima_iss',
    'adpcm_ima_moflex',
    'adpcm_ima_mtf',
    'adpcm_ima_oki',
    'adpcm_ima_qt',
    'adpcm_ima_rad',
    'adpcm_ima_smjpeg',
    'adpcm_ima_ssi',
    'adpcm_ima_wav',
    'adpcm_ima_ws',
    'adpcm_ms',
    'adpcm_mtaf',
    'adpcm_psx',
    'adpcm_sbpro_2',
    'adpcm_sbpro_3',
    'adpcm_sbpro_4',
    'adpcm_swf',
    'adpcm_thp',
    'adpcm_thp_le',
    'adpcm_vima',
    'adpcm_xa',
    'adpcm_xmd',
    'adpcm_yamaha',
    'adpcm_zork',
    'alac',
    'amr_nb',
    'amr_wb',
    'anull',
    'apac',
    'ape',
    'aptx',
    'aptx_hd',
    'atrac1',
    'atrac3',
    'atrac3al',
    'atrac3p',
    'atrac3pal',
    'atrac9',
    'avc',
    'binkaudio_dct',
    'binkaudio_rdft',
    'bmv_audio',
    'bonk',
    'cbd2_dpcm',
    'celt',
    'codec2',
    'comfortnoise',
    'cook',
    'derf_dpcm',
    'dfpwm',
    'dolby_e',
    'dsd_lsbf',
    'dsd_lsbf_planar',
    'dsd_msbf',
    'dsd_msbf_planar',
    'dsicinaudio',
    'dss_sp',
    'dst',
    'dts',
    'dvaudio',
    'eac3',
    'evrc',
    'fastaudio',
    'flac',
    'ftr',
    'g723_1',
    'g729',
    'gremlin_dpcm',
    'gsm',
    'gsm_ms',
    'hca',
    'hcom',
    'iac',
    'ilbc',
    'imc',
    'interplay_dpcm',
    'interplayacm',
    'mace3',
    'mace6',
    'metasound',
    'misc4',
    'mlp',
    'mp1',
    'mp2',
    'mp3',
    'mp3adu',
    'mp3on4',
    'mp4als',
    'mpegh_3d_audio',
    'msnsiren',
    'musepack7',
    'musepack8',
    'nellymoser',
    'opus',
    'osq',
    'paf_audio',
    'pcm_alaw',
    'pcm_bluray',
    'pcm_dvd',
    'pcm_f16le',
    'pcm_f24le',
    'pcm_f32be',
    'pcm_f32le',
    'pcm_f64be',
    'pcm_f64le',
    'pcm_lxf',
    'pcm_mulaw',
    'pcm_s16be',
    'pcm_s16be_planar',
    'pcm_s16le',
    'pcm_s16le_planar',
    'pcm_s24be',
    'pcm_s24daud',
    'pcm_s24le',
    'pcm_s24le_planar',
    'pcm_s32be',
    'pcm_s32le',
    'pcm_s32le_planar',
    'pcm_s64be',
    'pcm_s64le',
    'pcm_s8',
    'pcm_s8_planar',
    'pcm_sga',
    'pcm_u16be',
    'pcm_u16le',
    'pcm_u24be',
    'pcm_u24le',
    'pcm_u32be',
    'pcm_u32le',
    'pcm_u8',
    'pcm_vidc',
    'qcelp',
    'qdm2',
    'qdmc',
    'ra_144',
    'ra_288',
    'ralf',
    'rka',
    'roq_dpcm',
    's302m',
    'sbc',
    'sdx2_dpcm',
    'shorten',
    'sipr',
    'siren',
    'smackaudio',
    'smv',
    'sol_dpcm',
    'sonic',
    'sonicls',
    'speex',
    'tak',
    'truehd',
    'truespeech',
    'tta',
    'twinvq',
    'vmdaudio',
    'vorbis',
    'wady_dpcm',
    'wavarc',
    'wavesynth',
    'wavpack',
    'westwood_snd1',
    'wmalossless',
    'wmapro',
    'wmav1',
    'wmav2',
    'wmavoice',
    'xan_dpcm',
    'xma1',
    'xma2',
    'bin_data',
    'dvd_nav_packet',
    'epg',
    'klv',
    'mpegts',
    'otf',
    'scte_35',
    'smpte_2038',
    'timed_id3',
    'ttf',
    'arib_caption',
    'ass',
    'dvb_subtitle',
    'dvb_teletext',
    'dvd_subtitle',
    'eia_608',
    'hdmv_pgs_subtitle',
    'hdmv_text_subtitle',
    'jacosub',
    'microdvd',
    'mov_text',
    'mpl2',
    'pjs',
    'realtext',
    'sami',
    'srt',
    'ssa',
    'stl',
    'subrip',
    'subviewer',
    'subviewer1',
    'text',
    'ttml',
    'vplayer',
    'webvtt',
    'xsub',
  ] as const

export const FFMPEG_CODEC_CONTENT: FfmpegCodecContent = {
  '012v': {
    label: 'Uncompressed 4:2:2 10-bit',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  '4xm': {
    label: '4X Movie',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  '8bps': {
    label: 'QuickTime 8BPS video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  a64_multi: {
    label: 'Multicolor charset for Commodore 64 (encoders: a64multi)',
    type: 'video',
    supportsDecoding: false,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  a64_multi5: {
    label:
      'Multicolor charset for Commodore 64, extended with 5th color (colram) (encoders: a64multi5)',
    type: 'video',
    supportsDecoding: false,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  aasc: {
    label: 'Autodesk RLE',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  agm: {
    label: 'Amuse Graphics Movie',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  aic: {
    label: 'Apple Intermediate Codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  alias_pix: {
    label: 'Alias/Wavefront PIX image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  amv: {
    label: 'AMV Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  anm: {
    label: 'Deluxe Paint Animation',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  ansi: {
    label: 'ASCII/ANSI art',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  apng: {
    label: 'APNG (Animated Portable Network Graphics) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  arbc: {
    label: "Gryphon's Anim Compressor",
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  argo: {
    label: 'Argonaut Games Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  asv1: {
    label: 'ASUS V1',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  asv2: {
    label: 'ASUS V2',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  aura: {
    label: 'Auravision AURA',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  aura2: {
    label: 'Auravision Aura 2',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  av1: {
    label:
      'Alliance for Open Media AV1 (decoders: libdav1d libaom-av1 av1) (encoders: libaom-av1 librav1e libsvtav1)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  avrn: {
    label: 'Avid AVI Codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  avrp: {
    label: 'Avid 1:1 10-bit RGB Packer',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  avs: {
    label: 'AVS (Audio Video Standard) video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  avs2: {
    label: 'AVS2-P2/IEEE1857.4',
    type: 'video',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  avs3: {
    label: 'AVS3-P2/IEEE1857.10',
    type: 'video',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  avui: {
    label: 'Avid Meridien Uncompressed',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  ayuv: {
    label: 'Uncompressed packed MS 4:4:4:4',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  bethsoftvid: {
    label: 'Bethesda VID video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  bfi: {
    label: 'Brute Force & Ignorance',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  binkvideo: {
    label: 'Bink video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  bintext: {
    label: 'Binary text',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: false,
  },
  bitpacked: {
    label: 'Bitpacked',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  bmp: {
    label: 'BMP (Windows and OS/2 bitmap)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  bmv_video: {
    label: 'Discworld II BMV video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  brender_pix: {
    label: 'BRender PIX image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  c93: {
    label: 'Interplay C93',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  cavs: {
    label:
      'Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  cdgraphics: {
    label: 'CD Graphics video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  cdtoons: {
    label: 'CDToons video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  cdxl: {
    label: 'Commodore CDXL video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  cfhd: {
    label: 'GoPro CineForm HD',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  cinepak: {
    label: 'Cinepak',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  clearvideo: {
    label: 'Iterated Systems ClearVideo',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  cljr: {
    label: 'Cirrus Logic AccuPak',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  cllc: {
    label: 'Canopus Lossless Codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  cmv: {
    label: 'Electronic Arts CMV video (decoders: eacmv)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  cpia: {
    label: 'CPiA video format',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  cri: {
    label: 'Cintel RAW',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: true,
  },
  cscd: {
    label: 'CamStudio (decoders: camstudio)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  cyuv: {
    label: 'Creative YUV (CYUV)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  daala: {
    label: 'Daala',
    type: 'video',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: true,
  },
  dds: {
    label: 'DirectDraw Surface image decoder',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: true,
  },
  dfa: {
    label: 'Chronomaster DFA',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  dirac: {
    label: 'Dirac (encoders: vc2)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: true,
  },
  dnxhd: {
    label: 'VC3/DNxHD',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  dpx: {
    label: 'DPX (Digital Picture Exchange) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  dsicinvideo: {
    label: 'Delphine Software International CIN video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  dvvideo: {
    label: 'DV (Digital Video)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  dxa: {
    label: 'Feeble Files/ScummVM DXA',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  dxtory: {
    label: 'Dxtory',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  dxv: {
    label: 'Resolume DXV',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  escape124: {
    label: 'Escape 124',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  escape130: {
    label: 'Escape 130',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  evc: {
    label: 'MPEG-5 EVC (Essential Video Coding)',
    type: 'video',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  exr: {
    label: 'OpenEXR image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: true,
  },
  ffv1: {
    label: 'FFmpeg video codec #1',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  ffvhuff: {
    label: 'Huffyuv FFmpeg variant',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  fic: {
    label: 'Mirillis FIC',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  fits: {
    label: 'FITS (Flexible Image Transport System)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  flashsv: {
    label: 'Flash Screen Video v1',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  flashsv2: {
    label: 'Flash Screen Video v2',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  flic: {
    label: 'Autodesk Animator Flic video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  flv1: {
    label:
      'FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (decoders: flv) (encoders: flv)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  fmvc: {
    label: 'FM Screen Capture Codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  fraps: {
    label: 'Fraps',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  frwu: {
    label: 'Forward Uncompressed',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  g2m: {
    label: 'Go2Meeting',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  gdv: {
    label: 'Gremlin Digital Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  gem: {
    label: 'GEM Raster image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  gif: {
    label: 'CompuServe GIF (Graphics Interchange Format)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  h261: {
    label: 'H.261',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  h263: {
    label: 'H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  h263i: {
    label: 'Intel H.263',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  h263p: {
    label: 'H.263+ / H.263-1998 / H.263 version 2',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  h264: {
    label:
      'H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (encoders: libx264 libx264rgb h264_videotoolbox)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: true,
  },
  hap: {
    label: 'Vidvox Hap',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  hdr: {
    label: 'HDR (Radiance RGBE format) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  hevc: {
    label:
      'H.265 / HEVC (High Efficiency Video Coding) (encoders: libx265 hevc_videotoolbox)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  hnm4video: {
    label: 'HNM 4 video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  hq_hqa: {
    label: 'Canopus HQ/HQA',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  hqx: {
    label: 'Canopus HQX',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  huffyuv: {
    label: 'HuffYUV',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  hymt: {
    label: 'HuffYUV MT',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  idcin: {
    label: 'id Quake II CIN video (decoders: idcinvideo)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  idf: {
    label: 'iCEDraw text',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: false,
  },
  iff_ilbm: {
    label: 'IFF ACBM/ANIM/DEEP/ILBM/PBM/RGB8/RGBN (decoders: iff)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  imm4: {
    label: 'Infinity IMM4',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  imm5: {
    label: 'Infinity IMM5',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  indeo2: {
    label: 'Intel Indeo 2',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  indeo3: {
    label: 'Intel Indeo 3',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  indeo4: {
    label: 'Intel Indeo Video Interactive 4',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  indeo5: {
    label: 'Intel Indeo Video Interactive 5',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  interplayvideo: {
    label: 'Interplay MVE video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  ipu: {
    label: 'IPU Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  jpeg2000: {
    label: 'JPEG 2000 (encoders: jpeg2000 libopenjpeg)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: true,
  },
  jpegls: {
    label: 'JPEG-LS',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: true,
  },
  jpegxl: {
    label: 'JPEG XL (decoders: libjxl) (encoders: libjxl)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: true,
  },
  jv: {
    label: 'Bitmap Brothers JV video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  kgv1: {
    label: 'Kega Game Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  kmvc: {
    label: "Karl Morton's video codec",
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  lagarith: {
    label: 'Lagarith lossless',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  ljpeg: {
    label: 'Lossless JPEG',
    type: 'video',
    supportsDecoding: false,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  loco: {
    label: 'LOCO',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  lscr: {
    label: 'LEAD Screen Capture',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  m101: {
    label: 'Matrox Uncompressed SD',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  mad: {
    label: 'Electronic Arts Madcow Video (decoders: eamad)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  magicyuv: {
    label: 'MagicYUV video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  mdec: {
    label: 'Sony PlayStation MDEC (Motion DECoder)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  media100: {
    label: 'Media 100i',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mimic: {
    label: 'Mimic',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  mjpeg: {
    label: 'Motion JPEG',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mjpegb: {
    label: 'Apple MJPEG-B',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mmvideo: {
    label: 'American Laser Games MM Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  mobiclip: {
    label: 'MobiClip Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  motionpixels: {
    label: 'Motion Pixels video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  mpeg1video: {
    label: 'MPEG-1 video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  mpeg2video: {
    label: 'MPEG-2 video (decoders: mpeg2video mpegvideo)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  mpeg4: {
    label: 'MPEG-4 part 2 (encoders: mpeg4 libxvid)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  msa1: {
    label: 'MS ATC Screen',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  mscc: {
    label: 'Mandsoft Screen Capture Codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  msmpeg4v1: {
    label: 'MPEG-4 part 2 Microsoft variant version 1',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  msmpeg4v2: {
    label: 'MPEG-4 part 2 Microsoft variant version 2',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  msmpeg4v3: {
    label:
      'MPEG-4 part 2 Microsoft variant version 3 (decoders: msmpeg4) (encoders: msmpeg4)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  msp2: {
    label: 'Microsoft Paint (MSP) version 2',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  msrle: {
    label: 'Microsoft RLE',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  mss1: {
    label: 'MS Screen 1',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  mss2: {
    label: 'MS Windows Media Video V9 Screen',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  msvideo1: {
    label: 'Microsoft Video 1',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  mszh: {
    label: 'LCL (LossLess Codec Library) MSZH',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  mts2: {
    label: 'MS Expression Encoder Screen',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  mv30: {
    label: 'MidiVid 3.0',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  mvc1: {
    label: 'Silicon Graphics Motion Video Compressor 1',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mvc2: {
    label: 'Silicon Graphics Motion Video Compressor 2',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mvdv: {
    label: 'MidiVid VQ',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  mvha: {
    label: 'MidiVid Archive Codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mwsc: {
    label: 'MatchWare Screen Capture Codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  mxpeg: {
    label: 'Mobotix MxPEG video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  notchlc: {
    label: 'NotchLC',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  nuv: {
    label: 'NuppelVideo/RTJPEG',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  paf_video: {
    label: 'Amazing Studio Packed Animation File Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  pam: {
    label: 'PAM (Portable AnyMap) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pbm: {
    label: 'PBM (Portable BitMap) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcx: {
    label: 'PC Paintbrush PCX image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pdv: {
    label: 'PDV (PlayDate Video)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  pfm: {
    label: 'PFM (Portable FloatMap) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pgm: {
    label: 'PGM (Portable GrayMap) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pgmyuv: {
    label: 'PGMYUV (Portable GrayMap YUV) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pgx: {
    label: 'PGX (JPEG2000 Test Format)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  phm: {
    label: 'PHM (Portable HalfFloatMap) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  photocd: {
    label: 'Kodak Photo CD',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  pictor: {
    label: 'Pictor/PC Paint',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  pixlet: {
    label: 'Apple Pixlet',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  png: {
    label: 'PNG (Portable Network Graphics) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  ppm: {
    label: 'PPM (Portable PixelMap) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  prores: {
    label:
      'Apple ProRes (iCodec Pro) (encoders: prores prores_aw prores_ks prores_videotoolbox)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  prosumer: {
    label: 'Brooktree ProSumer Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  psd: {
    label: 'Photoshop PSD file',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  ptx: {
    label: 'V.Flash PTX image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  qdraw: {
    label: 'Apple QuickDraw',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  qoi: {
    label: 'QOI (Quite OK Image)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  qpeg: {
    label: 'Q-team QPEG',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  qtrle: {
    label: 'QuickTime Animation (RLE) video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  r10k: {
    label: 'AJA Kona 10-bit RGB Codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  r210: {
    label: 'Uncompressed RGB 10-bit',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  rasc: {
    label: 'RemotelyAnywhere Screen Capture',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  rawvideo: {
    label: 'raw video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  rl2: {
    label: 'RL2 video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  roq: {
    label: 'id RoQ video (decoders: roqvideo) (encoders: roqvideo)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  rpza: {
    label: 'QuickTime video (RPZA)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  rscc: {
    label: 'innoHeim/Rsupport Screen Capture Codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  rtv1: {
    label: 'RTV1 (RivaTuner Video)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  rv10: {
    label: 'RealVideo 1.0',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  rv20: {
    label: 'RealVideo 2.0',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  rv30: {
    label: 'RealVideo 3.0',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  rv40: {
    label: 'RealVideo 4.0',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  sanm: {
    label: 'LucasArts SANM/SMUSH video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  scpr: {
    label: 'ScreenPressor',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: true,
  },
  screenpresso: {
    label: 'Screenpresso',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  sga: {
    label: 'Digital Pictures SGA Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  sgi: {
    label: 'SGI image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  sgirle: {
    label: 'SGI RLE 8-bit',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  sheervideo: {
    label: 'BitJazz SheerVideo',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  simbiosis_imx: {
    label: 'Simbiosis Interactive IMX Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  smackvideo: {
    label: 'Smacker video (decoders: smackvid)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  smc: {
    label: 'QuickTime Graphics (SMC)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  smvjpeg: {
    label: 'Sigmatel Motion Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  snow: {
    label: 'Snow',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: true,
  },
  sp5x: {
    label: 'Sunplus JPEG (SP5X)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  speedhq: {
    label: 'NewTek SpeedHQ',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  srgc: {
    label: 'Screen Recorder Gold Codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  sunrast: {
    label: 'Sun Rasterfile image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  svg: {
    label: 'Scalable Vector Graphics',
    type: 'video',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  svq1: {
    label: 'Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  svq3: {
    label: 'Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  targa: {
    label: 'Truevision Targa image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  targa_y216: {
    label: 'Pinnacle TARGA CineWave YUV16',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  tdsc: {
    label: 'TDSC',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  tgq: {
    label: 'Electronic Arts TGQ video (decoders: eatgq)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  tgv: {
    label: 'Electronic Arts TGV video (decoders: eatgv)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  theora: {
    label: 'Theora (encoders: libtheora)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  thp: {
    label: 'Nintendo Gamecube THP video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  tiertexseqvideo: {
    label: 'Tiertex Limited SEQ video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  tiff: {
    label: 'TIFF image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  tmv: {
    label: '8088flex TMV',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  tqi: {
    label: 'Electronic Arts TQI video (decoders: eatqi)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  truemotion1: {
    label: 'Duck TrueMotion 1.0',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  truemotion2: {
    label: 'Duck TrueMotion 2.0',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  truemotion2rt: {
    label: 'Duck TrueMotion 2.0 Real Time',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  tscc: {
    label: 'TechSmith Screen Capture Codec (decoders: camtasia)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  tscc2: {
    label: 'TechSmith Screen Codec 2',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  txd: {
    label: 'Renderware TXD (TeXture Dictionary) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  ulti: {
    label: 'IBM UltiMotion (decoders: ultimotion)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  utvideo: {
    label: 'Ut Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  v210: {
    label: 'Uncompressed 4:2:2 10-bit',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  v210x: {
    label: 'Uncompressed 4:2:2 10-bit',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  v308: {
    label: 'Uncompressed packed 4:4:4',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  v408: {
    label: 'Uncompressed packed QT 4:4:4:4',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  v410: {
    label: 'Uncompressed 4:4:4 10-bit',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  vb: {
    label: 'Beam Software VB',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vble: {
    label: 'VBLE Lossless Codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  vbn: {
    label: 'Vizrt Binary Image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vc1: {
    label: 'SMPTE VC-1',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vc1image: {
    label: 'Windows Media Video 9 Image v2',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vcr1: {
    label: 'ATI VCR1',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  vixl: {
    label: 'Miro VideoXL (decoders: xl)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  vmdvideo: {
    label: 'Sierra VMD video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vmix: {
    label: 'vMix Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  vmnc: {
    label: 'VMware Screen Codec / VMware Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  vnull: {
    label: 'Null video codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  vp3: {
    label: 'On2 VP3',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vp4: {
    label: 'On2 VP4',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vp5: {
    label: 'On2 VP5',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vp6: {
    label: 'On2 VP6',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vp6a: {
    label: 'On2 VP6 (Flash version, with alpha channel)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vp6f: {
    label: 'On2 VP6 (Flash version)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vp7: {
    label: 'On2 VP7',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vp8: {
    label: 'On2 VP8 (decoders: vp8 libvpx) (encoders: libvpx)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vp9: {
    label:
      'Google VP9 (decoders: vp9 libvpx-vp9) (encoders: libvpx-vp9)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vqc: {
    label: 'ViewQuest VQC',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  vvc: {
    label: 'H.266 / VVC (Versatile Video Coding)',
    type: 'video',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  wbmp: {
    label: 'WBMP (Wireless Application Protocol Bitmap) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  wcmv: {
    label: 'WinCAM Motion Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  webp: {
    label: 'WebP (encoders: libwebp_anim libwebp)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: true,
  },
  wmv1: {
    label: 'Windows Media Video 7',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  wmv2: {
    label: 'Windows Media Video 8',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  wmv3: {
    label: 'Windows Media Video 9',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  wmv3image: {
    label: 'Windows Media Video 9 Image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  wnv1: {
    label: 'Winnov WNV1',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  wrapped_avframe: {
    label: 'AVFrame to AVPacket passthrough',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  ws_vqa: {
    label:
      'Westwood Studios VQA (Vector Quantized Animation) video (decoders: vqavideo)',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  xan_wc3: {
    label: 'Wing Commander III / Xan',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  xan_wc4: {
    label: 'Wing Commander IV / Xxan',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  xbin: {
    label: 'eXtended BINary text',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: false,
  },
  xbm: {
    label: 'XBM (X BitMap) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  xface: {
    label: 'X-face image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  xpm: {
    label: 'XPM (X PixMap) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  xwd: {
    label: 'XWD (X Window Dump) image',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  y41p: {
    label: 'Uncompressed YUV 4:1:1 12-bit',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  ylc: {
    label: 'YUY2 Lossless Codec',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  yop: {
    label: 'Psygnosis YOP Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  yuv4: {
    label: 'Uncompressed packed 4:2:0',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  zerocodec: {
    label: 'ZeroCodec Lossless Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  zlib: {
    label: 'LCL (LossLess Codec Library) ZLIB',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  zmbv: {
    label: 'Zip Motion Blocks Video',
    type: 'video',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  '4gv': {
    label: '4GV (Fourth Generation Vocoder)',
    type: 'audio',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  '8svx_exp': {
    label: '8SVX exponential',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  '8svx_fib': {
    label: '8SVX fibonacci',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  aac: {
    label:
      'AAC (Advanced Audio Coding) (decoders: aac aac_fixed aac_at) (encoders: aac aac_at)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  aac_latm: {
    label: 'AAC LATM (Advanced Audio Coding LATM syntax)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  ac3: {
    label:
      'ATSC A/52A (AC-3) (decoders: ac3 ac3_fixed ac3_at) (encoders: ac3 ac3_fixed)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  ac4: {
    label: 'AC-4',
    type: 'audio',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  'acelp.kelvin': {
    label: 'Sipro ACELP.KELVIN',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_4xm: {
    label: 'ADPCM 4X Movie',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_adx: {
    label: 'SEGA CRI ADX ADPCM',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_afc: {
    label: 'ADPCM Nintendo Gamecube AFC',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_agm: {
    label: 'ADPCM AmuseGraphics Movie AGM',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_aica: {
    label: 'ADPCM Yamaha AICA',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_argo: {
    label: 'ADPCM Argonaut Games',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ct: {
    label: 'ADPCM Creative Technology',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_dtk: {
    label: 'ADPCM Nintendo Gamecube DTK',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ea: {
    label: 'ADPCM Electronic Arts',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ea_maxis_xa: {
    label: 'ADPCM Electronic Arts Maxis CDROM XA',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ea_r1: {
    label: 'ADPCM Electronic Arts R1',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ea_r2: {
    label: 'ADPCM Electronic Arts R2',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ea_r3: {
    label: 'ADPCM Electronic Arts R3',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ea_xas: {
    label: 'ADPCM Electronic Arts XAS',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_g722: {
    label: 'G.722 ADPCM (decoders: g722) (encoders: g722)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_g726: {
    label: 'G.726 ADPCM (decoders: g726) (encoders: g726)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_g726le: {
    label:
      'G.726 ADPCM little-endian (decoders: g726le) (encoders: g726le)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_acorn: {
    label: 'ADPCM IMA Acorn Replay',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_alp: {
    label: 'ADPCM IMA High Voltage Software ALP',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_amv: {
    label: 'ADPCM IMA AMV',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_apc: {
    label: 'ADPCM IMA CRYO APC',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_apm: {
    label: 'ADPCM IMA Ubisoft APM',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_cunning: {
    label: 'ADPCM IMA Cunning Developments',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_dat4: {
    label: 'ADPCM IMA Eurocom DAT4',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_dk3: {
    label: 'ADPCM IMA Duck DK3',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_dk4: {
    label: 'ADPCM IMA Duck DK4',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_ea_eacs: {
    label: 'ADPCM IMA Electronic Arts EACS',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_ea_sead: {
    label: 'ADPCM IMA Electronic Arts SEAD',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_iss: {
    label: 'ADPCM IMA Funcom ISS',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_moflex: {
    label: 'ADPCM IMA MobiClip MOFLEX',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_mtf: {
    label: "ADPCM IMA Capcom's MT Framework",
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_oki: {
    label: 'ADPCM IMA Dialogic OKI',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_qt: {
    label:
      'ADPCM IMA QuickTime (decoders: adpcm_ima_qt adpcm_ima_qt_at)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_rad: {
    label: 'ADPCM IMA Radical',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_smjpeg: {
    label: 'ADPCM IMA Loki SDL MJPEG',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_ssi: {
    label: 'ADPCM IMA Simon & Schuster Interactive',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_wav: {
    label: 'ADPCM IMA WAV',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ima_ws: {
    label: 'ADPCM IMA Westwood',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_ms: {
    label: 'ADPCM Microsoft',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_mtaf: {
    label: 'ADPCM MTAF',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_psx: {
    label: 'ADPCM Playstation',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_sbpro_2: {
    label: 'ADPCM Sound Blaster Pro 2-bit',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_sbpro_3: {
    label: 'ADPCM Sound Blaster Pro 2.6-bit',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_sbpro_4: {
    label: 'ADPCM Sound Blaster Pro 4-bit',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_swf: {
    label: 'ADPCM Shockwave Flash',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_thp: {
    label: 'ADPCM Nintendo THP',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_thp_le: {
    label: 'ADPCM Nintendo THP (Little-Endian)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_vima: {
    label: 'LucasArts VIMA audio',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_xa: {
    label: 'ADPCM CDROM XA',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_xmd: {
    label: 'ADPCM Konami XMD',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_yamaha: {
    label: 'ADPCM Yamaha',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  adpcm_zork: {
    label: 'ADPCM Zork',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  alac: {
    label:
      'ALAC (Apple Lossless Audio Codec) (decoders: alac alac_at) (encoders: alac alac_at)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  amr_nb: {
    label:
      'AMR-NB (Adaptive Multi-Rate NarrowBand) (decoders: amrnb amr_nb_at libopencore_amrnb) (encoders: libopencore_amrnb)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  amr_wb: {
    label:
      'AMR-WB (Adaptive Multi-Rate WideBand) (decoders: amrwb libopencore_amrwb)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  anull: {
    label: 'Null audio codec',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  apac: {
    label: "Marian's A-pac audio",
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  ape: {
    label: "Monkey's Audio",
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  aptx: {
    label: 'aptX (Audio Processing Technology for Bluetooth)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  aptx_hd: {
    label: 'aptX HD (Audio Processing Technology for Bluetooth)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  atrac1: {
    label: 'ATRAC1 (Adaptive TRansform Acoustic Coding)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  atrac3: {
    label: 'ATRAC3 (Adaptive TRansform Acoustic Coding 3)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  atrac3al: {
    label:
      'ATRAC3 AL (Adaptive TRansform Acoustic Coding 3 Advanced Lossless)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  atrac3p: {
    label:
      'ATRAC3+ (Adaptive TRansform Acoustic Coding 3+) (decoders: atrac3plus)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  atrac3pal: {
    label:
      'ATRAC3+ AL (Adaptive TRansform Acoustic Coding 3+ Advanced Lossless) (decoders: atrac3plusal)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  atrac9: {
    label: 'ATRAC9 (Adaptive TRansform Acoustic Coding 9)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  avc: {
    label: 'On2 Audio for Video Codec (decoders: on2avc)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  binkaudio_dct: {
    label: 'Bink Audio (DCT)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  binkaudio_rdft: {
    label: 'Bink Audio (RDFT)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  bmv_audio: {
    label: 'Discworld II BMV audio',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  bonk: {
    label: 'Bonk audio',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: true,
  },
  cbd2_dpcm: {
    label: 'DPCM Cuberoot-Delta-Exact',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  celt: {
    label: 'Constrained Energy Lapped Transform (CELT)',
    type: 'audio',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  codec2: {
    label: 'codec2 (very low bitrate speech codec)',
    type: 'audio',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  comfortnoise: {
    label: 'RFC 3389 Comfort Noise',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  cook: {
    label: 'Cook / Cooker / Gecko (RealAudio G2)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  derf_dpcm: {
    label: 'DPCM Xilam DERF',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  dfpwm: {
    label: 'DFPWM (Dynamic Filter Pulse Width Modulation)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  dolby_e: {
    label: 'Dolby E',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  dsd_lsbf: {
    label: 'DSD (Direct Stream Digital), least significant bit first',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  dsd_lsbf_planar: {
    label:
      'DSD (Direct Stream Digital), least significant bit first, planar',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  dsd_msbf: {
    label: 'DSD (Direct Stream Digital), most significant bit first',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  dsd_msbf_planar: {
    label:
      'DSD (Direct Stream Digital), most significant bit first, planar',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  dsicinaudio: {
    label: 'Delphine Software International CIN audio',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  dss_sp: {
    label: 'Digital Speech Standard - Standard Play mode (DSS SP)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  dst: {
    label: 'DST (Direct Stream Transfer)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  dts: {
    label:
      'DCA (DTS Coherent Acoustics) (decoders: dca) (encoders: dca)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: true,
  },
  dvaudio: {
    label: 'DV audio',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  eac3: {
    label: 'ATSC A/52B (AC-3, E-AC-3) (decoders: eac3 eac3_at)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  evrc: {
    label: 'EVRC (Enhanced Variable Rate Codec)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  fastaudio: {
    label: 'MobiClip FastAudio',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  flac: {
    label: 'FLAC (Free Lossless Audio Codec)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  ftr: {
    label: 'FTR Voice',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  g723_1: {
    label: 'G.723.1',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  g729: {
    label: 'G.729',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  gremlin_dpcm: {
    label: 'DPCM Gremlin',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  gsm: {
    label: 'GSM',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  gsm_ms: {
    label: 'GSM Microsoft variant (decoders: gsm_ms gsm_ms_at)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  hca: {
    label: 'CRI HCA',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  hcom: {
    label: 'HCOM Audio',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  iac: {
    label: 'IAC (Indeo Audio Coder)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  ilbc: {
    label:
      'iLBC (Internet Low Bitrate Codec) (decoders: ilbc ilbc_at) (encoders: ilbc_at)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  imc: {
    label: 'IMC (Intel Music Coder)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  interplay_dpcm: {
    label: 'DPCM Interplay',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  interplayacm: {
    label: 'Interplay ACM',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mace3: {
    label: 'MACE (Macintosh Audio Compression/Expansion) 3:1',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mace6: {
    label: 'MACE (Macintosh Audio Compression/Expansion) 6:1',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  metasound: {
    label: 'Voxware MetaSound',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  misc4: {
    label: 'Micronas SC-4 Audio',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mlp: {
    label: 'MLP (Meridian Lossless Packing)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  mp1: {
    label: 'MP1 (MPEG audio layer 1) (decoders: mp1 mp1float mp1_at)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mp2: {
    label:
      'MP2 (MPEG audio layer 2) (decoders: mp2 mp2float mp2_at) (encoders: mp2 mp2fixed)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mp3: {
    label:
      'MP3 (MPEG audio layer 3) (decoders: mp3float mp3 mp3_at) (encoders: libmp3lame)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mp3adu: {
    label:
      'ADU (Application Data Unit) MP3 (MPEG audio layer 3) (decoders: mp3adufloat mp3adu)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mp3on4: {
    label: 'MP3onMP4 (decoders: mp3on4float mp3on4)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  mp4als: {
    label: 'MPEG-4 Audio Lossless Coding (ALS) (decoders: als)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  mpegh_3d_audio: {
    label: 'MPEG-H 3D Audio',
    type: 'audio',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: true,
    lossless: false,
  },
  msnsiren: {
    label: 'MSN Siren',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  musepack7: {
    label: 'Musepack SV7 (decoders: mpc7)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  musepack8: {
    label: 'Musepack SV8 (decoders: mpc8)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  nellymoser: {
    label: 'Nellymoser Asao',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  opus: {
    label:
      'Opus (Opus Interactive Audio Codec) (decoders: opus libopus) (encoders: opus libopus)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  osq: {
    label: 'OSQ (Original Sound Quality)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  paf_audio: {
    label: 'Amazing Studio Packed Animation File Audio',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  pcm_alaw: {
    label:
      'PCM A-law / G.711 A-law (decoders: pcm_alaw pcm_alaw_at) (encoders: pcm_alaw pcm_alaw_at)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  pcm_bluray: {
    label: 'PCM signed 16|20|24-bit big-endian for Blu-ray media',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_dvd: {
    label: 'PCM signed 20|24-bit big-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_f16le: {
    label: 'PCM 16.8 floating point little-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_f24le: {
    label: 'PCM 24.0 floating point little-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_f32be: {
    label: 'PCM 32-bit floating point big-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_f32le: {
    label: 'PCM 32-bit floating point little-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_f64be: {
    label: 'PCM 64-bit floating point big-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_f64le: {
    label: 'PCM 64-bit floating point little-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_lxf: {
    label: 'PCM signed 20-bit little-endian planar',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_mulaw: {
    label:
      'PCM mu-law / G.711 mu-law (decoders: pcm_mulaw pcm_mulaw_at) (encoders: pcm_mulaw pcm_mulaw_at)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  pcm_s16be: {
    label: 'PCM signed 16-bit big-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s16be_planar: {
    label: 'PCM signed 16-bit big-endian planar',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s16le: {
    label: 'PCM signed 16-bit little-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s16le_planar: {
    label: 'PCM signed 16-bit little-endian planar',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s24be: {
    label: 'PCM signed 24-bit big-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s24daud: {
    label: 'PCM D-Cinema audio signed 24-bit',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s24le: {
    label: 'PCM signed 24-bit little-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s24le_planar: {
    label: 'PCM signed 24-bit little-endian planar',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s32be: {
    label: 'PCM signed 32-bit big-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s32le: {
    label: 'PCM signed 32-bit little-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s32le_planar: {
    label: 'PCM signed 32-bit little-endian planar',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s64be: {
    label: 'PCM signed 64-bit big-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s64le: {
    label: 'PCM signed 64-bit little-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s8: {
    label: 'PCM signed 8-bit',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_s8_planar: {
    label: 'PCM signed 8-bit planar',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_sga: {
    label: 'PCM SGA',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_u16be: {
    label: 'PCM unsigned 16-bit big-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_u16le: {
    label: 'PCM unsigned 16-bit little-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_u24be: {
    label: 'PCM unsigned 24-bit big-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_u24le: {
    label: 'PCM unsigned 24-bit little-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_u32be: {
    label: 'PCM unsigned 32-bit big-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_u32le: {
    label: 'PCM unsigned 32-bit little-endian',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_u8: {
    label: 'PCM unsigned 8-bit',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  pcm_vidc: {
    label: 'PCM Archimedes VIDC',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  qcelp: {
    label: 'QCELP / PureVoice',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  qdm2: {
    label: 'QDesign Music Codec 2 (decoders: qdm2 qdm2_at)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  qdmc: {
    label: 'QDesign Music (decoders: qdmc qdmc_at)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  ra_144: {
    label:
      'RealAudio 1.0 (14.4K) (decoders: real_144) (encoders: real_144)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  ra_288: {
    label: 'RealAudio 2.0 (28.8K) (decoders: real_288)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  ralf: {
    label: 'RealAudio Lossless',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  rka: {
    label: 'RKA (RK Audio)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: true,
  },
  roq_dpcm: {
    label: 'DPCM id RoQ',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  s302m: {
    label: 'SMPTE 302M',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  sbc: {
    label: 'SBC (low-complexity subband codec)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  sdx2_dpcm: {
    label: 'DPCM Squareroot-Delta-Exact',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  shorten: {
    label: 'Shorten',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  sipr: {
    label: 'RealAudio SIPR / ACELP.NET',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  siren: {
    label: 'Siren',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  smackaudio: {
    label: 'Smacker audio (decoders: smackaud)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  smv: {
    label: 'SMV (Selectable Mode Vocoder)',
    type: 'audio',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  sol_dpcm: {
    label: 'DPCM Sol',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  sonic: {
    label: 'Sonic',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: false,
  },
  sonicls: {
    label: 'Sonic lossless',
    type: 'audio',
    supportsDecoding: false,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: false,
  },
  speex: {
    label: 'Speex (decoders: speex libspeex) (encoders: libspeex)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  tak: {
    label: "TAK (Tom's lossless Audio Kompressor)",
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  truehd: {
    label: 'TrueHD',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: true,
  },
  truespeech: {
    label: 'DSP Group TrueSpeech',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  tta: {
    label: 'TTA (True Audio)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  twinvq: {
    label: 'VQF TwinVQ',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  vmdaudio: {
    label: 'Sierra VMD audio',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  vorbis: {
    label:
      'Vorbis (decoders: vorbis libvorbis) (encoders: vorbis libvorbis)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  wady_dpcm: {
    label: 'DPCM Marble WADY',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  wavarc: {
    label: 'Waveform Archiver',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  wavesynth: {
    label: 'Wave synthesis pseudo-codec',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: false,
  },
  wavpack: {
    label: 'WavPack',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: true,
  },
  westwood_snd1: {
    label: 'Westwood Audio (SND1) (decoders: ws_snd1)',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  wmalossless: {
    label: 'Windows Media Audio Lossless',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: false,
    lossless: true,
  },
  wmapro: {
    label: 'Windows Media Audio 9 Professional',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  wmav1: {
    label: 'Windows Media Audio 1',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  wmav2: {
    label: 'Windows Media Audio 2',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  wmavoice: {
    label: 'Windows Media Audio Voice',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  xan_dpcm: {
    label: 'DPCM Xan',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  xma1: {
    label: 'Xbox Media Audio 1',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  xma2: {
    label: 'Xbox Media Audio 2',
    type: 'audio',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: true,
    lossy: true,
    lossless: false,
  },
  bin_data: {
    label: 'binary data',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  dvd_nav_packet: {
    label: 'DVD Nav packet',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  epg: {
    label: 'Electronic Program Guide',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  klv: {
    label: 'SMPTE 336M Key-Length-Value (KLV) metadata',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  mpegts: {
    label: 'raw MPEG-TS stream',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  otf: {
    label: 'OpenType font',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  scte_35: {
    label: 'SCTE 35 Message Queue',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  smpte_2038: {
    label: 'SMPTE ST 2038 VANC in MPEG-2 TS',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  timed_id3: {
    label: 'timed ID3 metadata',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  ttf: {
    label: 'TrueType font',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  arib_caption: {
    label: 'ARIB STD-B24 caption (decoders: libaribb24)',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  ass: {
    label:
      'ASS (Advanced SSA) subtitle (decoders: ssa ass) (encoders: ssa ass)',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  dvb_subtitle: {
    label: 'DVB subtitles (decoders: dvbsub) (encoders: dvbsub)',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  dvb_teletext: {
    label: 'DVB teletext',
    type: 'subtitle',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  dvd_subtitle: {
    label: 'DVD subtitles (decoders: dvdsub) (encoders: dvdsub)',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  eia_608: {
    label: 'EIA-608 closed captions (decoders: cc_dec)',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  hdmv_pgs_subtitle: {
    label:
      'HDMV Presentation Graphic Stream subtitles (decoders: pgssub)',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  hdmv_text_subtitle: {
    label: 'HDMV Text subtitle',
    type: 'subtitle',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  jacosub: {
    label: 'JACOsub subtitle',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  microdvd: {
    label: 'MicroDVD subtitle',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  mov_text: {
    label: 'MOV text',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  mpl2: {
    label: 'MPL2 subtitle',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  pjs: {
    label: 'PJS (Phoenix Japanimation Society) subtitle',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  realtext: {
    label: 'RealText subtitle',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  sami: {
    label: 'SAMI subtitle',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  srt: {
    label: 'SubRip subtitle with embedded timing',
    type: 'subtitle',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  ssa: {
    label: 'SSA (SubStation Alpha) subtitle',
    type: 'subtitle',
    supportsDecoding: false,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  stl: {
    label: 'Spruce subtitle format',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  subrip: {
    label:
      'SubRip subtitle (decoders: srt subrip) (encoders: srt subrip)',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  subviewer: {
    label: 'SubViewer subtitle',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  subviewer1: {
    label: 'SubViewer v1 subtitle',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  text: {
    label: 'raw UTF-8 text',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  ttml: {
    label: 'Timed Text Markup Language',
    type: 'subtitle',
    supportsDecoding: false,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  vplayer: {
    label: 'VPlayer subtitle',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: false,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  webvtt: {
    label: 'WebVTT subtitle',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
  xsub: {
    label: 'XSUB',
    type: 'subtitle',
    supportsDecoding: true,
    supportsEncoding: true,
    intraFrameOnly: false,
    lossy: false,
    lossless: false,
  },
}

export const FFMPEG_DECODER_CONTENT_KEY: ReadonlyArray<FfmpegDecoderContentKey> =
  [
    '012v',
    '4xm',
    '8bps',
    'aasc',
    'agm',
    'aic',
    'alias_pix',
    'amv',
    'anm',
    'ansi',
    'apng',
    'arbc',
    'argo',
    'asv1',
    'asv2',
    'aura',
    'aura2',
    'libdav1d',
    'libaom-av1',
    'av1',
    'avrn',
    'avrp',
    'avs',
    'avui',
    'ayuv',
    'bethsoftvid',
    'bfi',
    'binkvideo',
    'bintext',
    'bitpacked',
    'bmp',
    'bmv_video',
    'brender_pix',
    'c93',
    'cavs',
    'cdgraphics',
    'cdtoons',
    'cdxl',
    'cfhd',
    'cinepak',
    'clearvideo',
    'cljr',
    'cllc',
    'eacmv',
    'cpia',
    'cri',
    'camstudio',
    'cyuv',
    'dds',
    'dfa',
    'dirac',
    'dnxhd',
    'dpx',
    'dsicinvideo',
    'dvvideo',
    'dxa',
    'dxtory',
    'dxv',
    'escape124',
    'escape130',
    'exr',
    'ffv1',
    'ffvhuff',
    'fic',
    'fits',
    'flashsv',
    'flashsv2',
    'flic',
    'flv',
    'fmvc',
    'fraps',
    'frwu',
    'g2m',
    'gdv',
    'gem',
    'gif',
    'h261',
    'h263',
    'h263i',
    'h263p',
    'h264',
    'hap',
    'hdr',
    'hevc',
    'hnm4video',
    'hq_hqa',
    'hqx',
    'huffyuv',
    'hymt',
    'idcinvideo',
    'idf',
    'iff',
    'imm4',
    'imm5',
    'indeo2',
    'indeo3',
    'indeo4',
    'indeo5',
    'interplayvideo',
    'ipu',
    'jpeg2000',
    'jpegls',
    'libjxl',
    'jv',
    'kgv1',
    'kmvc',
    'lagarith',
    'loco',
    'lscr',
    'm101',
    'eamad',
    'magicyuv',
    'mdec',
    'media100',
    'mimic',
    'mjpeg',
    'mjpegb',
    'mmvideo',
    'mobiclip',
    'motionpixels',
    'mpeg1video',
    'mpeg2video',
    'mpegvideo',
    'mpeg4',
    'msa1',
    'mscc',
    'msmpeg4v1',
    'msmpeg4v2',
    'msmpeg4',
    'msp2',
    'msrle',
    'mss1',
    'mss2',
    'msvideo1',
    'mszh',
    'mts2',
    'mv30',
    'mvc1',
    'mvc2',
    'mvdv',
    'mvha',
    'mwsc',
    'mxpeg',
    'notchlc',
    'nuv',
    'paf_video',
    'pam',
    'pbm',
    'pcx',
    'pdv',
    'pfm',
    'pgm',
    'pgmyuv',
    'pgx',
    'phm',
    'photocd',
    'pictor',
    'pixlet',
    'png',
    'ppm',
    'prores',
    'prosumer',
    'psd',
    'ptx',
    'qdraw',
    'qoi',
    'qpeg',
    'qtrle',
    'r10k',
    'r210',
    'rasc',
    'rawvideo',
    'rl2',
    'roqvideo',
    'rpza',
    'rscc',
    'rtv1',
    'rv10',
    'rv20',
    'rv30',
    'rv40',
    'sanm',
    'scpr',
    'screenpresso',
    'sga',
    'sgi',
    'sgirle',
    'sheervideo',
    'simbiosis_imx',
    'smackvid',
    'smc',
    'smvjpeg',
    'snow',
    'sp5x',
    'speedhq',
    'srgc',
    'sunrast',
    'svq1',
    'svq3',
    'targa',
    'targa_y216',
    'tdsc',
    'eatgq',
    'eatgv',
    'theora',
    'thp',
    'tiertexseqvideo',
    'tiff',
    'tmv',
    'eatqi',
    'truemotion1',
    'truemotion2',
    'truemotion2rt',
    'camtasia',
    'tscc2',
    'txd',
    'ultimotion',
    'utvideo',
    'v210',
    'v210x',
    'v308',
    'v408',
    'v410',
    'vb',
    'vble',
    'vbn',
    'vc1',
    'vc1image',
    'vcr1',
    'xl',
    'vmdvideo',
    'vmix',
    'vmnc',
    'vnull',
    'vp3',
    'vp4',
    'vp5',
    'vp6',
    'vp6a',
    'vp6f',
    'vp7',
    'vp8',
    'libvpx',
    'vp9',
    'libvpx-vp9',
    'vqc',
    'wbmp',
    'wcmv',
    'webp',
    'wmv1',
    'wmv2',
    'wmv3',
    'wmv3image',
    'wnv1',
    'wrapped_avframe',
    'vqavideo',
    'xan_wc3',
    'xan_wc4',
    'xbin',
    'xbm',
    'xface',
    'xpm',
    'xwd',
    'y41p',
    'ylc',
    'yop',
    'yuv4',
    'zerocodec',
    'zlib',
    'zmbv',
    '8svx_exp',
    '8svx_fib',
    'aac',
    'aac_fixed',
    'aac_at',
    'aac_latm',
    'ac3',
    'ac3_fixed',
    'ac3_at',
    'acelp.kelvin',
    'adpcm_4xm',
    'adpcm_adx',
    'adpcm_afc',
    'adpcm_agm',
    'adpcm_aica',
    'adpcm_argo',
    'adpcm_ct',
    'adpcm_dtk',
    'adpcm_ea',
    'adpcm_ea_maxis_xa',
    'adpcm_ea_r1',
    'adpcm_ea_r2',
    'adpcm_ea_r3',
    'adpcm_ea_xas',
    'g722',
    'g726',
    'g726le',
    'adpcm_ima_acorn',
    'adpcm_ima_alp',
    'adpcm_ima_amv',
    'adpcm_ima_apc',
    'adpcm_ima_apm',
    'adpcm_ima_cunning',
    'adpcm_ima_dat4',
    'adpcm_ima_dk3',
    'adpcm_ima_dk4',
    'adpcm_ima_ea_eacs',
    'adpcm_ima_ea_sead',
    'adpcm_ima_iss',
    'adpcm_ima_moflex',
    'adpcm_ima_mtf',
    'adpcm_ima_oki',
    'adpcm_ima_qt',
    'adpcm_ima_qt_at',
    'adpcm_ima_rad',
    'adpcm_ima_smjpeg',
    'adpcm_ima_ssi',
    'adpcm_ima_wav',
    'adpcm_ima_ws',
    'adpcm_ms',
    'adpcm_mtaf',
    'adpcm_psx',
    'adpcm_sbpro_2',
    'adpcm_sbpro_3',
    'adpcm_sbpro_4',
    'adpcm_swf',
    'adpcm_thp',
    'adpcm_thp_le',
    'adpcm_vima',
    'adpcm_xa',
    'adpcm_xmd',
    'adpcm_yamaha',
    'adpcm_zork',
    'alac',
    'alac_at',
    'amrnb',
    'amr_nb_at',
    'libopencore_amrnb',
    'amrwb',
    'libopencore_amrwb',
    'anull',
    'apac',
    'ape',
    'aptx',
    'aptx_hd',
    'atrac1',
    'atrac3',
    'atrac3al',
    'atrac3plus',
    'atrac3plusal',
    'atrac9',
    'on2avc',
    'binkaudio_dct',
    'binkaudio_rdft',
    'bmv_audio',
    'bonk',
    'cbd2_dpcm',
    'comfortnoise',
    'cook',
    'derf_dpcm',
    'dfpwm',
    'dolby_e',
    'dsd_lsbf',
    'dsd_lsbf_planar',
    'dsd_msbf',
    'dsd_msbf_planar',
    'dsicinaudio',
    'dss_sp',
    'dst',
    'dca',
    'dvaudio',
    'eac3',
    'eac3_at',
    'evrc',
    'fastaudio',
    'flac',
    'ftr',
    'g723_1',
    'g729',
    'gremlin_dpcm',
    'gsm',
    'gsm_ms',
    'gsm_ms_at',
    'hca',
    'hcom',
    'iac',
    'ilbc',
    'ilbc_at',
    'imc',
    'interplay_dpcm',
    'interplayacm',
    'mace3',
    'mace6',
    'metasound',
    'misc4',
    'mlp',
    'mp1',
    'mp1float',
    'mp1_at',
    'mp2',
    'mp2float',
    'mp2_at',
    'mp3float',
    'mp3',
    'mp3_at',
    'mp3adufloat',
    'mp3adu',
    'mp3on4float',
    'mp3on4',
    'als',
    'msnsiren',
    'mpc7',
    'mpc8',
    'nellymoser',
    'opus',
    'libopus',
    'osq',
    'paf_audio',
    'pcm_alaw',
    'pcm_alaw_at',
    'pcm_bluray',
    'pcm_dvd',
    'pcm_f16le',
    'pcm_f24le',
    'pcm_f32be',
    'pcm_f32le',
    'pcm_f64be',
    'pcm_f64le',
    'pcm_lxf',
    'pcm_mulaw',
    'pcm_mulaw_at',
    'pcm_s16be',
    'pcm_s16be_planar',
    'pcm_s16le',
    'pcm_s16le_planar',
    'pcm_s24be',
    'pcm_s24daud',
    'pcm_s24le',
    'pcm_s24le_planar',
    'pcm_s32be',
    'pcm_s32le',
    'pcm_s32le_planar',
    'pcm_s64be',
    'pcm_s64le',
    'pcm_s8',
    'pcm_s8_planar',
    'pcm_sga',
    'pcm_u16be',
    'pcm_u16le',
    'pcm_u24be',
    'pcm_u24le',
    'pcm_u32be',
    'pcm_u32le',
    'pcm_u8',
    'pcm_vidc',
    'qcelp',
    'qdm2',
    'qdm2_at',
    'qdmc',
    'qdmc_at',
    'real_144',
    'real_288',
    'ralf',
    'rka',
    'roq_dpcm',
    's302m',
    'sbc',
    'sdx2_dpcm',
    'shorten',
    'sipr',
    'siren',
    'smackaud',
    'sol_dpcm',
    'sonic',
    'speex',
    'libspeex',
    'tak',
    'truehd',
    'truespeech',
    'tta',
    'twinvq',
    'vmdaudio',
    'vorbis',
    'libvorbis',
    'wady_dpcm',
    'wavarc',
    'wavesynth',
    'wavpack',
    'ws_snd1',
    'wmalossless',
    'wmapro',
    'wmav1',
    'wmav2',
    'wmavoice',
    'xan_dpcm',
    'xma1',
    'xma2',
    'libaribb24',
    'ssa',
    'ass',
    'dvbsub',
    'dvdsub',
    'cc_dec',
    'pgssub',
    'jacosub',
    'microdvd',
    'mov_text',
    'mpl2',
    'pjs',
    'realtext',
    'sami',
    'stl',
    'srt',
    'subrip',
    'subviewer',
    'subviewer1',
    'text',
    'vplayer',
    'webvtt',
    'xsub',
  ] as const

export const FFMPEG_DECODER_CONTENT: FfmpegDecoderContent = {
  '012v': {
    label: 'Uncompressed 4:2:2 10-bit',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  '4xm': {
    label: '4X Movie',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  '8bps': {
    label: 'QuickTime 8BPS video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aasc: {
    label: 'Autodesk RLE',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  agm: {
    label: 'Amuse Graphics Movie',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aic: {
    label: 'Apple Intermediate Codec',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  alias_pix: {
    label: 'Alias/Wavefront PIX image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  amv: {
    label: 'AMV Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  anm: {
    label: 'Deluxe Paint Animation',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ansi: {
    label: 'ASCII/ANSI art',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  apng: {
    label: 'APNG (Animated Portable Network Graphics) image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  arbc: {
    label: "Gryphon's Anim Compressor",
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  argo: {
    label: 'Argonaut Games Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  asv1: {
    label: 'ASUS V1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  asv2: {
    label: 'ASUS V2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aura: {
    label: 'Auravision AURA',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aura2: {
    label: 'Auravision Aura 2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libdav1d: {
    label: 'dav1d AV1 decoder by VideoLAN (codec av1)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  'libaom-av1': {
    label: 'libaom AV1 (codec av1)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  av1: {
    label: 'Alliance for Open Media AV1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  avrn: {
    label: 'Avid AVI Codec',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  avrp: {
    label: 'Avid 1:1 10-bit RGB Packer',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  avs: {
    label: 'AVS (Audio Video Standard) video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  avui: {
    label: 'Avid Meridien Uncompressed',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ayuv: {
    label: 'Uncompressed packed MS 4:4:4:4',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  bethsoftvid: {
    label: 'Bethesda VID video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  bfi: {
    label: 'Brute Force & Ignorance',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  binkvideo: {
    label: 'Bink video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  bintext: {
    label: 'Binary text',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  bitpacked: {
    label: 'Bitpacked',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  bmp: {
    label: 'BMP (Windows and OS/2 bitmap)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  bmv_video: {
    label: 'Discworld II BMV video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  brender_pix: {
    label: 'BRender PIX image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  c93: {
    label: 'Interplay C93',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cavs: {
    label:
      'Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cdgraphics: {
    label: 'CD Graphics video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cdtoons: {
    label: 'CDToons video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cdxl: {
    label: 'Commodore CDXL video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cfhd: {
    label: 'GoPro CineForm HD',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cinepak: {
    label: 'Cinepak',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  clearvideo: {
    label: 'Iterated Systems ClearVideo',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cljr: {
    label: 'Cirrus Logic AccuPak',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cllc: {
    label: 'Canopus Lossless Codec',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  eacmv: {
    label: 'Electronic Arts CMV video (codec cmv)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cpia: {
    label: 'CPiA video format',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cri: {
    label: 'Cintel RAW',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  camstudio: {
    label: 'CamStudio (codec cscd)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cyuv: {
    label: 'Creative YUV (CYUV)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dds: {
    label: 'DirectDraw Surface image decoder',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dfa: {
    label: 'Chronomaster DFA',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dirac: {
    label: 'BBC Dirac VC-2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dnxhd: {
    label: 'VC3/DNxHD',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dpx: {
    label: 'DPX (Digital Picture Exchange) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dsicinvideo: {
    label: 'Delphine Software International CIN video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dvvideo: {
    label: 'DV (Digital Video)',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dxa: {
    label: 'Feeble Files/ScummVM DXA',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dxtory: {
    label: 'Dxtory',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dxv: {
    label: 'Resolume DXV',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  escape124: {
    label: 'Escape 124',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  escape130: {
    label: 'Escape 130',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  exr: {
    label: 'OpenEXR image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ffv1: {
    label: 'FFmpeg video codec #1',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ffvhuff: {
    label: 'Huffyuv FFmpeg variant',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  fic: {
    label: 'Mirillis FIC',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  fits: {
    label: 'Flexible Image Transport System',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  flashsv: {
    label: 'Flash Screen Video v1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  flashsv2: {
    label: 'Flash Screen Video v2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  flic: {
    label: 'Autodesk Animator Flic video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  flv: {
    label:
      'FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (codec flv1)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  fmvc: {
    label: 'FM Screen Capture Codec',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  fraps: {
    label: 'Fraps',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  frwu: {
    label: 'Forward Uncompressed',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  g2m: {
    label: 'Go2Meeting',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  gdv: {
    label: 'Gremlin Digital Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  gem: {
    label: 'GEM Raster image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  gif: {
    label: 'GIF (Graphics Interchange Format)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  h261: {
    label: 'H.261',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  h263: {
    label: 'H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  h263i: {
    label: 'Intel H.263',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  h263p: {
    label: 'H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  h264: {
    label: 'H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  hap: {
    label: 'Vidvox Hap',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  hdr: {
    label: 'HDR (Radiance RGBE format) image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  hevc: {
    label: 'HEVC (High Efficiency Video Coding)',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  hnm4video: {
    label: 'HNM 4 video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  hq_hqa: {
    label: 'Canopus HQ/HQA',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  hqx: {
    label: 'Canopus HQX',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  huffyuv: {
    label: 'Huffyuv / HuffYUV',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  hymt: {
    label: 'HuffYUV MT',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  idcinvideo: {
    label: 'id Quake II CIN video (codec idcin)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  idf: {
    label: 'iCEDraw text',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  iff: {
    label: 'IFF ACBM/ANIM/DEEP/ILBM/PBM/RGB8/RGBN (codec iff_ilbm)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  imm4: {
    label: 'Infinity IMM4',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  imm5: {
    label: 'Infinity IMM5',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  indeo2: {
    label: 'Intel Indeo 2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  indeo3: {
    label: 'Intel Indeo 3',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  indeo4: {
    label: 'Intel Indeo Video Interactive 4',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  indeo5: {
    label: 'Intel Indeo Video Interactive 5',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  interplayvideo: {
    label: 'Interplay MVE video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ipu: {
    label: 'IPU Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  jpeg2000: {
    label: 'JPEG 2000',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  jpegls: {
    label: 'JPEG-LS',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libjxl: {
    label: 'libjxl JPEG XL (codec jpegxl)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  jv: {
    label: 'Bitmap Brothers JV video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  kgv1: {
    label: 'Kega Game Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  kmvc: {
    label: "Karl Morton's video codec",
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  lagarith: {
    label: 'Lagarith lossless',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  loco: {
    label: 'LOCO',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  lscr: {
    label: 'LEAD Screen Capture',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  m101: {
    label: 'Matrox Uncompressed SD',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  eamad: {
    label: 'Electronic Arts Madcow Video (codec mad)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  magicyuv: {
    label: 'MagicYUV video',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mdec: {
    label: 'Sony PlayStation MDEC (Motion DECoder)',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  media100: {
    label: 'Media 100',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mimic: {
    label: 'Mimic',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mjpeg: {
    label: 'MJPEG (Motion JPEG)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mjpegb: {
    label: 'Apple MJPEG-B',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mmvideo: {
    label: 'American Laser Games MM Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mobiclip: {
    label: 'MobiClip Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  motionpixels: {
    label: 'Motion Pixels video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mpeg1video: {
    label: 'MPEG-1 video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  mpeg2video: {
    label: 'MPEG-2 video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  mpegvideo: {
    label: 'MPEG-1 video (codec mpeg2video)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  mpeg4: {
    label: 'MPEG-4 part 2',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  msa1: {
    label: 'MS ATC Screen',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mscc: {
    label: 'Mandsoft Screen Capture Codec',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  msmpeg4v1: {
    label: 'MPEG-4 part 2 Microsoft variant version 1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  msmpeg4v2: {
    label: 'MPEG-4 part 2 Microsoft variant version 2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  msmpeg4: {
    label:
      'MPEG-4 part 2 Microsoft variant version 3 (codec msmpeg4v3)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  msp2: {
    label: 'Microsoft Paint (MSP) version 2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  msrle: {
    label: 'Microsoft RLE',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mss1: {
    label: 'MS Screen 1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mss2: {
    label: 'MS Windows Media Video V9 Screen',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  msvideo1: {
    label: 'Microsoft Video 1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mszh: {
    label: 'LCL (LossLess Codec Library) MSZH',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mts2: {
    label: 'MS Expression Encoder Screen',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mv30: {
    label: 'MidiVid 3.0',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mvc1: {
    label: 'Silicon Graphics Motion Video Compressor 1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mvc2: {
    label: 'Silicon Graphics Motion Video Compressor 2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mvdv: {
    label: 'MidiVid VQ',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mvha: {
    label: 'MidiVid Archive Codec',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mwsc: {
    label: 'MatchWare Screen Capture Codec',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mxpeg: {
    label: 'Mobotix MxPEG video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  notchlc: {
    label: 'NotchLC',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  nuv: {
    label: 'NuppelVideo/RTJPEG',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  paf_video: {
    label: 'Amazing Studio Packed Animation File Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pam: {
    label: 'PAM (Portable AnyMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pbm: {
    label: 'PBM (Portable BitMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcx: {
    label: 'PC Paintbrush PCX image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pdv: {
    label: 'PDV (PlayDate Video)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pfm: {
    label: 'PFM (Portable FloatMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pgm: {
    label: 'PGM (Portable GrayMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pgmyuv: {
    label: 'PGMYUV (Portable GrayMap YUV) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pgx: {
    label: 'PGX (JPEG2000 Test Format)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  phm: {
    label: 'PHM (Portable HalfFloatMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  photocd: {
    label: 'Kodak Photo CD',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pictor: {
    label: 'Pictor/PC Paint',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pixlet: {
    label: 'Apple Pixlet',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  png: {
    label: 'PNG (Portable Network Graphics) image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ppm: {
    label: 'PPM (Portable PixelMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  prores: {
    label: 'Apple ProRes (iCodec Pro)',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  prosumer: {
    label: 'Brooktree ProSumer Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  psd: {
    label: 'Photoshop PSD file',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ptx: {
    label: 'V.Flash PTX image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  qdraw: {
    label: 'Apple QuickDraw',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  qoi: {
    label: 'QOI (Quite OK Image format) image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  qpeg: {
    label: 'Q-team QPEG',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  qtrle: {
    label: 'QuickTime Animation (RLE) video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  r10k: {
    label: 'AJA Kona 10-bit RGB Codec',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  r210: {
    label: 'Uncompressed RGB 10-bit',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rasc: {
    label: 'RemotelyAnywhere Screen Capture',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rawvideo: {
    label: 'raw video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  rl2: {
    label: 'RL2 video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  roqvideo: {
    label: 'id RoQ video (codec roq)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rpza: {
    label: 'QuickTime video (RPZA)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rscc: {
    label: 'innoHeim/Rsupport Screen Capture Codec',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rtv1: {
    label: 'RTV1 (RivaTuner Video)',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rv10: {
    label: 'RealVideo 1.0',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rv20: {
    label: 'RealVideo 2.0',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rv30: {
    label: 'RealVideo 3.0',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rv40: {
    label: 'RealVideo 4.0',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sanm: {
    label: 'LucasArts SANM/Smush video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  scpr: {
    label: 'ScreenPressor',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  screenpresso: {
    label: 'Screenpresso',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sga: {
    label: 'Digital Pictures SGA Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sgi: {
    label: 'SGI image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sgirle: {
    label: 'Silicon Graphics RLE 8-bit video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sheervideo: {
    label: 'BitJazz SheerVideo',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  simbiosis_imx: {
    label: 'Simbiosis Interactive IMX Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  smackvid: {
    label: 'Smacker video (codec smackvideo)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  smc: {
    label: 'QuickTime Graphics (SMC)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  smvjpeg: {
    label: 'SMV JPEG',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  snow: {
    label: 'Snow',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sp5x: {
    label: 'Sunplus JPEG (SP5X)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  speedhq: {
    label: 'NewTek SpeedHQ',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  srgc: {
    label: 'Screen Recorder Gold Codec',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sunrast: {
    label: 'Sun Rasterfile image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  svq1: {
    label: 'Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  svq3: {
    label: 'Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  targa: {
    label: 'Truevision Targa image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  targa_y216: {
    label: 'Pinnacle TARGA CineWave YUV16',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  tdsc: {
    label: 'TDSC',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  eatgq: {
    label: 'Electronic Arts TGQ video (codec tgq)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  eatgv: {
    label: 'Electronic Arts TGV video (codec tgv)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  theora: {
    label: 'Theora',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  thp: {
    label: 'Nintendo Gamecube THP video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  tiertexseqvideo: {
    label: 'Tiertex Limited SEQ video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  tiff: {
    label: 'TIFF image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  tmv: {
    label: '8088flex TMV',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  eatqi: {
    label: 'Electronic Arts TQI Video (codec tqi)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  truemotion1: {
    label: 'Duck TrueMotion 1.0',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  truemotion2: {
    label: 'Duck TrueMotion 2.0',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  truemotion2rt: {
    label: 'Duck TrueMotion 2.0 Real Time',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  camtasia: {
    label: 'TechSmith Screen Capture Codec (codec tscc)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  tscc2: {
    label: 'TechSmith Screen Codec 2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  txd: {
    label: 'Renderware TXD (TeXture Dictionary) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ultimotion: {
    label: 'IBM UltiMotion (codec ulti)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  utvideo: {
    label: 'Ut Video',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  v210: {
    label: 'Uncompressed 4:2:2 10-bit',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  v210x: {
    label: 'Uncompressed 4:2:2 10-bit',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  v308: {
    label: 'Uncompressed packed 4:4:4',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  v408: {
    label: 'Uncompressed packed QT 4:4:4:4',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  v410: {
    label: 'Uncompressed 4:4:4 10-bit',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vb: {
    label: 'Beam Software VB',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vble: {
    label: 'VBLE Lossless Codec',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vbn: {
    label: 'Vizrt Binary Image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vc1: {
    label: 'SMPTE VC-1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vc1image: {
    label: 'Windows Media Video 9 Image v2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vcr1: {
    label: 'ATI VCR1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xl: {
    label: 'Miro VideoXL (codec vixl)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vmdvideo: {
    label: 'Sierra VMD video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vmix: {
    label: 'vMix Video',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vmnc: {
    label: 'VMware Screen Codec / VMware Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vnull: {
    label: 'null video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vp3: {
    label: 'On2 VP3',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  vp4: {
    label: 'On2 VP4',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  vp5: {
    label: 'On2 VP5',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vp6: {
    label: 'On2 VP6',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vp6a: {
    label: 'On2 VP6 (Flash version, with alpha channel)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vp6f: {
    label: 'On2 VP6 (Flash version)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vp7: {
    label: 'On2 VP7',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vp8: {
    label: 'On2 VP8',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libvpx: {
    label: 'libvpx VP8 (codec vp8)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vp9: {
    label: 'Google VP9',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  'libvpx-vp9': {
    label: 'libvpx VP9 (codec vp9)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  vqc: {
    label: 'ViewQuest VQC',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wbmp: {
    label: 'WBMP (Wireless Application Protocol Bitmap) image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wcmv: {
    label: 'WinCAM Motion Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  webp: {
    label: 'WebP image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wmv1: {
    label: 'Windows Media Video 7',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  wmv2: {
    label: 'Windows Media Video 8',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: true,
    supportsDirectRenderingMethod1: true,
  },
  wmv3: {
    label: 'Windows Media Video 9',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wmv3image: {
    label: 'Windows Media Video 9 Image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wnv1: {
    label: 'Winnov WNV1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wrapped_avframe: {
    label: 'AVPacket to AVFrame passthrough',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  vqavideo: {
    label:
      'Westwood Studios VQA (Vector Quantized Animation) video (codec ws_vqa)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xan_wc3: {
    label: 'Wing Commander III / Xan',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xan_wc4: {
    label: 'Wing Commander IV / Xxan',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xbin: {
    label: 'eXtended BINary text',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xbm: {
    label: 'XBM (X BitMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xface: {
    label: 'X-face image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xpm: {
    label: 'XPM (X PixMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xwd: {
    label: 'XWD (X Window Dump) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  y41p: {
    label: 'Uncompressed YUV 4:1:1 12-bit',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ylc: {
    label: 'YUY2 Lossless Codec',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  yop: {
    label: 'Psygnosis YOP Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  yuv4: {
    label: 'Uncompressed packed 4:2:0',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  zerocodec: {
    label: 'ZeroCodec Lossless Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  zlib: {
    label: 'LCL (LossLess Codec Library) ZLIB',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  zmbv: {
    label: 'Zip Motion Blocks Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  '8svx_exp': {
    label: '8SVX exponential',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  '8svx_fib': {
    label: '8SVX fibonacci',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aac: {
    label: 'AAC (Advanced Audio Coding)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aac_fixed: {
    label: 'AAC (Advanced Audio Coding) (codec aac)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aac_at: {
    label: 'aac (AudioToolbox) (codec aac)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aac_latm: {
    label: 'AAC LATM (Advanced Audio Coding LATM syntax)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ac3: {
    label: 'ATSC A/52A (AC-3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ac3_fixed: {
    label: 'ATSC A/52A (AC-3) (codec ac3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ac3_at: {
    label: 'ac3 (AudioToolbox) (codec ac3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  'acelp.kelvin': {
    label: 'Sipro ACELP.KELVIN',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_4xm: {
    label: 'ADPCM 4X Movie',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_adx: {
    label: 'SEGA CRI ADX ADPCM',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_afc: {
    label: 'ADPCM Nintendo Gamecube AFC',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_agm: {
    label: 'ADPCM AmuseGraphics Movie',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_aica: {
    label: 'ADPCM Yamaha AICA',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_argo: {
    label: 'ADPCM Argonaut Games',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ct: {
    label: 'ADPCM Creative Technology',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_dtk: {
    label: 'ADPCM Nintendo Gamecube DTK',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ea: {
    label: 'ADPCM Electronic Arts',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ea_maxis_xa: {
    label: 'ADPCM Electronic Arts Maxis CDROM XA',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ea_r1: {
    label: 'ADPCM Electronic Arts R1',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ea_r2: {
    label: 'ADPCM Electronic Arts R2',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ea_r3: {
    label: 'ADPCM Electronic Arts R3',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ea_xas: {
    label: 'ADPCM Electronic Arts XAS',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  g722: {
    label: 'G.722 ADPCM (codec adpcm_g722)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  g726: {
    label: 'G.726 ADPCM (codec adpcm_g726)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  g726le: {
    label: 'G.726 ADPCM little-endian (codec adpcm_g726le)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_acorn: {
    label: 'ADPCM IMA Acorn Replay',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_alp: {
    label: 'ADPCM IMA High Voltage Software ALP',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_amv: {
    label: 'ADPCM IMA AMV',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_apc: {
    label: 'ADPCM IMA CRYO APC',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_apm: {
    label: 'ADPCM IMA Ubisoft APM',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_cunning: {
    label: 'ADPCM IMA Cunning Developments',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_dat4: {
    label: 'ADPCM IMA Eurocom DAT4',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_dk3: {
    label: 'ADPCM IMA Duck DK3',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_dk4: {
    label: 'ADPCM IMA Duck DK4',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_ea_eacs: {
    label: 'ADPCM IMA Electronic Arts EACS',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_ea_sead: {
    label: 'ADPCM IMA Electronic Arts SEAD',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_iss: {
    label: 'ADPCM IMA Funcom ISS',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_moflex: {
    label: 'ADPCM IMA MobiClip MOFLEX',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_mtf: {
    label: "ADPCM IMA Capcom's MT Framework",
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_oki: {
    label: 'ADPCM IMA Dialogic OKI',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_qt: {
    label: 'ADPCM IMA QuickTime',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_qt_at: {
    label: 'adpcm_ima_qt (AudioToolbox) (codec adpcm_ima_qt)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_rad: {
    label: 'ADPCM IMA Radical',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_smjpeg: {
    label: 'ADPCM IMA Loki SDL MJPEG',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_ssi: {
    label: 'ADPCM IMA Simon & Schuster Interactive',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_wav: {
    label: 'ADPCM IMA WAV',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_ws: {
    label: 'ADPCM IMA Westwood',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ms: {
    label: 'ADPCM Microsoft',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_mtaf: {
    label: 'ADPCM MTAF',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_psx: {
    label: 'ADPCM Playstation',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_sbpro_2: {
    label: 'ADPCM Sound Blaster Pro 2-bit',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_sbpro_3: {
    label: 'ADPCM Sound Blaster Pro 2.6-bit',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_sbpro_4: {
    label: 'ADPCM Sound Blaster Pro 4-bit',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_swf: {
    label: 'ADPCM Shockwave Flash',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_thp: {
    label: 'ADPCM Nintendo THP',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_thp_le: {
    label: 'ADPCM Nintendo THP (little-endian)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_vima: {
    label: 'LucasArts VIMA audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_xa: {
    label: 'ADPCM CDROM XA',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_xmd: {
    label: 'ADPCM Konami XMD',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_yamaha: {
    label: 'ADPCM Yamaha',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_zork: {
    label: 'ADPCM Zork',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  alac: {
    label: 'ALAC (Apple Lossless Audio Codec)',
    type: 'audio',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  alac_at: {
    label: 'alac (AudioToolbox) (codec alac)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  amrnb: {
    label: 'AMR-NB (Adaptive Multi-Rate NarrowBand) (codec amr_nb)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  amr_nb_at: {
    label: 'amr_nb (AudioToolbox) (codec amr_nb)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libopencore_amrnb: {
    label:
      'OpenCORE AMR-NB (Adaptive Multi-Rate Narrow-Band) (codec amr_nb)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  amrwb: {
    label: 'AMR-WB (Adaptive Multi-Rate WideBand) (codec amr_wb)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libopencore_amrwb: {
    label:
      'OpenCORE AMR-WB (Adaptive Multi-Rate Wide-Band) (codec amr_wb)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  anull: {
    label: 'null audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  apac: {
    label: "Marian's A-pac audio",
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ape: {
    label: "Monkey's Audio",
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aptx: {
    label: 'aptX (Audio Processing Technology for Bluetooth)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aptx_hd: {
    label: 'aptX HD (Audio Processing Technology for Bluetooth)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  atrac1: {
    label: 'ATRAC1 (Adaptive TRansform Acoustic Coding)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  atrac3: {
    label: 'ATRAC3 (Adaptive TRansform Acoustic Coding 3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  atrac3al: {
    label:
      'ATRAC3 AL (Adaptive TRansform Acoustic Coding 3 Advanced Lossless)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  atrac3plus: {
    label:
      'ATRAC3+ (Adaptive TRansform Acoustic Coding 3+) (codec atrac3p)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  atrac3plusal: {
    label:
      'ATRAC3+ AL (Adaptive TRansform Acoustic Coding 3+ Advanced Lossless) (codec atrac3pal)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  atrac9: {
    label: 'ATRAC9 (Adaptive TRansform Acoustic Coding 9)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  on2avc: {
    label: 'On2 Audio for Video Codec (codec avc)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  binkaudio_dct: {
    label: 'Bink Audio (DCT)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  binkaudio_rdft: {
    label: 'Bink Audio (RDFT)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  bmv_audio: {
    label: 'Discworld II BMV audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  bonk: {
    label: 'Bonk audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cbd2_dpcm: {
    label: 'DPCM Cuberoot-Delta-Exact',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  comfortnoise: {
    label: 'RFC 3389 comfort noise generator',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cook: {
    label: 'Cook / Cooker / Gecko (RealAudio G2)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  derf_dpcm: {
    label: 'DPCM Xilam DERF',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dfpwm: {
    label: 'DFPWM1a audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dolby_e: {
    label: 'Dolby E',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dsd_lsbf: {
    label: 'DSD (Direct Stream Digital), least significant bit first',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dsd_lsbf_planar: {
    label:
      'DSD (Direct Stream Digital), least significant bit first, planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dsd_msbf: {
    label: 'DSD (Direct Stream Digital), most significant bit first',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dsd_msbf_planar: {
    label:
      'DSD (Direct Stream Digital), most significant bit first, planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dsicinaudio: {
    label: 'Delphine Software International CIN audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dss_sp: {
    label: 'Digital Speech Standard - Standard Play mode (DSS SP)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dst: {
    label: 'DST (Digital Stream Transfer)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dca: {
    label: 'DCA (DTS Coherent Acoustics) (codec dts)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dvaudio: {
    label: 'Ulead DV Audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  eac3: {
    label: 'ATSC A/52B (AC-3, E-AC-3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  eac3_at: {
    label: 'eac3 (AudioToolbox) (codec eac3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  evrc: {
    label: 'EVRC (Enhanced Variable Rate Codec)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  fastaudio: {
    label: 'MobiClip FastAudio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  flac: {
    label: 'FLAC (Free Lossless Audio Codec)',
    type: 'audio',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ftr: {
    label: 'FTR Voice',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  g723_1: {
    label: 'G.723.1',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  g729: {
    label: 'G.729',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  gremlin_dpcm: {
    label: 'DPCM Gremlin',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  gsm: {
    label: 'GSM',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  gsm_ms: {
    label: 'GSM Microsoft variant',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  gsm_ms_at: {
    label: 'gsm_ms (AudioToolbox) (codec gsm_ms)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  hca: {
    label: 'CRI HCA',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  hcom: {
    label: 'HCOM Audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  iac: {
    label: 'IAC (Indeo Audio Coder)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ilbc: {
    label: 'iLBC (Internet Low Bitrate Codec)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ilbc_at: {
    label: 'ilbc (AudioToolbox) (codec ilbc)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  imc: {
    label: 'IMC (Intel Music Coder)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  interplay_dpcm: {
    label: 'DPCM Interplay',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  interplayacm: {
    label: 'Interplay ACM',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mace3: {
    label: 'MACE (Macintosh Audio Compression/Expansion) 3:1',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mace6: {
    label: 'MACE (Macintosh Audio Compression/Expansion) 6:1',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  metasound: {
    label: 'Voxware MetaSound',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  misc4: {
    label: 'Micronas SC-4 Audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mlp: {
    label: 'MLP (Meridian Lossless Packing)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp1: {
    label: 'MP1 (MPEG audio layer 1)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp1float: {
    label: 'MP1 (MPEG audio layer 1) (codec mp1)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp1_at: {
    label: 'mp1 (AudioToolbox) (codec mp1)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp2: {
    label: 'MP2 (MPEG audio layer 2)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp2float: {
    label: 'MP2 (MPEG audio layer 2) (codec mp2)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp2_at: {
    label: 'mp2 (AudioToolbox) (codec mp2)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp3float: {
    label: 'MP3 (MPEG audio layer 3) (codec mp3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp3: {
    label: 'MP3 (MPEG audio layer 3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp3_at: {
    label: 'mp3 (AudioToolbox) (codec mp3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp3adufloat: {
    label:
      'ADU (Application Data Unit) MP3 (MPEG audio layer 3) (codec mp3adu)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp3adu: {
    label: 'ADU (Application Data Unit) MP3 (MPEG audio layer 3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp3on4float: {
    label: 'MP3onMP4 (codec mp3on4)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp3on4: {
    label: 'MP3onMP4',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  als: {
    label: 'MPEG-4 Audio Lossless Coding (ALS) (codec mp4als)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  msnsiren: {
    label: 'MSN Siren',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mpc7: {
    label: 'Musepack SV7 (codec musepack7)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mpc8: {
    label: 'Musepack SV8 (codec musepack8)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  nellymoser: {
    label: 'Nellymoser Asao',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  opus: {
    label: 'Opus',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libopus: {
    label: 'libopus Opus (codec opus)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  osq: {
    label: 'OSQ (Original Sound Quality)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  paf_audio: {
    label: 'Amazing Studio Packed Animation File Audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_alaw: {
    label: 'PCM A-law / G.711 A-law',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_alaw_at: {
    label: 'pcm_alaw (AudioToolbox) (codec pcm_alaw)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_bluray: {
    label: 'PCM signed 16|20|24-bit big-endian for Blu-ray media',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_dvd: {
    label: 'PCM signed 16|20|24-bit big-endian for DVD media',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_f16le: {
    label: 'PCM 16.8 floating point little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_f24le: {
    label: 'PCM 24.0 floating point little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_f32be: {
    label: 'PCM 32-bit floating point big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_f32le: {
    label: 'PCM 32-bit floating point little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_f64be: {
    label: 'PCM 64-bit floating point big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_f64le: {
    label: 'PCM 64-bit floating point little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_lxf: {
    label: 'PCM signed 20-bit little-endian planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_mulaw: {
    label: 'PCM mu-law / G.711 mu-law',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_mulaw_at: {
    label: 'pcm_mulaw (AudioToolbox) (codec pcm_mulaw)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s16be: {
    label: 'PCM signed 16-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s16be_planar: {
    label: 'PCM signed 16-bit big-endian planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s16le: {
    label: 'PCM signed 16-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s16le_planar: {
    label: 'PCM signed 16-bit little-endian planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s24be: {
    label: 'PCM signed 24-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s24daud: {
    label: 'PCM D-Cinema audio signed 24-bit',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s24le: {
    label: 'PCM signed 24-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s24le_planar: {
    label: 'PCM signed 24-bit little-endian planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s32be: {
    label: 'PCM signed 32-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s32le: {
    label: 'PCM signed 32-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s32le_planar: {
    label: 'PCM signed 32-bit little-endian planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s64be: {
    label: 'PCM signed 64-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s64le: {
    label: 'PCM signed 64-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s8: {
    label: 'PCM signed 8-bit',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s8_planar: {
    label: 'PCM signed 8-bit planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_sga: {
    label: 'PCM SGA',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u16be: {
    label: 'PCM unsigned 16-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u16le: {
    label: 'PCM unsigned 16-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u24be: {
    label: 'PCM unsigned 24-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u24le: {
    label: 'PCM unsigned 24-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u32be: {
    label: 'PCM unsigned 32-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u32le: {
    label: 'PCM unsigned 32-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u8: {
    label: 'PCM unsigned 8-bit',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_vidc: {
    label: 'PCM Archimedes VIDC',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  qcelp: {
    label: 'QCELP / PureVoice',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  qdm2: {
    label: 'QDesign Music Codec 2',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  qdm2_at: {
    label: 'qdm2 (AudioToolbox) (codec qdm2)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  qdmc: {
    label: 'QDesign Music Codec 1',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  qdmc_at: {
    label: 'qdmc (AudioToolbox) (codec qdmc)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  real_144: {
    label: 'RealAudio 1.0 (14.4K) (codec ra_144)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  real_288: {
    label: 'RealAudio 2.0 (28.8K) (codec ra_288)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ralf: {
    label: 'RealAudio Lossless',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rka: {
    label: 'RKA (RK Audio)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  roq_dpcm: {
    label: 'DPCM id RoQ',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  s302m: {
    label: 'SMPTE 302M',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sbc: {
    label: 'SBC (low-complexity subband codec)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sdx2_dpcm: {
    label: 'DPCM Squareroot-Delta-Exact',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  shorten: {
    label: 'Shorten',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sipr: {
    label: 'RealAudio SIPR / ACELP.NET',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  siren: {
    label: 'Siren',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  smackaud: {
    label: 'Smacker audio (codec smackaudio)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sol_dpcm: {
    label: 'DPCM Sol',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sonic: {
    label: 'Sonic',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: true,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  speex: {
    label: 'Speex',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libspeex: {
    label: 'libspeex Speex (codec speex)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  tak: {
    label: "TAK (Tom's lossless Audio Kompressor)",
    type: 'audio',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  truehd: {
    label: 'TrueHD',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  truespeech: {
    label: 'DSP Group TrueSpeech',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  tta: {
    label: 'TTA (True Audio)',
    type: 'audio',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  twinvq: {
    label: 'VQF TwinVQ',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vmdaudio: {
    label: 'Sierra VMD audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vorbis: {
    label: 'Vorbis',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libvorbis: {
    label: 'libvorbis (codec vorbis)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  wady_dpcm: {
    label: 'DPCM Marble WADY',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wavarc: {
    label: 'Waveform Archiver',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wavesynth: {
    label: 'Wave synthesis pseudo-codec',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wavpack: {
    label: 'WavPack',
    type: 'audio',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ws_snd1: {
    label: 'Westwood Audio (SND1) (codec westwood_snd1)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wmalossless: {
    label: 'Windows Media Audio Lossless',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wmapro: {
    label: 'Windows Media Audio 9 Professional',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wmav1: {
    label: 'Windows Media Audio 1',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wmav2: {
    label: 'Windows Media Audio 2',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wmavoice: {
    label: 'Windows Media Audio Voice',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xan_dpcm: {
    label: 'DPCM Xan',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xma1: {
    label: 'Xbox Media Audio 1',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xma2: {
    label: 'Xbox Media Audio 2',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libaribb24: {
    label:
      'libaribb24 ARIB STD-B24 caption decoder (codec arib_caption)',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  ssa: {
    label: 'ASS (Advanced SubStation Alpha) subtitle (codec ass)',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  ass: {
    label: 'ASS (Advanced SubStation Alpha) subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  dvbsub: {
    label: 'DVB subtitles (codec dvb_subtitle)',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  dvdsub: {
    label: 'DVD subtitles (codec dvd_subtitle)',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  cc_dec: {
    label: 'Closed Caption (EIA-608 / CEA-708) (codec eia_608)',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  pgssub: {
    label:
      'HDMV Presentation Graphic Stream subtitles (codec hdmv_pgs_subtitle)',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  jacosub: {
    label: 'JACOsub subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  microdvd: {
    label: 'MicroDVD subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  mov_text: {
    label: '3GPP Timed Text subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  mpl2: {
    label: 'MPL2 subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  pjs: {
    label: 'PJS subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  realtext: {
    label: 'RealText subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  sami: {
    label: 'SAMI subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  stl: {
    label: 'Spruce subtitle format',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  srt: {
    label: 'SubRip subtitle (codec subrip)',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  subrip: {
    label: 'SubRip subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  subviewer: {
    label: 'SubViewer subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  subviewer1: {
    label: 'SubViewer1 subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  text: {
    label: 'Raw text subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  vplayer: {
    label: 'VPlayer subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  webvtt: {
    label: 'WebVTT subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  xsub: {
    label: 'XSUB',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
}

export const FFMPEG_ENCODER_CONTENT_KEY: ReadonlyArray<FfmpegEncoderContentKey> =
  [
    'a64multi',
    'a64multi5',
    'alias_pix',
    'amv',
    'apng',
    'asv1',
    'asv2',
    'libaom-av1',
    'librav1e',
    'libsvtav1',
    'avrp',
    'avui',
    'ayuv',
    'bitpacked',
    'bmp',
    'cfhd',
    'cinepak',
    'cljr',
    'vc2',
    'dnxhd',
    'dpx',
    'dvvideo',
    'exr',
    'ffv1',
    'ffvhuff',
    'fits',
    'flashsv',
    'flashsv2',
    'flv',
    'gif',
    'h261',
    'h263',
    'h263p',
    'libx264',
    'libx264rgb',
    'h264_videotoolbox',
    'hap',
    'hdr',
    'libx265',
    'hevc_videotoolbox',
    'huffyuv',
    'jpeg2000',
    'libopenjpeg',
    'jpegls',
    'libjxl',
    'ljpeg',
    'magicyuv',
    'mjpeg',
    'mpeg1video',
    'mpeg2video',
    'mpeg4',
    'libxvid',
    'msmpeg4v2',
    'msmpeg4',
    'msrle',
    'msvideo1',
    'pam',
    'pbm',
    'pcx',
    'pfm',
    'pgm',
    'pgmyuv',
    'phm',
    'png',
    'ppm',
    'prores',
    'prores_aw',
    'prores_ks',
    'prores_videotoolbox',
    'qoi',
    'qtrle',
    'r10k',
    'r210',
    'rawvideo',
    'roqvideo',
    'rpza',
    'rv10',
    'rv20',
    'sgi',
    'smc',
    'snow',
    'speedhq',
    'sunrast',
    'svq1',
    'targa',
    'libtheora',
    'tiff',
    'utvideo',
    'v210',
    'v308',
    'v408',
    'v410',
    'vbn',
    'vnull',
    'libvpx',
    'libvpx-vp9',
    'wbmp',
    'libwebp_anim',
    'libwebp',
    'wmv1',
    'wmv2',
    'wrapped_avframe',
    'xbm',
    'xface',
    'xwd',
    'y41p',
    'yuv4',
    'zlib',
    'zmbv',
    'aac',
    'aac_at',
    'ac3',
    'ac3_fixed',
    'adpcm_adx',
    'adpcm_argo',
    'g722',
    'g726',
    'g726le',
    'adpcm_ima_alp',
    'adpcm_ima_amv',
    'adpcm_ima_apm',
    'adpcm_ima_qt',
    'adpcm_ima_ssi',
    'adpcm_ima_wav',
    'adpcm_ima_ws',
    'adpcm_ms',
    'adpcm_swf',
    'adpcm_yamaha',
    'alac',
    'alac_at',
    'libopencore_amrnb',
    'anull',
    'aptx',
    'aptx_hd',
    'comfortnoise',
    'dfpwm',
    'dca',
    'eac3',
    'flac',
    'g723_1',
    'ilbc_at',
    'mlp',
    'mp2',
    'mp2fixed',
    'libmp3lame',
    'nellymoser',
    'opus',
    'libopus',
    'pcm_alaw',
    'pcm_alaw_at',
    'pcm_bluray',
    'pcm_dvd',
    'pcm_f32be',
    'pcm_f32le',
    'pcm_f64be',
    'pcm_f64le',
    'pcm_mulaw',
    'pcm_mulaw_at',
    'pcm_s16be',
    'pcm_s16be_planar',
    'pcm_s16le',
    'pcm_s16le_planar',
    'pcm_s24be',
    'pcm_s24daud',
    'pcm_s24le',
    'pcm_s24le_planar',
    'pcm_s32be',
    'pcm_s32le',
    'pcm_s32le_planar',
    'pcm_s64be',
    'pcm_s64le',
    'pcm_s8',
    'pcm_s8_planar',
    'pcm_u16be',
    'pcm_u16le',
    'pcm_u24be',
    'pcm_u24le',
    'pcm_u32be',
    'pcm_u32le',
    'pcm_u8',
    'pcm_vidc',
    'real_144',
    'roq_dpcm',
    's302m',
    'sbc',
    'sonic',
    'sonicls',
    'libspeex',
    'truehd',
    'tta',
    'vorbis',
    'libvorbis',
    'wavpack',
    'wmav1',
    'wmav2',
    'ssa',
    'ass',
    'dvbsub',
    'dvdsub',
    'mov_text',
    'srt',
    'subrip',
    'text',
    'ttml',
    'webvtt',
    'xsub',
  ] as const

export const FFMPEG_ENCODER_CONTENT: FfmpegEncoderContent = {
  a64multi: {
    label: 'Multicolor charset for Commodore 64 (codec a64_multi)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  a64multi5: {
    label:
      'Multicolor charset for Commodore 64, extended with 5th color (colram) (codec a64_multi5)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  alias_pix: {
    label: 'Alias/Wavefront PIX image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  amv: {
    label: 'AMV Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  apng: {
    label: 'APNG (Animated Portable Network Graphics) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  asv1: {
    label: 'ASUS V1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  asv2: {
    label: 'ASUS V2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  'libaom-av1': {
    label: 'libaom AV1 (codec av1)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  librav1e: {
    label: 'librav1e AV1 (codec av1)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libsvtav1: {
    label:
      'SVT-AV1(Scalable Video Technology for AV1) encoder (codec av1)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  avrp: {
    label: 'Avid 1:1 10-bit RGB Packer',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  avui: {
    label: 'Avid Meridien Uncompressed',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: true,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ayuv: {
    label: 'Uncompressed packed MS 4:4:4:4',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  bitpacked: {
    label: 'Bitpacked',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  bmp: {
    label: 'BMP (Windows and OS/2 bitmap)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cfhd: {
    label: 'GoPro CineForm HD',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cinepak: {
    label: 'Cinepak',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  cljr: {
    label: 'Cirrus Logic AccuPak',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vc2: {
    label: 'SMPTE VC-2 (codec dirac)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dnxhd: {
    label: 'VC3/DNxHD',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dpx: {
    label: 'DPX (Digital Picture Exchange) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dvvideo: {
    label: 'DV (Digital Video)',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  exr: {
    label: 'OpenEXR image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ffv1: {
    label: 'FFmpeg video codec #1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ffvhuff: {
    label: 'Huffyuv FFmpeg variant',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  fits: {
    label: 'Flexible Image Transport System',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  flashsv: {
    label: 'Flash Screen Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  flashsv2: {
    label: 'Flash Screen Video Version 2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  flv: {
    label:
      'FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (codec flv1)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  gif: {
    label: 'GIF (Graphics Interchange Format)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  h261: {
    label: 'H.261',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  h263: {
    label: 'H.263 / H.263-1996',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  h263p: {
    label: 'H.263+ / H.263-1998 / H.263 version 2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  libx264: {
    label:
      'libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (codec h264)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libx264rgb: {
    label:
      'libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 RGB (codec h264)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  h264_videotoolbox: {
    label: 'VideoToolbox H.264 Encoder (codec h264)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  hap: {
    label: 'Vidvox Hap',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  hdr: {
    label: 'HDR (Radiance RGBE format) image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libx265: {
    label: 'libx265 H.265 / HEVC (codec hevc)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  hevc_videotoolbox: {
    label: 'VideoToolbox H.265 Encoder (codec hevc)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  huffyuv: {
    label: 'Huffyuv / HuffYUV',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  jpeg2000: {
    label: 'JPEG 2000',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libopenjpeg: {
    label: 'OpenJPEG JPEG 2000 (codec jpeg2000)',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  jpegls: {
    label: 'JPEG-LS',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libjxl: {
    label: 'libjxl JPEG XL (codec jpegxl)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  ljpeg: {
    label: 'Lossless JPEG',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  magicyuv: {
    label: 'MagicYUV video',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mjpeg: {
    label: 'MJPEG (Motion JPEG)',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  mpeg1video: {
    label: 'MPEG-1 video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  mpeg2video: {
    label: 'MPEG-2 video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  mpeg4: {
    label: 'MPEG-4 part 2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  libxvid: {
    label: 'libxvidcore MPEG-4 part 2 (codec mpeg4)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  msmpeg4v2: {
    label: 'MPEG-4 part 2 Microsoft variant version 2',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  msmpeg4: {
    label:
      'MPEG-4 part 2 Microsoft variant version 3 (codec msmpeg4v3)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  msrle: {
    label: 'Microsoft RLE',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  msvideo1: {
    label: 'Microsoft Video-1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  pam: {
    label: 'PAM (Portable AnyMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pbm: {
    label: 'PBM (Portable BitMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcx: {
    label: 'PC Paintbrush PCX image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pfm: {
    label: 'PFM (Portable FloatMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pgm: {
    label: 'PGM (Portable GrayMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pgmyuv: {
    label: 'PGMYUV (Portable GrayMap YUV) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  phm: {
    label: 'PHM (Portable HalfFloatMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  png: {
    label: 'PNG (Portable Network Graphics) image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ppm: {
    label: 'PPM (Portable PixelMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  prores: {
    label: 'Apple ProRes',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  prores_aw: {
    label: 'Apple ProRes (codec prores)',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  prores_ks: {
    label: 'Apple ProRes (iCodec Pro) (codec prores)',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  prores_videotoolbox: {
    label: 'VideoToolbox ProRes Encoder (codec prores)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  qoi: {
    label: 'QOI (Quite OK Image format) image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  qtrle: {
    label: 'QuickTime Animation (RLE) video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  r10k: {
    label: 'AJA Kona 10-bit RGB Codec',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  r210: {
    label: 'Uncompressed RGB 10-bit',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rawvideo: {
    label: 'raw video',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  roqvideo: {
    label: 'id RoQ video (codec roq)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rpza: {
    label: 'QuickTime video (RPZA)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  rv10: {
    label: 'RealVideo 1.0',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  rv20: {
    label: 'RealVideo 2.0',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  sgi: {
    label: 'SGI image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  smc: {
    label: 'QuickTime Graphics (SMC)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  snow: {
    label: 'Snow',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  speedhq: {
    label: 'NewTek SpeedHQ',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  sunrast: {
    label: 'Sun Rasterfile image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  svq1: {
    label: 'Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  targa: {
    label: 'Truevision Targa image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libtheora: {
    label: 'libtheora Theora (codec theora)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  tiff: {
    label: 'TIFF image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  utvideo: {
    label: 'Ut Video',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  v210: {
    label: 'Uncompressed 4:2:2 10-bit',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  v308: {
    label: 'Uncompressed packed 4:4:4',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  v408: {
    label: 'Uncompressed packed QT 4:4:4:4',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  v410: {
    label: 'Uncompressed 4:4:4 10-bit',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vbn: {
    label: 'Vizrt Binary Image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: true,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vnull: {
    label: 'null video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  libvpx: {
    label: 'libvpx VP8 (codec vp8)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  'libvpx-vp9': {
    label: 'libvpx VP9 (codec vp9)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wbmp: {
    label: 'WBMP (Wireless Application Protocol Bitmap) image',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libwebp_anim: {
    label: 'libwebp WebP image (codec webp)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libwebp: {
    label: 'libwebp WebP image (codec webp)',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wmv1: {
    label: 'Windows Media Video 7',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  wmv2: {
    label: 'Windows Media Video 8',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  wrapped_avframe: {
    label: 'AVFrame to AVPacket passthrough',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  xbm: {
    label: 'XBM (X BitMap) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xface: {
    label: 'X-face image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  xwd: {
    label: 'XWD (X Window Dump) image',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  y41p: {
    label: 'Uncompressed YUV 4:1:1 12-bit',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  yuv4: {
    label: 'Uncompressed packed 4:2:0',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  zlib: {
    label: 'LCL (LossLess Codec Library) ZLIB',
    type: 'video',
    frameLevelMultithreading: true,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  zmbv: {
    label: 'Zip Motion Blocks Video',
    type: 'video',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aac: {
    label: 'AAC (Advanced Audio Coding)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aac_at: {
    label: 'aac (AudioToolbox) (codec aac)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  ac3: {
    label: 'ATSC A/52A (AC-3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ac3_fixed: {
    label: 'ATSC A/52A (AC-3) (codec ac3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_adx: {
    label: 'SEGA CRI ADX ADPCM',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_argo: {
    label: 'ADPCM Argonaut Games',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  g722: {
    label: 'G.722 ADPCM (codec adpcm_g722)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  g726: {
    label: 'G.726 ADPCM (codec adpcm_g726)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  g726le: {
    label:
      'G.726 little endian ADPCM ("right-justified") (codec adpcm_g726le)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_alp: {
    label: 'ADPCM IMA High Voltage Software ALP',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_amv: {
    label: 'ADPCM IMA AMV',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_apm: {
    label: 'ADPCM IMA Ubisoft APM',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_qt: {
    label: 'ADPCM IMA QuickTime',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_ssi: {
    label: 'ADPCM IMA Simon & Schuster Interactive',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_wav: {
    label: 'ADPCM IMA WAV',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ima_ws: {
    label: 'ADPCM IMA Westwood',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_ms: {
    label: 'ADPCM Microsoft',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_swf: {
    label: 'ADPCM Shockwave Flash',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  adpcm_yamaha: {
    label: 'ADPCM Yamaha',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  alac: {
    label: 'ALAC (Apple Lossless Audio Codec)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  alac_at: {
    label: 'alac (AudioToolbox) (codec alac)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  libopencore_amrnb: {
    label:
      'OpenCORE AMR-NB (Adaptive Multi-Rate Narrow-Band) (codec amr_nb)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  anull: {
    label: 'null audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  aptx: {
    label: 'aptX (Audio Processing Technology for Bluetooth)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  aptx_hd: {
    label: 'aptX HD (Audio Processing Technology for Bluetooth)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  comfortnoise: {
    label: 'RFC 3389 comfort noise generator',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dfpwm: {
    label: 'DFPWM1a audio',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  dca: {
    label: 'DCA (DTS Coherent Acoustics) (codec dts)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: true,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  eac3: {
    label: 'ATSC A/52 E-AC-3',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  flac: {
    label: 'FLAC (Free Lossless Audio Codec)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  g723_1: {
    label: 'G.723.1',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ilbc_at: {
    label: 'ilbc (AudioToolbox) (codec ilbc)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  mlp: {
    label: 'MLP (Meridian Lossless Packing)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: true,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp2: {
    label: 'MP2 (MPEG audio layer 2)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  mp2fixed: {
    label: 'MP2 fixed point (MPEG audio layer 2) (codec mp2)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libmp3lame: {
    label: 'libmp3lame MP3 (MPEG audio layer 3) (codec mp3)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  nellymoser: {
    label: 'Nellymoser Asao',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  opus: {
    label: 'Opus',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: true,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libopus: {
    label: 'libopus Opus (codec opus)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_alaw: {
    label: 'PCM A-law / G.711 A-law',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_alaw_at: {
    label: 'pcm_alaw (AudioToolbox) (codec pcm_alaw)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  pcm_bluray: {
    label: 'PCM signed 16|20|24-bit big-endian for Blu-ray media',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_dvd: {
    label: 'PCM signed 16|20|24-bit big-endian for DVD media',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_f32be: {
    label: 'PCM 32-bit floating point big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_f32le: {
    label: 'PCM 32-bit floating point little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_f64be: {
    label: 'PCM 64-bit floating point big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_f64le: {
    label: 'PCM 64-bit floating point little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_mulaw: {
    label: 'PCM mu-law / G.711 mu-law',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_mulaw_at: {
    label: 'pcm_mulaw (AudioToolbox) (codec pcm_mulaw)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  pcm_s16be: {
    label: 'PCM signed 16-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s16be_planar: {
    label: 'PCM signed 16-bit big-endian planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s16le: {
    label: 'PCM signed 16-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s16le_planar: {
    label: 'PCM signed 16-bit little-endian planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s24be: {
    label: 'PCM signed 24-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s24daud: {
    label: 'PCM D-Cinema audio signed 24-bit',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s24le: {
    label: 'PCM signed 24-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s24le_planar: {
    label: 'PCM signed 24-bit little-endian planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s32be: {
    label: 'PCM signed 32-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s32le: {
    label: 'PCM signed 32-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s32le_planar: {
    label: 'PCM signed 32-bit little-endian planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s64be: {
    label: 'PCM signed 64-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s64le: {
    label: 'PCM signed 64-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s8: {
    label: 'PCM signed 8-bit',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_s8_planar: {
    label: 'PCM signed 8-bit planar',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u16be: {
    label: 'PCM unsigned 16-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u16le: {
    label: 'PCM unsigned 16-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u24be: {
    label: 'PCM unsigned 24-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u24le: {
    label: 'PCM unsigned 24-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u32be: {
    label: 'PCM unsigned 32-bit big-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u32le: {
    label: 'PCM unsigned 32-bit little-endian',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_u8: {
    label: 'PCM unsigned 8-bit',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  pcm_vidc: {
    label: 'PCM Archimedes VIDC',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  real_144: {
    label: 'RealAudio 1.0 (14.4K) (codec ra_144)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  roq_dpcm: {
    label: 'id RoQ DPCM',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  s302m: {
    label: 'SMPTE 302M',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: true,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sbc: {
    label: 'SBC (low-complexity subband codec)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sonic: {
    label: 'Sonic',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: true,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  sonicls: {
    label: 'Sonic lossless',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: true,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libspeex: {
    label: 'libspeex Speex (codec speex)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  truehd: {
    label: 'TrueHD',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: true,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  tta: {
    label: 'TTA (True Audio)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  vorbis: {
    label: 'Vorbis',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: true,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  libvorbis: {
    label: 'libvorbis (codec vorbis)',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wavpack: {
    label: 'WavPack',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wmav1: {
    label: 'Windows Media Audio 1',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  wmav2: {
    label: 'Windows Media Audio 2',
    type: 'audio',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: true,
  },
  ssa: {
    label: 'ASS (Advanced SubStation Alpha) subtitle (codec ass)',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  ass: {
    label: 'ASS (Advanced SubStation Alpha) subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  dvbsub: {
    label: 'DVB subtitles (codec dvb_subtitle)',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  dvdsub: {
    label: 'DVD subtitles (codec dvd_subtitle)',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  mov_text: {
    label: '3GPP Timed Text subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  srt: {
    label: 'SubRip subtitle (codec subrip)',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  subrip: {
    label: 'SubRip subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  text: {
    label: 'Raw text subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  ttml: {
    label: 'TTML subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  webvtt: {
    label: 'WebVTT subtitle',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
  xsub: {
    label: 'DivX subtitles (XSUB)',
    type: 'subtitle',
    frameLevelMultithreading: false,
    sliceLevelMultithreading: false,
    experimental: false,
    supportsDrawHorizontalBand: false,
    supportsDirectRenderingMethod1: false,
  },
}

export const FFMPEG_FORMAT_CONTENT_KEY: ReadonlyArray<FfmpegFormatContentKey> =
  [
    '3dostr',
    '3g2',
    '3gp',
    '4xm',
    'a64',
    'aa',
    'aac',
    'aax',
    'ac3',
    'ac4',
    'ace',
    'acm',
    'act',
    'adf',
    'adp',
    'ads',
    'adts',
    'adx',
    'aea',
    'afc',
    'aiff',
    'aix',
    'alaw',
    'alias_pix',
    'alp',
    'amr',
    'amrnb',
    'amrwb',
    'amv',
    'anm',
    'apac',
    'apc',
    'ape',
    'apm',
    'apng',
    'aptx',
    'aptx_hd',
    'aqtitle',
    'argo_asf',
    'argo_brp',
    'argo_cvg',
    'asf',
    'asf_o',
    'asf_stream',
    'ass',
    'ast',
    'au',
    'audiotoolbox',
    'av1',
    'avfoundation',
    'avi',
    'avif',
    'avm2',
    'avr',
    'avs',
    'avs2',
    'avs3',
    'bethsoftvid',
    'bfi',
    'bfstm',
    'bin',
    'bink',
    'binka',
    'bit',
    'bitpacked',
    'bmp_pipe',
    'bmv',
    'boa',
    'bonk',
    'brender_pix',
    'brstm',
    'c93',
    'caf',
    'cavsvideo',
    'cdg',
    'cdxl',
    'cine',
    'codec2',
    'codec2raw',
    'concat',
    'crc',
    'cri_pipe',
    'dash',
    'data',
    'daud',
    'dcstr',
    'dds_pipe',
    'derf',
    'dfa',
    'dfpwm',
    'dhav',
    'dirac',
    'dnxhd',
    'dpx_pipe',
    'dsf',
    'dsicin',
    'dss',
    'dts',
    'dtshd',
    'dv',
    'dvbsub',
    'dvbtxt',
    'dvd',
    'dxa',
    'ea',
    'ea_cdata',
    'eac3',
    'epaf',
    'evc',
    'exr_pipe',
    'f32be',
    'f32le',
    'f4v',
    'f64be',
    'f64le',
    'ffmetadata',
    'fifo',
    'fifo_test',
    'film_cpk',
    'filmstrip',
    'fits',
    'flac',
    'flic',
    'flv',
    'framecrc',
    'framehash',
    'framemd5',
    'frm',
    'fsb',
    'fwse',
    'g722',
    'g723_1',
    'g726',
    'g726le',
    'g729',
    'gdv',
    'gem_pipe',
    'genh',
    'gif',
    'gif_pipe',
    'gsm',
    'gxf',
    'h261',
    'h263',
    'h264',
    'hash',
    'hca',
    'hcom',
    'hdr_pipe',
    'hds',
    'hevc',
    'hls',
    'hnm',
    'ico',
    'idcin',
    'idf',
    'iff',
    'ifv',
    'ilbc',
    'image2',
    'image2pipe',
    'imf',
    'ingenient',
    'ipmovie',
    'ipod',
    'ipu',
    'ircam',
    'ismv',
    'iss',
    'iv8',
    'ivf',
    'ivr',
    'j2k_pipe',
    'jacosub',
    'jpeg_pipe',
    'jpegls_pipe',
    'jpegxl_anim',
    'jpegxl_pipe',
    'jv',
    'kux',
    'kvag',
    'laf',
    'latm',
    'lavfi',
    'live_flv',
    'lmlm4',
    'loas',
    'lrc',
    'luodat',
    'lvf',
    'lxf',
    'm4v',
    'matroska',
    'matroska-webm',
    'mca',
    'mcc',
    'md5',
    'mgsts',
    'microdvd',
    'mjpeg',
    'mjpeg_2000',
    'mkvtimestamp_v2',
    'mlp',
    'mlv',
    'mm',
    'mmf',
    'mods',
    'moflex',
    'mov',
    'mp2',
    'mp3',
    'mp4',
    'mpc',
    'mpc8',
    'mpeg',
    'mpeg1video',
    'mpeg2video',
    'mpegts',
    'mpegtsraw',
    'mpegvideo',
    'mpjpeg',
    'mpl2',
    'mpsub',
    'msf',
    'msnwctcp',
    'msp',
    'mtaf',
    'mtv',
    'mulaw',
    'musx',
    'mv',
    'mvi',
    'mxf',
    'mxf_d10',
    'mxf_opatom',
    'mxg',
    'nc',
    'nistsphere',
    'nsp',
    'nsv',
    'null',
    'nut',
    'nuv',
    'obu',
    'oga',
    'ogg',
    'ogv',
    'oma',
    'opus',
    'osq',
    'paf',
    'pam_pipe',
    'pbm_pipe',
    'pcx_pipe',
    'pdv',
    'pfm_pipe',
    'pgm_pipe',
    'pgmyuv_pipe',
    'pgx_pipe',
    'phm_pipe',
    'photocd_pipe',
    'pictor_pipe',
    'pjs',
    'pmp',
    'png_pipe',
    'pp_bnk',
    'ppm_pipe',
    'psd_pipe',
    'psp',
    'psxstr',
    'pva',
    'pvf',
    'qcp',
    'qdraw_pipe',
    'qoi_pipe',
    'r3d',
    'rawvideo',
    'realtext',
    'redspark',
    'rka',
    'rl2',
    'rm',
    'roq',
    'rpl',
    'rsd',
    'rso',
    'rtp',
    'rtp_mpegts',
    'rtsp',
    's16be',
    's16le',
    's24be',
    's24le',
    's32be',
    's32le',
    's337m',
    's8',
    'sami',
    'sap',
    'sbc',
    'sbg',
    'scc',
    'scd',
    'sdl2',
    'sdns',
    'sdp',
    'sdr2',
    'sds',
    'sdx',
    'segment',
    'ser',
    'sga',
    'sgi_pipe',
    'shn',
    'siff',
    'simbiosis_imx',
    'sln',
    'smjpeg',
    'smk',
    'smoothstreaming',
    'smush',
    'sol',
    'sox',
    'spdif',
    'spx',
    'srt',
    'stl',
    'stream_segment',
    'streamhash',
    'subviewer',
    'subviewer1',
    'sunrast_pipe',
    'sup',
    'svag',
    'svcd',
    'svg_pipe',
    'svs',
    'swf',
    'tak',
    'tedcaptions',
    'tee',
    'thp',
    'tiertexseq',
    'tiff_pipe',
    'tmv',
    'truehd',
    'tta',
    'ttml',
    'tty',
    'txd',
    'ty',
    'u16be',
    'u16le',
    'u24be',
    'u24le',
    'u32be',
    'u32le',
    'u8',
    'uncodedframecrc',
    'usm',
    'v210',
    'v210x',
    'vag',
    'vbn_pipe',
    'vc1',
    'vc1test',
    'vcd',
    'vidc',
    'vividas',
    'vivo',
    'vmd',
    'vob',
    'vobsub',
    'voc',
    'vpk',
    'vplayer',
    'vqf',
    'vvc',
    'w64',
    'wady',
    'wav',
    'wavarc',
    'wc3movie',
    'webm',
    'webm_chunk',
    'webm_dash_manifest',
    'webp',
    'webp_pipe',
    'webvtt',
    'wsaud',
    'wsd',
    'wsvqa',
    'wtv',
    'wv',
    'wve',
    'x11grab',
    'xa',
    'xbin',
    'xbm_pipe',
    'xmd',
    'xmv',
    'xpm_pipe',
    'xvag',
    'xwd_pipe',
    'xwma',
    'yop',
    'yuv4mpegpipe',
  ] as const

export const FFMPEG_FORMAT_CONTENT: FfmpegFormatContent = {
  '3dostr': {
    label: '3DO STR',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  '3g2': {
    label: '3GP2 (3GPP2 file format)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  '3gp': {
    label: '3GP (3GPP file format)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  '4xm': {
    label: '4X Technologies',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  a64: {
    label: 'a64 - video for Commodore 64',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  aa: {
    label: 'Audible AA format files',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  aac: {
    label: 'raw ADTS AAC (Advanced Audio Coding)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  aax: {
    label: 'CRI AAX',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ac3: {
    label: 'raw AC-3',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  ac4: {
    label: 'raw AC-4',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  ace: {
    label: 'tri-Ace Audio Container',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  acm: {
    label: 'Interplay ACM',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  act: {
    label: 'ACT Voice file format',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  adf: {
    label: 'Artworx Data Format',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  adp: {
    label: 'ADP',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ads: {
    label: 'Sony PS2 ADS',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  adts: {
    label: 'ADTS AAC (Advanced Audio Coding)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  adx: {
    label: 'CRI ADX',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  aea: {
    label: 'MD STUDIO audio',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  afc: {
    label: 'AFC',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  aiff: {
    label: 'Audio IFF',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  aix: {
    label: 'CRI AIX',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  alaw: {
    label: 'PCM A-law',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  alias_pix: {
    label: 'Alias/Wavefront PIX image',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  alp: {
    label: 'LEGO Racers ALP',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  amr: {
    label: '3GPP AMR',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  amrnb: {
    label: 'raw AMR-NB',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  amrwb: {
    label: 'raw AMR-WB',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  amv: {
    label: 'AMV',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  anm: {
    label: 'Deluxe Paint Animation',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  apac: {
    label: 'raw APAC',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  apc: {
    label: 'CRYO APC',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ape: {
    label: "Monkey's Audio",
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  apm: {
    label: 'Ubisoft Rayman 2 APM',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  apng: {
    label: 'Animated Portable Network Graphics',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  aptx: {
    label: 'raw aptX (Audio Processing Technology for Bluetooth)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  aptx_hd: {
    label: 'raw aptX HD (Audio Processing Technology for Bluetooth)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  aqtitle: {
    label: 'AQTitle subtitles',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  argo_asf: {
    label: 'Argonaut Games ASF',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  argo_brp: {
    label: 'Argonaut Games BRP',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  argo_cvg: {
    label: 'Argonaut Games CVG',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  asf: {
    label: 'ASF (Advanced / Active Streaming Format)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  asf_o: {
    label: 'ASF (Advanced / Active Streaming Format)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  asf_stream: {
    label: 'ASF (Advanced / Active Streaming Format)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  ass: {
    label: 'SSA (SubStation Alpha) subtitle',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  ast: {
    label: 'AST (Audio Stream)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  au: {
    label: 'Sun AU',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  audiotoolbox: {
    label: 'AudioToolbox output device',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  av1: {
    label: 'AV1 Annex B',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  avfoundation: {
    label: 'AVFoundation input device',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  avi: {
    label: 'AVI (Audio Video Interleaved)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  avif: {
    label: 'AVIF',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  avm2: {
    label: 'SWF (ShockWave Flash) (AVM2)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  avr: {
    label: 'AVR (Audio Visual Research)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  avs: {
    label: 'Argonaut Games Creature Shock',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  avs2: {
    label: 'raw AVS2-P2/IEEE1857.4 video',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  avs3: {
    label: 'AVS3-P2/IEEE1857.10',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  bethsoftvid: {
    label: 'Bethesda Softworks VID',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  bfi: {
    label: 'Brute Force & Ignorance',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  bfstm: {
    label: 'BFSTM (Binary Cafe Stream)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  bin: {
    label: 'Binary text',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  bink: {
    label: 'Bink',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  binka: {
    label: 'Bink Audio',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  bit: {
    label: 'G.729 BIT file format',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  bitpacked: {
    label: 'Bitpacked',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  bmp_pipe: {
    label: 'piped bmp sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  bmv: {
    label: 'Discworld II BMV',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  boa: {
    label: 'Black Ops Audio',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  bonk: {
    label: 'raw Bonk',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  brender_pix: {
    label: 'BRender PIX image',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  brstm: {
    label: 'BRSTM (Binary Revolution Stream)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  c93: {
    label: 'Interplay C93',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  caf: {
    label: 'Apple CAF (Core Audio Format)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  cavsvideo: {
    label: 'raw Chinese AVS (Audio Video Standard) video',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  cdg: {
    label: 'CD Graphics',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  cdxl: {
    label: 'Commodore CDXL video',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  cine: {
    label: 'Phantom Cine',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  codec2: {
    label: 'codec2 .c2 muxer',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  codec2raw: {
    label: 'raw codec2 muxer',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  concat: {
    label: 'Virtual concatenation script',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  crc: {
    label: 'CRC testing',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  cri_pipe: {
    label: 'piped cri sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  dash: {
    label: 'DASH Muxer',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  data: {
    label: 'raw data',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  daud: {
    label: 'D-Cinema audio',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  dcstr: {
    label: 'Sega DC STR',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  dds_pipe: {
    label: 'piped dds sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  derf: {
    label: 'Xilam DERF',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  dfa: {
    label: 'Chronomaster DFA',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  dfpwm: {
    label: 'raw DFPWM1a',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  dhav: {
    label: 'Video DAV',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  dirac: {
    label: 'raw Dirac',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  dnxhd: {
    label: 'raw DNxHD (SMPTE VC-3)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  dpx_pipe: {
    label: 'piped dpx sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  dsf: {
    label: 'DSD Stream File (DSF)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  dsicin: {
    label: 'Delphine Software International CIN',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  dss: {
    label: 'Digital Speech Standard (DSS)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  dts: {
    label: 'raw DTS',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  dtshd: {
    label: 'raw DTS-HD',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  dv: {
    label: 'DV (Digital Video)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  dvbsub: {
    label: 'raw dvbsub',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  dvbtxt: {
    label: 'dvbtxt',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  dvd: {
    label: 'MPEG-2 PS (DVD VOB)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  dxa: {
    label: 'DXA',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ea: {
    label: 'Electronic Arts Multimedia',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ea_cdata: {
    label: 'Electronic Arts cdata',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  eac3: {
    label: 'raw E-AC-3',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  epaf: {
    label: 'Ensoniq Paris Audio File',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  evc: {
    label: 'raw EVC video',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  exr_pipe: {
    label: 'piped exr sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  f32be: {
    label: 'PCM 32-bit floating-point big-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  f32le: {
    label: 'PCM 32-bit floating-point little-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  f4v: {
    label: 'F4V Adobe Flash Video',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  f64be: {
    label: 'PCM 64-bit floating-point big-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  f64le: {
    label: 'PCM 64-bit floating-point little-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  ffmetadata: {
    label: 'FFmpeg metadata in text',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  fifo: {
    label: 'FIFO queue pseudo-muxer',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  fifo_test: {
    label: 'Fifo test muxer',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  film_cpk: {
    label: 'Sega FILM / CPK',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  filmstrip: {
    label: 'Adobe Filmstrip',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  fits: {
    label: 'Flexible Image Transport System',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  flac: {
    label: 'raw FLAC',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  flic: {
    label: 'FLI/FLC/FLX animation',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  flv: {
    label: 'FLV (Flash Video)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  framecrc: {
    label: 'framecrc testing',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  framehash: {
    label: 'Per-frame hash testing',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  framemd5: {
    label: 'Per-frame MD5 testing',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  frm: {
    label: 'Megalux Frame',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  fsb: {
    label: 'FMOD Sample Bank',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  fwse: {
    label: "Capcom's MT Framework sound",
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  g722: {
    label: 'raw G.722',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  g723_1: {
    label: 'raw G.723.1',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  g726: {
    label: 'raw big-endian G.726 ("left-justified")',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  g726le: {
    label: 'raw little-endian G.726 ("right-justified")',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  g729: {
    label: 'G.729 raw format demuxer',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  gdv: {
    label: 'Gremlin Digital Video',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  gem_pipe: {
    label: 'piped gem sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  genh: {
    label: 'GENeric Header',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  gif: {
    label: 'CompuServe Graphics Interchange Format (GIF)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  gif_pipe: {
    label: 'piped gif sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  gsm: {
    label: 'raw GSM',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  gxf: {
    label: 'GXF (General eXchange Format)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  h261: {
    label: 'raw H.261',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  h263: {
    label: 'raw H.263',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  h264: {
    label: 'raw H.264 video',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  hash: {
    label: 'Hash testing',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  hca: {
    label: 'CRI HCA',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  hcom: {
    label: 'Macintosh HCOM',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  hdr_pipe: {
    label: 'piped hdr sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  hds: {
    label: 'HDS Muxer',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  hevc: {
    label: 'raw HEVC video',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  hls: {
    label: 'Apple HTTP Live Streaming',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  hnm: {
    label: 'Cryo HNM v4',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ico: {
    label: 'Microsoft Windows ICO',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  idcin: {
    label: 'id Cinematic',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  idf: {
    label: 'iCE Draw File',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  iff: {
    label: 'IFF (Interchange File Format)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ifv: {
    label: 'IFV CCTV DVR',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ilbc: {
    label: 'iLBC storage',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  image2: {
    label: 'image2 sequence',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  image2pipe: {
    label: 'piped image2 sequence',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  imf: {
    label: 'IMF (Interoperable Master Format)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ingenient: {
    label: 'raw Ingenient MJPEG',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ipmovie: {
    label: 'Interplay MVE',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ipod: {
    label: 'iPod H.264 MP4 (MPEG-4 Part 14)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  ipu: {
    label: 'raw IPU Video',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ircam: {
    label: 'Berkeley/IRCAM/CARL Sound Format',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  ismv: {
    label: 'ISMV/ISMA (Smooth Streaming)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  iss: {
    label: 'Funcom ISS',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  iv8: {
    label: 'IndigoVision 8000 video',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ivf: {
    label: 'On2 IVF',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  ivr: {
    label: 'IVR (Internet Video Recording)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  j2k_pipe: {
    label: 'piped j2k sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  jacosub: {
    label: 'JACOsub subtitle format',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  jpeg_pipe: {
    label: 'piped jpeg sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  jpegls_pipe: {
    label: 'piped jpegls sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  jpegxl_anim: {
    label: 'Animated JPEG XL',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  jpegxl_pipe: {
    label: 'piped jpegxl sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  jv: {
    label: 'Bitmap Brothers JV',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  kux: {
    label: 'KUX (YouKu)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  kvag: {
    label: 'Simon & Schuster Interactive VAG',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  laf: {
    label: 'LAF (Limitless Audio Format)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  latm: {
    label: 'LOAS/LATM',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  lavfi: {
    label: 'Libavfilter virtual input device',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  live_flv: {
    label: 'live RTMP FLV (Flash Video)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  lmlm4: {
    label: 'raw lmlm4',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  loas: {
    label: 'LOAS AudioSyncStream',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  lrc: {
    label: 'LRC lyrics',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  luodat: {
    label: 'Video CCTV DAT',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  lvf: {
    label: 'LVF',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  lxf: {
    label: 'VR native stream (LXF)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  m4v: {
    label: 'raw MPEG-4 video',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  matroska: {
    label: 'Matroska',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  'matroska-webm': {
    label: 'Matroska / WebM',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mca: {
    label: 'MCA Audio Format',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mcc: {
    label: 'MacCaption',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  md5: {
    label: 'MD5 testing',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  mgsts: {
    label: 'Metal Gear Solid: The Twin Snakes',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  microdvd: {
    label: 'MicroDVD subtitle format',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  mjpeg: {
    label: 'raw MJPEG video',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  mjpeg_2000: {
    label: 'raw MJPEG 2000 video',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mkvtimestamp_v2: {
    label:
      'extract pts as timecode v2 format, as defined by mkvtoolnix',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  mlp: {
    label: 'raw MLP',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  mlv: {
    label: 'Magic Lantern Video (MLV)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mm: {
    label: 'American Laser Games MM',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mmf: {
    label: 'Yamaha SMAF',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  mods: {
    label: 'MobiClip MODS',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  moflex: {
    label: 'MobiClip MOFLEX',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mov: {
    label: 'QuickTime / MOV',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  mp2: {
    label: 'MP2 (MPEG audio layer 2)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  mp3: {
    label: 'MP3 (MPEG audio layer 3)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  mp4: {
    label: 'MP4 (MPEG-4 Part 14)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  mpc: {
    label: 'Musepack',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mpc8: {
    label: 'Musepack SV8',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mpeg: {
    label: 'MPEG-1 Systems / MPEG program stream',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  mpeg1video: {
    label: 'raw MPEG-1 video',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  mpeg2video: {
    label: 'raw MPEG-2 video',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  mpegts: {
    label: 'MPEG-TS (MPEG-2 Transport Stream)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  mpegtsraw: {
    label: 'raw MPEG-TS (MPEG-2 Transport Stream)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mpegvideo: {
    label: 'raw MPEG video',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mpjpeg: {
    label: 'MIME multipart JPEG',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  mpl2: {
    label: 'MPL2 subtitles',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mpsub: {
    label: 'MPlayer subtitles',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  msf: {
    label: 'Sony PS3 MSF',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  msnwctcp: {
    label: 'MSN TCP Webcam stream',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  msp: {
    label: 'Microsoft Paint (MSP))',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mtaf: {
    label: 'Konami PS2 MTAF',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mtv: {
    label: 'MTV',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mulaw: {
    label: 'PCM mu-law',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  musx: {
    label: 'Eurocom MUSX',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mv: {
    label: 'Silicon Graphics Movie',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mvi: {
    label: 'Motion Pixels MVI',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  mxf: {
    label: 'MXF (Material eXchange Format)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  mxf_d10: {
    label: 'MXF (Material eXchange Format) D-10 Mapping',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  mxf_opatom: {
    label: 'MXF (Material eXchange Format) Operational Pattern Atom',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  mxg: {
    label: 'MxPEG clip',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  nc: {
    label: 'NC camera feed',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  nistsphere: {
    label: 'NIST SPeech HEader REsources',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  nsp: {
    label: 'Computerized Speech Lab NSP',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  nsv: {
    label: 'Nullsoft Streaming Video',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  null: {
    label: 'raw null video',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  nut: {
    label: 'NUT',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  nuv: {
    label: 'NuppelVideo',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  obu: {
    label: 'AV1 low overhead OBU',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  oga: {
    label: 'Ogg Audio',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  ogg: {
    label: 'Ogg',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  ogv: {
    label: 'Ogg Video',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  oma: {
    label: 'Sony OpenMG audio',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  opus: {
    label: 'Ogg Opus',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  osq: {
    label: 'raw OSQ',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  paf: {
    label: 'Amazing Studio Packed Animation File',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pam_pipe: {
    label: 'piped pam sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pbm_pipe: {
    label: 'piped pbm sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pcx_pipe: {
    label: 'piped pcx sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pdv: {
    label: 'PlayDate Video',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pfm_pipe: {
    label: 'piped pfm sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pgm_pipe: {
    label: 'piped pgm sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pgmyuv_pipe: {
    label: 'piped pgmyuv sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pgx_pipe: {
    label: 'piped pgx sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  phm_pipe: {
    label: 'piped phm sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  photocd_pipe: {
    label: 'piped photocd sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pictor_pipe: {
    label: 'piped pictor sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pjs: {
    label: 'PJS (Phoenix Japanimation Society) subtitles',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pmp: {
    label: 'Playstation Portable PMP',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  png_pipe: {
    label: 'piped png sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pp_bnk: {
    label: 'Pro Pinball Series Soundbank',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ppm_pipe: {
    label: 'piped ppm sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  psd_pipe: {
    label: 'piped psd sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  psp: {
    label: 'PSP MP4 (MPEG-4 Part 14)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  psxstr: {
    label: 'Sony Playstation STR',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pva: {
    label: 'TechnoTrend PVA',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  pvf: {
    label: 'PVF (Portable Voice Format)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  qcp: {
    label: 'QCP',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  qdraw_pipe: {
    label: 'piped qdraw sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  qoi_pipe: {
    label: 'piped qoi sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  r3d: {
    label: 'REDCODE R3D',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  rawvideo: {
    label: 'raw video',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  realtext: {
    label: 'RealText subtitle format',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  redspark: {
    label: 'RedSpark',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  rka: {
    label: 'RKA (RK Audio)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  rl2: {
    label: 'RL2',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  rm: {
    label: 'RealMedia',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  roq: {
    label: 'raw id RoQ',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  rpl: {
    label: 'RPL / ARMovie',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  rsd: {
    label: 'GameCube RSD',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  rso: {
    label: 'Lego Mindstorms RSO',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  rtp: {
    label: 'RTP output',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  rtp_mpegts: {
    label: 'RTP/mpegts output format',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  rtsp: {
    label: 'RTSP output',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  s16be: {
    label: 'PCM signed 16-bit big-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  s16le: {
    label: 'PCM signed 16-bit little-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  s24be: {
    label: 'PCM signed 24-bit big-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  s24le: {
    label: 'PCM signed 24-bit little-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  s32be: {
    label: 'PCM signed 32-bit big-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  s32le: {
    label: 'PCM signed 32-bit little-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  s337m: {
    label: 'SMPTE 337M',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  s8: {
    label: 'PCM signed 8-bit',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  sami: {
    label: 'SAMI subtitle format',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sap: {
    label: 'SAP output',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  sbc: {
    label: 'raw SBC',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  sbg: {
    label: 'SBaGen binaural beats script',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  scc: {
    label: 'Scenarist Closed Captions',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  scd: {
    label: 'Square Enix SCD',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sdl2: {
    label: 'SDL2 output device',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  sdns: {
    label: 'Xbox SDNS',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sdp: {
    label: 'SDP',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sdr2: {
    label: 'SDR2',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sds: {
    label: 'MIDI Sample Dump Standard',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sdx: {
    label: 'Sample Dump eXchange',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  segment: {
    label: 'segment',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  ser: {
    label:
      'SER (Simple uncompressed video format for astronomical capturing)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sga: {
    label: 'Digital Pictures SGA',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sgi_pipe: {
    label: 'piped sgi sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  shn: {
    label: 'raw Shorten',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  siff: {
    label: 'Beam Software SIFF',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  simbiosis_imx: {
    label: 'Simbiosis Interactive IMX',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sln: {
    label: 'Asterisk raw pcm',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  smjpeg: {
    label: 'Loki SDL MJPEG',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  smk: {
    label: 'Smacker',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  smoothstreaming: {
    label: 'Smooth Streaming Muxer',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  smush: {
    label: 'LucasArts Smush',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sol: {
    label: 'Sierra SOL',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sox: {
    label: 'SoX (Sound eXchange) native',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  spdif: {
    label: 'IEC 61937 (used on S/PDIF - IEC958)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  spx: {
    label: 'Ogg Speex',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  srt: {
    label: 'SubRip subtitle',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  stl: {
    label: 'Spruce subtitle format',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  stream_segment: {
    label: 'streaming segment muxer',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  streamhash: {
    label: 'Per-stream hash testing',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  subviewer: {
    label: 'SubViewer subtitle format',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  subviewer1: {
    label: 'SubViewer v1 subtitle format',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sunrast_pipe: {
    label: 'piped sunrast sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  sup: {
    label: 'raw HDMV Presentation Graphic Stream subtitles',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  svag: {
    label: 'Konami PS2 SVAG',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  svcd: {
    label: 'MPEG-2 PS (SVCD)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  svg_pipe: {
    label: 'piped svg sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  svs: {
    label: 'Square SVS',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  swf: {
    label: 'SWF (ShockWave Flash)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  tak: {
    label: 'raw TAK',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  tedcaptions: {
    label: 'TED Talks captions',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  tee: {
    label: 'Multiple muxer tee',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  thp: {
    label: 'THP',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  tiertexseq: {
    label: 'Tiertex Limited SEQ',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  tiff_pipe: {
    label: 'piped tiff sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  tmv: {
    label: '8088flex TMV',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  truehd: {
    label: 'raw TrueHD',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  tta: {
    label: 'TTA (True Audio)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  ttml: {
    label: 'TTML subtitle',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  tty: {
    label: 'Tele-typewriter',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  txd: {
    label: 'Renderware TeXture Dictionary',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  ty: {
    label: 'TiVo TY Stream',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  u16be: {
    label: 'PCM unsigned 16-bit big-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  u16le: {
    label: 'PCM unsigned 16-bit little-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  u24be: {
    label: 'PCM unsigned 24-bit big-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  u24le: {
    label: 'PCM unsigned 24-bit little-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  u32be: {
    label: 'PCM unsigned 32-bit big-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  u32le: {
    label: 'PCM unsigned 32-bit little-endian',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  u8: {
    label: 'PCM unsigned 8-bit',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  uncodedframecrc: {
    label: 'uncoded framecrc testing',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  usm: {
    label: 'CRI USM',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  v210: {
    label: 'Uncompressed 4:2:2 10-bit',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  v210x: {
    label: 'Uncompressed 4:2:2 10-bit',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  vag: {
    label: 'Sony PS2 VAG',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  vbn_pipe: {
    label: 'piped vbn sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  vc1: {
    label: 'raw VC-1 video',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  vc1test: {
    label: 'VC-1 test bitstream',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  vcd: {
    label: 'MPEG-1 Systems / MPEG program stream (VCD)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  vidc: {
    label: 'PCM Archimedes VIDC',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  vividas: {
    label: 'Vividas VIV',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  vivo: {
    label: 'Vivo',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  vmd: {
    label: 'Sierra VMD',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  vob: {
    label: 'MPEG-2 PS (VOB)',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  vobsub: {
    label: 'VobSub subtitle format',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  voc: {
    label: 'Creative Voice',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  vpk: {
    label: 'Sony PS2 VPK',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  vplayer: {
    label: 'VPlayer subtitles',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  vqf: {
    label: 'Nippon Telegraph and Telephone Corporation (NTT) TwinVQ',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  vvc: {
    label: 'raw H.266/VVC video',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  w64: {
    label: 'Sony Wave64',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  wady: {
    label: 'Marble WADY',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  wav: {
    label: 'WAV / WAVE (Waveform Audio)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  wavarc: {
    label: 'Waveform Archiver',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  wc3movie: {
    label: 'Wing Commander III movie',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  webm: {
    label: 'WebM',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  webm_chunk: {
    label: 'WebM Chunk Muxer',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  webm_dash_manifest: {
    label: 'WebM DASH Manifest',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  webp: {
    label: 'WebP',
    supportsDemuxing: false,
    supportsMuxing: false,
  },
  webp_pipe: {
    label: 'piped webp sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  webvtt: {
    label: 'WebVTT subtitle',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  wsaud: {
    label: 'Westwood Studios audio',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  wsd: {
    label: 'Wideband Single-bit Data (WSD)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  wsvqa: {
    label: 'Westwood Studios VQA',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  wtv: {
    label: 'Windows Television (WTV)',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  wv: {
    label: 'raw WavPack',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
  wve: {
    label: 'Psion 3 audio',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  x11grab: {
    label: 'X11 screen capture, using XCB',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  xa: {
    label: 'Maxis XA',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  xbin: {
    label: 'eXtended BINary text (XBIN)',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  xbm_pipe: {
    label: 'piped xbm sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  xmd: {
    label: 'Konami XMD',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  xmv: {
    label: 'Microsoft XMV',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  xpm_pipe: {
    label: 'piped xpm sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  xvag: {
    label: 'Sony PS3 XVAG',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  xwd_pipe: {
    label: 'piped xwd sequence',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  xwma: {
    label: 'Microsoft xWMA',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  yop: {
    label: 'Psygnosis YOP',
    supportsDemuxing: true,
    supportsMuxing: false,
  },
  yuv4mpegpipe: {
    label: 'YUV4MPEG pipe',
    supportsDemuxing: true,
    supportsMuxing: true,
  },
}

export const FFMPEG_STRICT_OPTION_CONTENT: FfmpegStrictOptionContent = {
  very: {
    note: 'Strictly conform to a older more strict version of the spec or reference software.',
  },
  strict: {
    note: 'Strictly conform to all the things in the spec no matter what consequences.',
  },
  normal: {
    note: '',
  },
  unofficial: {
    note: 'Allow unofficial extensions.',
  },
  experimental: {
    note: 'Allow non standardized experimental things.',
  },
}
