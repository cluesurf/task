import {
  BackendCompilationOutputContent,
  LlvmArchitectureContent,
  LlvmCpuContent,
  LlvmFeatureContent,
} from '~/code/type/shared/llvm.js'

export const BACKEND_COMPILATION_OUTPUT_CONTENT: BackendCompilationOutputContent =
  {
    assembly: {
      extension: 'asm',
    },
    'llvm-ir': {
      extension: 'll',
    },
    'llvm-bitcode': {
      extension: 'bc',
    },
    binary: {},
  }

export const LLVM_ARCHITECTURE_CONTENT: LlvmArchitectureContent = {
  aarch64: {
    cpu: [
      'a_64_fx',
      'apple_a_10',
      'apple_a_11',
      'apple_a_12',
      'apple_a_13',
      'apple_a_7',
      'apple_a_8',
      'apple_a_9',
      'apple_latest',
      'apple_s_4',
      'apple_s_5',
      'carmel',
      'cortex_a_34',
      'cortex_a_35',
      'cortex_a_53',
      'cortex_a_55',
      'cortex_a_57',
      'cortex_a_65',
      'cortex_a_65_ae',
      'cortex_a_72',
      'cortex_a_73',
      'cortex_a_75',
      'cortex_a_76',
      'cortex_a_76_ae',
      'cortex_a_77',
      'cortex_a_78',
      'cortex_x_1',
      'cyclone',
      'exynos_m_3',
      'exynos_m_4',
      'exynos_m_5',
      'falkor',
      'generic',
      'kryo',
      'neoverse_e_1',
      'neoverse_n_1',
      'saphira',
      'thunderx',
      'thunderx_2_t_99',
      'thunderx_3_t_110',
      'thunderxt_81',
      'thunderxt_83',
      'thunderxt_88',
      'tsv_110',
    ],
    feature: [
      'a_35',
      'a_53',
      'a_55',
      'a_57',
      'a_64_fx',
      'a_65',
      'a_72',
      'a_73',
      'a_75',
      'a_76',
      'a_77',
      'aes',
      'aggressive_fma',
      'alternate_sextload_cvt_f_32_pattern',
      'altnzcv',
      'am',
      'amvs',
      'apple_a_10',
      'apple_a_11',
      'apple_a_12',
      'apple_a_13',
      'apple_a_7',
      'arith_bcc_fusion',
      'arith_cbz_fusion',
      'balance_fp_ops',
      'bf_16',
      'bti',
      'call_saved_x_10',
      'call_saved_x_11',
      'call_saved_x_12',
      'call_saved_x_13',
      'call_saved_x_14',
      'call_saved_x_15',
      'call_saved_x_18',
      'call_saved_x_8',
      'call_saved_x_9',
      'carmel',
      'ccdp',
      'ccidx',
      'ccpp',
      'complxnum',
      'cortex_a_78',
      'cortex_x_1',
      'crc',
      'crypto',
      'custom_cheap_as_move',
      'disable_latency_sched_heuristic',
      'dit',
      'dotprod',
      'ecv',
      'ete',
      'exynos_cheap_as_move',
      'exynosm_3',
      'exynosm_4',
      'f_32_mm',
      'f_64_mm',
      'falkor',
      'fgt',
      'fmi',
      'force_32_bit_jump_tables',
      'fp_armv_8',
      'fp_16_fml',
      'fptoint',
      'fullfp_16',
      'fuse_address',
      'fuse_aes',
      'fuse_arith_logic',
      'fuse_crypto_eor',
      'fuse_csel',
      'fuse_literals',
      'harden_sls_blr',
      'harden_sls_retbr',
      'i_8_mm',
      'jsconv',
      'kryo',
      'lor',
      'lse',
      'lsl_fast',
      'mpam',
      'mte',
      'neon',
      'neoversee_1',
      'neoversen_1',
      'no_neg_immediates',
      'nv',
      'pa',
      'pan',
      'pan_rwv',
      'perfmon',
      'pmu',
      'predictable_select_expensive',
      'predres',
      'rand',
      'ras',
      'rasv_8_4',
      'rcpc',
      'rcpc_immo',
      'rdm',
      'reserve_x_1',
      'reserve_x_10',
      'reserve_x_11',
      'reserve_x_12',
      'reserve_x_13',
      'reserve_x_14',
      'reserve_x_15',
      'reserve_x_18',
      'reserve_x_2',
      'reserve_x_20',
      'reserve_x_21',
      'reserve_x_22',
      'reserve_x_23',
      'reserve_x_24',
      'reserve_x_25',
      'reserve_x_26',
      'reserve_x_27',
      'reserve_x_28',
      'reserve_x_3',
      'reserve_x_30',
      'reserve_x_4',
      'reserve_x_5',
      'reserve_x_6',
      'reserve_x_7',
      'reserve_x_9',
      'saphira',
      'sb',
      'sel_2',
      'sha_2',
      'sha_3',
      'slow_misaligned_128_store',
      'slow_paired_128',
      'slow_strqro_store',
      'sm_4',
      'spe',
      'specrestrict',
      'ssbs',
      'strict_align',
      'sve',
      'sve_2',
      'sve_2_aes',
      'sve_2_bitperm',
      'sve_2_sha_3',
      'sve_2_sm_4',
      'tagged_globals',
      'thunderx',
      'thunderx_2_t_99',
      'thunderx_3_t_110',
      'thunderxt_81',
      'thunderxt_83',
      'thunderxt_88',
      'tlb_rmi',
      'tme',
      'tpidr_el_1',
      'tpidr_el_2',
      'tpidr_el_3',
      'tracev_8_4',
      'trbe',
      'tsv_110',
      'uaops',
      'use_aa',
      'use_experimental_zeroing_pseudos',
      'use_postra_scheduler',
      'use_reciprocal_square_root',
      'v_8_1_a',
      'v_8_2_a',
      'v_8_3_a',
      'v_8_4_a',
      'v_8_5_a',
      'v_8_6_a',
      'vh',
      'zcm',
      'zcz',
      'zcz_fp',
      'zcz_fp_workaround',
      'zcz_gp',
    ],
    host: 'aarch64',
    note: 'AArch64 (little endian)',
  },
  aarch64_32: {
    cpu: [
      'a_64_fx',
      'apple_a_10',
      'apple_a_11',
      'apple_a_12',
      'apple_a_13',
      'apple_a_7',
      'apple_a_8',
      'apple_a_9',
      'apple_latest',
      'apple_s_4',
      'apple_s_5',
      'carmel',
      'cortex_a_34',
      'cortex_a_35',
      'cortex_a_53',
      'cortex_a_55',
      'cortex_a_57',
      'cortex_a_65',
      'cortex_a_65_ae',
      'cortex_a_72',
      'cortex_a_73',
      'cortex_a_75',
      'cortex_a_76',
      'cortex_a_76_ae',
      'cortex_a_77',
      'cortex_a_78',
      'cortex_x_1',
      'cyclone',
      'exynos_m_3',
      'exynos_m_4',
      'exynos_m_5',
      'falkor',
      'generic',
      'kryo',
      'neoverse_e_1',
      'neoverse_n_1',
      'saphira',
      'thunderx',
      'thunderx_2_t_99',
      'thunderx_3_t_110',
      'thunderxt_81',
      'thunderxt_83',
      'thunderxt_88',
      'tsv_110',
    ],
    feature: [
      'a_35',
      'a_53',
      'a_55',
      'a_57',
      'a_64_fx',
      'a_65',
      'a_72',
      'a_73',
      'a_75',
      'a_76',
      'a_77',
      'aes',
      'aggressive_fma',
      'alternate_sextload_cvt_f_32_pattern',
      'altnzcv',
      'am',
      'amvs',
      'apple_a_10',
      'apple_a_11',
      'apple_a_12',
      'apple_a_13',
      'apple_a_7',
      'arith_bcc_fusion',
      'arith_cbz_fusion',
      'balance_fp_ops',
      'bf_16',
      'bti',
      'call_saved_x_10',
      'call_saved_x_11',
      'call_saved_x_12',
      'call_saved_x_13',
      'call_saved_x_14',
      'call_saved_x_15',
      'call_saved_x_18',
      'call_saved_x_8',
      'call_saved_x_9',
      'carmel',
      'ccdp',
      'ccidx',
      'ccpp',
      'complxnum',
      'cortex_a_78',
      'cortex_x_1',
      'crc',
      'crypto',
      'custom_cheap_as_move',
      'disable_latency_sched_heuristic',
      'dit',
      'dotprod',
      'ecv',
      'ete',
      'exynos_cheap_as_move',
      'exynosm_3',
      'exynosm_4',
      'f_32_mm',
      'f_64_mm',
      'falkor',
      'fgt',
      'fmi',
      'force_32_bit_jump_tables',
      'fp_armv_8',
      'fp_16_fml',
      'fptoint',
      'fullfp_16',
      'fuse_address',
      'fuse_aes',
      'fuse_arith_logic',
      'fuse_crypto_eor',
      'fuse_csel',
      'fuse_literals',
      'harden_sls_blr',
      'harden_sls_retbr',
      'i_8_mm',
      'jsconv',
      'kryo',
      'lor',
      'lse',
      'lsl_fast',
      'mpam',
      'mte',
      'neon',
      'neoversee_1',
      'neoversen_1',
      'no_neg_immediates',
      'nv',
      'pa',
      'pan',
      'pan_rwv',
      'perfmon',
      'pmu',
      'predictable_select_expensive',
      'predres',
      'rand',
      'ras',
      'rasv_8_4',
      'rcpc',
      'rcpc_immo',
      'rdm',
      'reserve_x_1',
      'reserve_x_10',
      'reserve_x_11',
      'reserve_x_12',
      'reserve_x_13',
      'reserve_x_14',
      'reserve_x_15',
      'reserve_x_18',
      'reserve_x_2',
      'reserve_x_20',
      'reserve_x_21',
      'reserve_x_22',
      'reserve_x_23',
      'reserve_x_24',
      'reserve_x_25',
      'reserve_x_26',
      'reserve_x_27',
      'reserve_x_28',
      'reserve_x_3',
      'reserve_x_30',
      'reserve_x_4',
      'reserve_x_5',
      'reserve_x_6',
      'reserve_x_7',
      'reserve_x_9',
      'saphira',
      'sb',
      'sel_2',
      'sha_2',
      'sha_3',
      'slow_misaligned_128_store',
      'slow_paired_128',
      'slow_strqro_store',
      'sm_4',
      'spe',
      'specrestrict',
      'ssbs',
      'strict_align',
      'sve',
      'sve_2',
      'sve_2_aes',
      'sve_2_bitperm',
      'sve_2_sha_3',
      'sve_2_sm_4',
      'tagged_globals',
      'thunderx',
      'thunderx_2_t_99',
      'thunderx_3_t_110',
      'thunderxt_81',
      'thunderxt_83',
      'thunderxt_88',
      'tlb_rmi',
      'tme',
      'tpidr_el_1',
      'tpidr_el_2',
      'tpidr_el_3',
      'tracev_8_4',
      'trbe',
      'tsv_110',
      'uaops',
      'use_aa',
      'use_experimental_zeroing_pseudos',
      'use_postra_scheduler',
      'use_reciprocal_square_root',
      'v_8_1_a',
      'v_8_2_a',
      'v_8_3_a',
      'v_8_4_a',
      'v_8_5_a',
      'v_8_6_a',
      'vh',
      'zcm',
      'zcz',
      'zcz_fp',
      'zcz_fp_workaround',
      'zcz_gp',
    ],
    host: 'aarch64_32',
    note: 'AArch64 (little endian ILP32)',
  },
  aarch64_be: {
    cpu: [
      'a_64_fx',
      'apple_a_10',
      'apple_a_11',
      'apple_a_12',
      'apple_a_13',
      'apple_a_7',
      'apple_a_8',
      'apple_a_9',
      'apple_latest',
      'apple_s_4',
      'apple_s_5',
      'carmel',
      'cortex_a_34',
      'cortex_a_35',
      'cortex_a_53',
      'cortex_a_55',
      'cortex_a_57',
      'cortex_a_65',
      'cortex_a_65_ae',
      'cortex_a_72',
      'cortex_a_73',
      'cortex_a_75',
      'cortex_a_76',
      'cortex_a_76_ae',
      'cortex_a_77',
      'cortex_a_78',
      'cortex_x_1',
      'cyclone',
      'exynos_m_3',
      'exynos_m_4',
      'exynos_m_5',
      'falkor',
      'generic',
      'kryo',
      'neoverse_e_1',
      'neoverse_n_1',
      'saphira',
      'thunderx',
      'thunderx_2_t_99',
      'thunderx_3_t_110',
      'thunderxt_81',
      'thunderxt_83',
      'thunderxt_88',
      'tsv_110',
    ],
    feature: [
      'a_35',
      'a_53',
      'a_55',
      'a_57',
      'a_64_fx',
      'a_65',
      'a_72',
      'a_73',
      'a_75',
      'a_76',
      'a_77',
      'aes',
      'aggressive_fma',
      'alternate_sextload_cvt_f_32_pattern',
      'altnzcv',
      'am',
      'amvs',
      'apple_a_10',
      'apple_a_11',
      'apple_a_12',
      'apple_a_13',
      'apple_a_7',
      'arith_bcc_fusion',
      'arith_cbz_fusion',
      'balance_fp_ops',
      'bf_16',
      'bti',
      'call_saved_x_10',
      'call_saved_x_11',
      'call_saved_x_12',
      'call_saved_x_13',
      'call_saved_x_14',
      'call_saved_x_15',
      'call_saved_x_18',
      'call_saved_x_8',
      'call_saved_x_9',
      'carmel',
      'ccdp',
      'ccidx',
      'ccpp',
      'complxnum',
      'cortex_a_78',
      'cortex_x_1',
      'crc',
      'crypto',
      'custom_cheap_as_move',
      'disable_latency_sched_heuristic',
      'dit',
      'dotprod',
      'ecv',
      'ete',
      'exynos_cheap_as_move',
      'exynosm_3',
      'exynosm_4',
      'f_32_mm',
      'f_64_mm',
      'falkor',
      'fgt',
      'fmi',
      'force_32_bit_jump_tables',
      'fp_armv_8',
      'fp_16_fml',
      'fptoint',
      'fullfp_16',
      'fuse_address',
      'fuse_aes',
      'fuse_arith_logic',
      'fuse_crypto_eor',
      'fuse_csel',
      'fuse_literals',
      'harden_sls_blr',
      'harden_sls_retbr',
      'i_8_mm',
      'jsconv',
      'kryo',
      'lor',
      'lse',
      'lsl_fast',
      'mpam',
      'mte',
      'neon',
      'neoversee_1',
      'neoversen_1',
      'no_neg_immediates',
      'nv',
      'pa',
      'pan',
      'pan_rwv',
      'perfmon',
      'pmu',
      'predictable_select_expensive',
      'predres',
      'rand',
      'ras',
      'rasv_8_4',
      'rcpc',
      'rcpc_immo',
      'rdm',
      'reserve_x_1',
      'reserve_x_10',
      'reserve_x_11',
      'reserve_x_12',
      'reserve_x_13',
      'reserve_x_14',
      'reserve_x_15',
      'reserve_x_18',
      'reserve_x_2',
      'reserve_x_20',
      'reserve_x_21',
      'reserve_x_22',
      'reserve_x_23',
      'reserve_x_24',
      'reserve_x_25',
      'reserve_x_26',
      'reserve_x_27',
      'reserve_x_28',
      'reserve_x_3',
      'reserve_x_30',
      'reserve_x_4',
      'reserve_x_5',
      'reserve_x_6',
      'reserve_x_7',
      'reserve_x_9',
      'saphira',
      'sb',
      'sel_2',
      'sha_2',
      'sha_3',
      'slow_misaligned_128_store',
      'slow_paired_128',
      'slow_strqro_store',
      'sm_4',
      'spe',
      'specrestrict',
      'ssbs',
      'strict_align',
      'sve',
      'sve_2',
      'sve_2_aes',
      'sve_2_bitperm',
      'sve_2_sha_3',
      'sve_2_sm_4',
      'tagged_globals',
      'thunderx',
      'thunderx_2_t_99',
      'thunderx_3_t_110',
      'thunderxt_81',
      'thunderxt_83',
      'thunderxt_88',
      'tlb_rmi',
      'tme',
      'tpidr_el_1',
      'tpidr_el_2',
      'tpidr_el_3',
      'tracev_8_4',
      'trbe',
      'tsv_110',
      'uaops',
      'use_aa',
      'use_experimental_zeroing_pseudos',
      'use_postra_scheduler',
      'use_reciprocal_square_root',
      'v_8_1_a',
      'v_8_2_a',
      'v_8_3_a',
      'v_8_4_a',
      'v_8_5_a',
      'v_8_6_a',
      'vh',
      'zcm',
      'zcz',
      'zcz_fp',
      'zcz_fp_workaround',
      'zcz_gp',
    ],
    host: 'aarch64_be',
    note: 'AArch64 (big endian)',
  },
  amdgcn: {
    cpu: [
      'bonaire',
      'carrizo',
      'fiji',
      'generic',
      'generic_hsa',
      'gfx_1010',
      'gfx_1011',
      'gfx_1012',
      'gfx_1030',
      'gfx_600',
      'gfx_601',
      'gfx_700',
      'gfx_701',
      'gfx_702',
      'gfx_703',
      'gfx_704',
      'gfx_801',
      'gfx_802',
      'gfx_803',
      'gfx_810',
      'gfx_900',
      'gfx_902',
      'gfx_904',
      'gfx_906',
      'gfx_908',
      'gfx_909',
      'hainan',
      'hawaii',
      'iceland',
      'kabini',
      'kaveri',
      'mullins',
      'oland',
      'pitcairn',
      'polaris_10',
      'polaris_11',
      'stoney',
      'tahiti',
      'tonga',
      'verde',
    ],
    feature: [
      '16_bit_insts',
      'dump_code',
      'a_16',
      'add_no_carry_insts',
      'aperture_regs',
      'atomic_fadd_insts',
      'auto_waitcnt_before_barrier',
      'ci_insts',
      'code_object_v_3',
      'cumode',
      'dl_insts',
      'dot_1_insts',
      'dot_2_insts',
      'dot_3_insts',
      'dot_4_insts',
      'dot_5_insts',
      'dot_6_insts',
      'dpp',
      'dpp_8',
      'ds_src_2_insts',
      'dumpcode',
      'enable_ds_128',
      'enable_prt_strict_null',
      'fast_denormal_f_32',
      'fast_fmaf',
      'flat_address_space',
      'flat_for_global',
      'flat_global_insts',
      'flat_inst_offsets',
      'flat_scratch_insts',
      'flat_segment_offset_bug',
      'fma_mix_insts',
      'fmaf',
      'fp_64',
      'g_16',
      'gcn_3_encoding',
      'get_wave_id_inst',
      'gfx_10',
      'gfx_10_3_insts',
      'gfx_10_insts',
      'gfx_10_b_encoding',
      'gfx_7_gfx_8_gfx_9_insts',
      'gfx_8_insts',
      'gfx_9',
      'gfx_9_insts',
      'half_rate_64_ops',
      'inst_fwd_prefetch_bug',
      'int_clamp_insts',
      'inv_2_pi_inline_imm',
      'lds_branch_vmem_war_hazard',
      'lds_misaligned_bug',
      'ldsbankcount_16',
      'ldsbankcount_32',
      'load_store_opt',
      'localmemorysize_0',
      'localmemorysize_32768',
      'localmemorysize_65536',
      'mad_mac_f_32_insts',
      'mad_mix_insts',
      'mai_insts',
      'max_private_element_size_16',
      'max_private_element_size_4',
      'max_private_element_size_8',
      'mfma_inline_literal_bug',
      'mimg_r_128',
      'movrel',
      'no_data_dep_hazard',
      'no_sdst_cmpx',
      'no_sram_ecc_support',
      'no_xnack_support',
      'nsa_encoding',
      'nsa_to_vmem_bug',
      'offset_3_f_bug',
      'pk_fmac_f_16_inst',
      'promote_alloca',
      'r_128_a_16',
      'register_banking',
      's_memrealtime',
      's_memtime_inst',
      'scalar_atomics',
      'scalar_flat_scratch_insts',
      'scalar_stores',
      'sdwa',
      'sdwa_mav',
      'sdwa_omod',
      'sdwa_out_mods_vopc',
      'sdwa_scalar',
      'sdwa_sdst',
      'sea_islands',
      'sgpr_init_bug',
      'si_scheduler',
      'smem_to_vector_write_hazard',
      'southern_islands',
      'sram_ecc',
      'trap_handler',
      'trig_reduced_range',
      'unaligned_buffer_access',
      'unaligned_scratch_access',
      'unpacked_d_16_vmem',
      'unsafe_ds_offset_folding',
      'vcmpx_exec_war_hazard',
      'vcmpx_permlane_hazard',
      'vgpr_index_mode',
      'vmem_to_scalar_write_hazard',
      'volcanic_islands',
      'vop_3_literal',
      'vop_3_p',
      'vscnt',
      'wavefrontsize_16',
      'wavefrontsize_32',
      'wavefrontsize_64',
      'xnack',
    ],
    host: 'amdgcn',
    note: 'AMD GCN GPUs',
  },
  arm: {
    cpu: [
      'arm_1020_e',
      'arm_1020_t',
      'arm_1022_e',
      'arm_10_e',
      'arm_10_tdmi',
      'arm_1136_j_s',
      'arm_1136_jf_s',
      'arm_1156_t_2_s',
      'arm_1156_t_2_f_s',
      'arm_1176_j_s',
      'arm_1176_jz_s',
      'arm_1176_jzf_s',
      'arm_710_t',
      'arm_720_t',
      'arm_7_tdmi',
      'arm_7_tdmi_s',
      'arm_8',
      'arm_810',
      'arm_9',
      'arm_920',
      'arm_920_t',
      'arm_922_t',
      'arm_926_ej_s',
      'arm_940_t',
      'arm_946_e_s',
      'arm_966_e_s',
      'arm_968_e_s',
      'arm_9_e',
      'arm_9_tdmi',
      'cortex_a_12',
      'cortex_a_15',
      'cortex_a_17',
      'cortex_a_32',
      'cortex_a_35',
      'cortex_a_5',
      'cortex_a_53',
      'cortex_a_55',
      'cortex_a_57',
      'cortex_a_7',
      'cortex_a_72',
      'cortex_a_73',
      'cortex_a_75',
      'cortex_a_76',
      'cortex_a_76_ae',
      'cortex_a_77',
      'cortex_a_78',
      'cortex_a_8',
      'cortex_a_9',
      'cortex_m_0',
      'cortex_m_0_plus',
      'cortex_m_1',
      'cortex_m_23',
      'cortex_m_3',
      'cortex_m_33',
      'cortex_m_35_p',
      'cortex_m_4',
      'cortex_m_55',
      'cortex_m_7',
      'cortex_r_4',
      'cortex_r_4_f',
      'cortex_r_5',
      'cortex_r_52',
      'cortex_r_7',
      'cortex_r_8',
      'cortex_x_1',
      'cyclone',
      'ep_9312',
      'exynos_m_3',
      'exynos_m_4',
      'exynos_m_5',
      'generic',
      'iwmmxt',
      'krait',
      'kryo',
      'mpcore',
      'mpcorenovfp',
      'neoverse_n_1',
      'sc_000',
      'sc_300',
      'strongarm',
      'strongarm_110',
      'strongarm_1100',
      'strongarm_1110',
      'swift',
      'xscale',
    ],
    feature: [
      '32_bit',
      '8_msecext',
      'a_12',
      'a_15',
      'a_17',
      'a_32',
      'a_35',
      'a_5',
      'a_53',
      'a_55',
      'a_57',
      'a_7',
      'a_72',
      'a_73',
      'a_75',
      'a_76',
      'a_77',
      'a_8',
      'a_9',
      'aclass',
      'acquire_release',
      'aes',
      'armv_2',
      'armv_2_a',
      'armv_3',
      'armv_3_m',
      'armv_4',
      'armv_4_t',
      'armv_5_t',
      'armv_5_te',
      'armv_5_tej',
      'armv_6',
      'armv_6_m',
      'armv_6_j',
      'armv_6_k',
      'armv_6_kz',
      'armv_6_s_m',
      'armv_6_t_2',
      'armv_7_a',
      'armv_7_m',
      'armv_7_r',
      'armv_7_e_m',
      'armv_7_k',
      'armv_7_s',
      'armv_7_ve',
      'armv_8_a',
      'armv_8_m_base',
      'armv_8_m_main',
      'armv_8_r',
      'armv_8_1_a',
      'armv_8_1_m_main',
      'armv_8_2_a',
      'armv_8_3_a',
      'armv_8_4_a',
      'armv_8_5_a',
      'armv_8_6_a',
      'avoid_movs_shop',
      'avoid_partial_cpsr',
      'bf_16',
      'cde',
      'cdecp_0',
      'cdecp_1',
      'cdecp_2',
      'cdecp_3',
      'cdecp_4',
      'cdecp_5',
      'cdecp_6',
      'cdecp_7',
      'cheap_predicable_cpsr',
      'cortex_a_78',
      'cortex_x_1',
      'crc',
      'crypto',
      'd_32',
      'db',
      'dfb',
      'disable_postra_scheduler',
      'dont_widen_vmovs',
      'dotprod',
      'dsp',
      'execute_only',
      'expand_fp_mlx',
      'exynos',
      'fp_armv_8',
      'fp_armv_8_d_16',
      'fp_armv_8_d_16_sp',
      'fp_armv_8_sp',
      'fp_16',
      'fp_16_fml',
      'fp_64',
      'fpao',
      'fpregs',
      'fpregs_16',
      'fpregs_64',
      'fullfp_16',
      'fuse_aes',
      'fuse_literals',
      'hwdiv',
      'hwdiv_arm',
      'i_8_mm',
      'iwmmxt',
      'iwmmxt_2',
      'krait',
      'kryo',
      'lob',
      'long_calls',
      'loop_align',
      'm_3',
      'mclass',
      'mp',
      'muxed_units',
      'mve',
      'mve_fp',
      'mve_1_beat',
      'mve_2_beat',
      'mve_4_beat',
      'nacl_trap',
      'neon',
      'neon_fpmovs',
      'neonfp',
      'no_branch_predictor',
      'no_movt',
      'no_neg_immediates',
      'noarm',
      'nonpipelined_vfp',
      'perfmon',
      'prefer_ishst',
      'prefer_vmovsr',
      'prof_unpr',
      'r_4',
      'r_5',
      'r_52',
      'r_7',
      'ras',
      'rclass',
      'read_tp_hard',
      'reserve_r_9',
      'ret_addr_stack',
      'sb',
      'sha_2',
      'slow_fp_brcc',
      'slow_load_d_subreg',
      'slow_odd_reg',
      'slow_vdup_32',
      'slow_vgetlni_32',
      'slowfpvfmx',
      'slowfpvmlx',
      'soft_float',
      'splat_vfp_neon',
      'strict_align',
      'swift',
      'thumb_mode',
      'thumb_2',
      'trustzone',
      'use_misched',
      'v_4_t',
      'v_5_t',
      'v_5_te',
      'v_6',
      'v_6_k',
      'v_6_m',
      'v_6_t_2',
      'v_7',
      'v_7_clrex',
      'v_8',
      'v_8_1_a',
      'v_8_1_m_main',
      'v_8_2_a',
      'v_8_3_a',
      'v_8_4_a',
      'v_8_5_a',
      'v_8_6_a',
      'v_8_m',
      'v_8_m_main',
      'vfp_2',
      'vfp_2_sp',
      'vfp_3',
      'vfp_3_d_16',
      'vfp_3_d_16_sp',
      'vfp_3_sp',
      'vfp_4',
      'vfp_4_d_16',
      'vfp_4_d_16_sp',
      'vfp_4_sp',
      'virtualization',
      'vldn_align',
      'vmlx_forwarding',
      'vmlx_hazards',
      'wide_stride_vfp',
      'xscale',
      'zcz',
    ],
    host: 'arm',
    note: 'ARM',
  },
  arm64: {
    cpu: [
      'a_64_fx',
      'apple_a_10',
      'apple_a_11',
      'apple_a_12',
      'apple_a_13',
      'apple_a_7',
      'apple_a_8',
      'apple_a_9',
      'apple_latest',
      'apple_s_4',
      'apple_s_5',
      'carmel',
      'cortex_a_34',
      'cortex_a_35',
      'cortex_a_53',
      'cortex_a_55',
      'cortex_a_57',
      'cortex_a_65',
      'cortex_a_65_ae',
      'cortex_a_72',
      'cortex_a_73',
      'cortex_a_75',
      'cortex_a_76',
      'cortex_a_76_ae',
      'cortex_a_77',
      'cortex_a_78',
      'cortex_x_1',
      'cyclone',
      'exynos_m_3',
      'exynos_m_4',
      'exynos_m_5',
      'falkor',
      'generic',
      'kryo',
      'neoverse_e_1',
      'neoverse_n_1',
      'saphira',
      'thunderx',
      'thunderx_2_t_99',
      'thunderx_3_t_110',
      'thunderxt_81',
      'thunderxt_83',
      'thunderxt_88',
      'tsv_110',
    ],
    feature: [
      'a_35',
      'a_53',
      'a_55',
      'a_57',
      'a_64_fx',
      'a_65',
      'a_72',
      'a_73',
      'a_75',
      'a_76',
      'a_77',
      'aes',
      'aggressive_fma',
      'alternate_sextload_cvt_f_32_pattern',
      'altnzcv',
      'am',
      'amvs',
      'apple_a_10',
      'apple_a_11',
      'apple_a_12',
      'apple_a_13',
      'apple_a_7',
      'arith_bcc_fusion',
      'arith_cbz_fusion',
      'balance_fp_ops',
      'bf_16',
      'bti',
      'call_saved_x_10',
      'call_saved_x_11',
      'call_saved_x_12',
      'call_saved_x_13',
      'call_saved_x_14',
      'call_saved_x_15',
      'call_saved_x_18',
      'call_saved_x_8',
      'call_saved_x_9',
      'carmel',
      'ccdp',
      'ccidx',
      'ccpp',
      'complxnum',
      'cortex_a_78',
      'cortex_x_1',
      'crc',
      'crypto',
      'custom_cheap_as_move',
      'disable_latency_sched_heuristic',
      'dit',
      'dotprod',
      'ecv',
      'ete',
      'exynos_cheap_as_move',
      'exynosm_3',
      'exynosm_4',
      'f_32_mm',
      'f_64_mm',
      'falkor',
      'fgt',
      'fmi',
      'force_32_bit_jump_tables',
      'fp_armv_8',
      'fp_16_fml',
      'fptoint',
      'fullfp_16',
      'fuse_address',
      'fuse_aes',
      'fuse_arith_logic',
      'fuse_crypto_eor',
      'fuse_csel',
      'fuse_literals',
      'harden_sls_blr',
      'harden_sls_retbr',
      'i_8_mm',
      'jsconv',
      'kryo',
      'lor',
      'lse',
      'lsl_fast',
      'mpam',
      'mte',
      'neon',
      'neoversee_1',
      'neoversen_1',
      'no_neg_immediates',
      'nv',
      'pa',
      'pan',
      'pan_rwv',
      'perfmon',
      'pmu',
      'predictable_select_expensive',
      'predres',
      'rand',
      'ras',
      'rasv_8_4',
      'rcpc',
      'rcpc_immo',
      'rdm',
      'reserve_x_1',
      'reserve_x_10',
      'reserve_x_11',
      'reserve_x_12',
      'reserve_x_13',
      'reserve_x_14',
      'reserve_x_15',
      'reserve_x_18',
      'reserve_x_2',
      'reserve_x_20',
      'reserve_x_21',
      'reserve_x_22',
      'reserve_x_23',
      'reserve_x_24',
      'reserve_x_25',
      'reserve_x_26',
      'reserve_x_27',
      'reserve_x_28',
      'reserve_x_3',
      'reserve_x_30',
      'reserve_x_4',
      'reserve_x_5',
      'reserve_x_6',
      'reserve_x_7',
      'reserve_x_9',
      'saphira',
      'sb',
      'sel_2',
      'sha_2',
      'sha_3',
      'slow_misaligned_128_store',
      'slow_paired_128',
      'slow_strqro_store',
      'sm_4',
      'spe',
      'specrestrict',
      'ssbs',
      'strict_align',
      'sve',
      'sve_2',
      'sve_2_aes',
      'sve_2_bitperm',
      'sve_2_sha_3',
      'sve_2_sm_4',
      'tagged_globals',
      'thunderx',
      'thunderx_2_t_99',
      'thunderx_3_t_110',
      'thunderxt_81',
      'thunderxt_83',
      'thunderxt_88',
      'tlb_rmi',
      'tme',
      'tpidr_el_1',
      'tpidr_el_2',
      'tpidr_el_3',
      'tracev_8_4',
      'trbe',
      'tsv_110',
      'uaops',
      'use_aa',
      'use_experimental_zeroing_pseudos',
      'use_postra_scheduler',
      'use_reciprocal_square_root',
      'v_8_1_a',
      'v_8_2_a',
      'v_8_3_a',
      'v_8_4_a',
      'v_8_5_a',
      'v_8_6_a',
      'vh',
      'zcm',
      'zcz',
      'zcz_fp',
      'zcz_fp_workaround',
      'zcz_gp',
    ],
    host: 'arm64',
    note: 'ARM64 (little endian)',
  },
  arm64_32: {
    cpu: [
      'a_64_fx',
      'apple_a_10',
      'apple_a_11',
      'apple_a_12',
      'apple_a_13',
      'apple_a_7',
      'apple_a_8',
      'apple_a_9',
      'apple_latest',
      'apple_s_4',
      'apple_s_5',
      'carmel',
      'cortex_a_34',
      'cortex_a_35',
      'cortex_a_53',
      'cortex_a_55',
      'cortex_a_57',
      'cortex_a_65',
      'cortex_a_65_ae',
      'cortex_a_72',
      'cortex_a_73',
      'cortex_a_75',
      'cortex_a_76',
      'cortex_a_76_ae',
      'cortex_a_77',
      'cortex_a_78',
      'cortex_x_1',
      'cyclone',
      'exynos_m_3',
      'exynos_m_4',
      'exynos_m_5',
      'falkor',
      'generic',
      'kryo',
      'neoverse_e_1',
      'neoverse_n_1',
      'saphira',
      'thunderx',
      'thunderx_2_t_99',
      'thunderx_3_t_110',
      'thunderxt_81',
      'thunderxt_83',
      'thunderxt_88',
      'tsv_110',
    ],
    feature: [
      'a_35',
      'a_53',
      'a_55',
      'a_57',
      'a_64_fx',
      'a_65',
      'a_72',
      'a_73',
      'a_75',
      'a_76',
      'a_77',
      'aes',
      'aggressive_fma',
      'alternate_sextload_cvt_f_32_pattern',
      'altnzcv',
      'am',
      'amvs',
      'apple_a_10',
      'apple_a_11',
      'apple_a_12',
      'apple_a_13',
      'apple_a_7',
      'arith_bcc_fusion',
      'arith_cbz_fusion',
      'balance_fp_ops',
      'bf_16',
      'bti',
      'call_saved_x_10',
      'call_saved_x_11',
      'call_saved_x_12',
      'call_saved_x_13',
      'call_saved_x_14',
      'call_saved_x_15',
      'call_saved_x_18',
      'call_saved_x_8',
      'call_saved_x_9',
      'carmel',
      'ccdp',
      'ccidx',
      'ccpp',
      'complxnum',
      'cortex_a_78',
      'cortex_x_1',
      'crc',
      'crypto',
      'custom_cheap_as_move',
      'disable_latency_sched_heuristic',
      'dit',
      'dotprod',
      'ecv',
      'ete',
      'exynos_cheap_as_move',
      'exynosm_3',
      'exynosm_4',
      'f_32_mm',
      'f_64_mm',
      'falkor',
      'fgt',
      'fmi',
      'force_32_bit_jump_tables',
      'fp_armv_8',
      'fp_16_fml',
      'fptoint',
      'fullfp_16',
      'fuse_address',
      'fuse_aes',
      'fuse_arith_logic',
      'fuse_crypto_eor',
      'fuse_csel',
      'fuse_literals',
      'harden_sls_blr',
      'harden_sls_retbr',
      'i_8_mm',
      'jsconv',
      'kryo',
      'lor',
      'lse',
      'lsl_fast',
      'mpam',
      'mte',
      'neon',
      'neoversee_1',
      'neoversen_1',
      'no_neg_immediates',
      'nv',
      'pa',
      'pan',
      'pan_rwv',
      'perfmon',
      'pmu',
      'predictable_select_expensive',
      'predres',
      'rand',
      'ras',
      'rasv_8_4',
      'rcpc',
      'rcpc_immo',
      'rdm',
      'reserve_x_1',
      'reserve_x_10',
      'reserve_x_11',
      'reserve_x_12',
      'reserve_x_13',
      'reserve_x_14',
      'reserve_x_15',
      'reserve_x_18',
      'reserve_x_2',
      'reserve_x_20',
      'reserve_x_21',
      'reserve_x_22',
      'reserve_x_23',
      'reserve_x_24',
      'reserve_x_25',
      'reserve_x_26',
      'reserve_x_27',
      'reserve_x_28',
      'reserve_x_3',
      'reserve_x_30',
      'reserve_x_4',
      'reserve_x_5',
      'reserve_x_6',
      'reserve_x_7',
      'reserve_x_9',
      'saphira',
      'sb',
      'sel_2',
      'sha_2',
      'sha_3',
      'slow_misaligned_128_store',
      'slow_paired_128',
      'slow_strqro_store',
      'sm_4',
      'spe',
      'specrestrict',
      'ssbs',
      'strict_align',
      'sve',
      'sve_2',
      'sve_2_aes',
      'sve_2_bitperm',
      'sve_2_sha_3',
      'sve_2_sm_4',
      'tagged_globals',
      'thunderx',
      'thunderx_2_t_99',
      'thunderx_3_t_110',
      'thunderxt_81',
      'thunderxt_83',
      'thunderxt_88',
      'tlb_rmi',
      'tme',
      'tpidr_el_1',
      'tpidr_el_2',
      'tpidr_el_3',
      'tracev_8_4',
      'trbe',
      'tsv_110',
      'uaops',
      'use_aa',
      'use_experimental_zeroing_pseudos',
      'use_postra_scheduler',
      'use_reciprocal_square_root',
      'v_8_1_a',
      'v_8_2_a',
      'v_8_3_a',
      'v_8_4_a',
      'v_8_5_a',
      'v_8_6_a',
      'vh',
      'zcm',
      'zcz',
      'zcz_fp',
      'zcz_fp_workaround',
      'zcz_gp',
    ],
    host: 'arm64_32',
    note: 'ARM64 (little endian ILP32)',
  },
  armeb: {
    cpu: [
      'arm_1020_e',
      'arm_1020_t',
      'arm_1022_e',
      'arm_10_e',
      'arm_10_tdmi',
      'arm_1136_j_s',
      'arm_1136_jf_s',
      'arm_1156_t_2_s',
      'arm_1156_t_2_f_s',
      'arm_1176_j_s',
      'arm_1176_jz_s',
      'arm_1176_jzf_s',
      'arm_710_t',
      'arm_720_t',
      'arm_7_tdmi',
      'arm_7_tdmi_s',
      'arm_8',
      'arm_810',
      'arm_9',
      'arm_920',
      'arm_920_t',
      'arm_922_t',
      'arm_926_ej_s',
      'arm_940_t',
      'arm_946_e_s',
      'arm_966_e_s',
      'arm_968_e_s',
      'arm_9_e',
      'arm_9_tdmi',
      'cortex_a_12',
      'cortex_a_15',
      'cortex_a_17',
      'cortex_a_32',
      'cortex_a_35',
      'cortex_a_5',
      'cortex_a_53',
      'cortex_a_55',
      'cortex_a_57',
      'cortex_a_7',
      'cortex_a_72',
      'cortex_a_73',
      'cortex_a_75',
      'cortex_a_76',
      'cortex_a_76_ae',
      'cortex_a_77',
      'cortex_a_78',
      'cortex_a_8',
      'cortex_a_9',
      'cortex_m_0',
      'cortex_m_0_plus',
      'cortex_m_1',
      'cortex_m_23',
      'cortex_m_3',
      'cortex_m_33',
      'cortex_m_35_p',
      'cortex_m_4',
      'cortex_m_55',
      'cortex_m_7',
      'cortex_r_4',
      'cortex_r_4_f',
      'cortex_r_5',
      'cortex_r_52',
      'cortex_r_7',
      'cortex_r_8',
      'cortex_x_1',
      'cyclone',
      'ep_9312',
      'exynos_m_3',
      'exynos_m_4',
      'exynos_m_5',
      'generic',
      'iwmmxt',
      'krait',
      'kryo',
      'mpcore',
      'mpcorenovfp',
      'neoverse_n_1',
      'sc_000',
      'sc_300',
      'strongarm',
      'strongarm_110',
      'strongarm_1100',
      'strongarm_1110',
      'swift',
      'xscale',
    ],
    feature: [
      '32_bit',
      '8_msecext',
      'a_12',
      'a_15',
      'a_17',
      'a_32',
      'a_35',
      'a_5',
      'a_53',
      'a_55',
      'a_57',
      'a_7',
      'a_72',
      'a_73',
      'a_75',
      'a_76',
      'a_77',
      'a_8',
      'a_9',
      'aclass',
      'acquire_release',
      'aes',
      'armv_2',
      'armv_2_a',
      'armv_3',
      'armv_3_m',
      'armv_4',
      'armv_4_t',
      'armv_5_t',
      'armv_5_te',
      'armv_5_tej',
      'armv_6',
      'armv_6_m',
      'armv_6_j',
      'armv_6_k',
      'armv_6_kz',
      'armv_6_s_m',
      'armv_6_t_2',
      'armv_7_a',
      'armv_7_m',
      'armv_7_r',
      'armv_7_e_m',
      'armv_7_k',
      'armv_7_s',
      'armv_7_ve',
      'armv_8_a',
      'armv_8_m_base',
      'armv_8_m_main',
      'armv_8_r',
      'armv_8_1_a',
      'armv_8_1_m_main',
      'armv_8_2_a',
      'armv_8_3_a',
      'armv_8_4_a',
      'armv_8_5_a',
      'armv_8_6_a',
      'avoid_movs_shop',
      'avoid_partial_cpsr',
      'bf_16',
      'cde',
      'cdecp_0',
      'cdecp_1',
      'cdecp_2',
      'cdecp_3',
      'cdecp_4',
      'cdecp_5',
      'cdecp_6',
      'cdecp_7',
      'cheap_predicable_cpsr',
      'cortex_a_78',
      'cortex_x_1',
      'crc',
      'crypto',
      'd_32',
      'db',
      'dfb',
      'disable_postra_scheduler',
      'dont_widen_vmovs',
      'dotprod',
      'dsp',
      'execute_only',
      'expand_fp_mlx',
      'exynos',
      'fp_armv_8',
      'fp_armv_8_d_16',
      'fp_armv_8_d_16_sp',
      'fp_armv_8_sp',
      'fp_16',
      'fp_16_fml',
      'fp_64',
      'fpao',
      'fpregs',
      'fpregs_16',
      'fpregs_64',
      'fullfp_16',
      'fuse_aes',
      'fuse_literals',
      'hwdiv',
      'hwdiv_arm',
      'i_8_mm',
      'iwmmxt',
      'iwmmxt_2',
      'krait',
      'kryo',
      'lob',
      'long_calls',
      'loop_align',
      'm_3',
      'mclass',
      'mp',
      'muxed_units',
      'mve',
      'mve_fp',
      'mve_1_beat',
      'mve_2_beat',
      'mve_4_beat',
      'nacl_trap',
      'neon',
      'neon_fpmovs',
      'neonfp',
      'no_branch_predictor',
      'no_movt',
      'no_neg_immediates',
      'noarm',
      'nonpipelined_vfp',
      'perfmon',
      'prefer_ishst',
      'prefer_vmovsr',
      'prof_unpr',
      'r_4',
      'r_5',
      'r_52',
      'r_7',
      'ras',
      'rclass',
      'read_tp_hard',
      'reserve_r_9',
      'ret_addr_stack',
      'sb',
      'sha_2',
      'slow_fp_brcc',
      'slow_load_d_subreg',
      'slow_odd_reg',
      'slow_vdup_32',
      'slow_vgetlni_32',
      'slowfpvfmx',
      'slowfpvmlx',
      'soft_float',
      'splat_vfp_neon',
      'strict_align',
      'swift',
      'thumb_mode',
      'thumb_2',
      'trustzone',
      'use_misched',
      'v_4_t',
      'v_5_t',
      'v_5_te',
      'v_6',
      'v_6_k',
      'v_6_m',
      'v_6_t_2',
      'v_7',
      'v_7_clrex',
      'v_8',
      'v_8_1_a',
      'v_8_1_m_main',
      'v_8_2_a',
      'v_8_3_a',
      'v_8_4_a',
      'v_8_5_a',
      'v_8_6_a',
      'v_8_m',
      'v_8_m_main',
      'vfp_2',
      'vfp_2_sp',
      'vfp_3',
      'vfp_3_d_16',
      'vfp_3_d_16_sp',
      'vfp_3_sp',
      'vfp_4',
      'vfp_4_d_16',
      'vfp_4_d_16_sp',
      'vfp_4_sp',
      'virtualization',
      'vldn_align',
      'vmlx_forwarding',
      'vmlx_hazards',
      'wide_stride_vfp',
      'xscale',
      'zcz',
    ],
    host: 'armeb',
    note: 'ARM (big endian)',
  },
  avr: {
    cpu: [
      'at_43_usb_320',
      'at_43_usb_355',
      'at_76_c_711',
      'at_86_rf_401',
      'at_90_c_8534',
      'at_90_can_128',
      'at_90_can_32',
      'at_90_can_64',
      'at_90_pwm_1',
      'at_90_pwm_161',
      'at_90_pwm_2',
      'at_90_pwm_216',
      'at_90_pwm_2_b',
      'at_90_pwm_3',
      'at_90_pwm_316',
      'at_90_pwm_3_b',
      'at_90_pwm_81',
      'at_90_s_1200',
      'at_90_s_2313',
      'at_90_s_2323',
      'at_90_s_2333',
      'at_90_s_2343',
      'at_90_s_4414',
      'at_90_s_4433',
      'at_90_s_4434',
      'at_90_s_8515',
      'at_90_s_8535',
      'at_90_scr_100',
      'at_90_usb_1286',
      'at_90_usb_1287',
      'at_90_usb_162',
      'at_90_usb_646',
      'at_90_usb_647',
      'at_90_usb_82',
      'at_94_k',
      'ata_5272',
      'ata_5505',
      'ata_5790',
      'ata_5795',
      'ata_6285',
      'ata_6286',
      'ata_6289',
      'atmega_103',
      'atmega_128',
      'atmega_1280',
      'atmega_1281',
      'atmega_1284',
      'atmega_1284_p',
      'atmega_1284_rfr_2',
      'atmega_128_a',
      'atmega_128_rfa_1',
      'atmega_128_rfr_2',
      'atmega_16',
      'atmega_161',
      'atmega_162',
      'atmega_163',
      'atmega_164_a',
      'atmega_164_p',
      'atmega_164_pa',
      'atmega_165',
      'atmega_165_a',
      'atmega_165_p',
      'atmega_165_pa',
      'atmega_168',
      'atmega_168_a',
      'atmega_168_p',
      'atmega_168_pa',
      'atmega_169',
      'atmega_169_a',
      'atmega_169_p',
      'atmega_169_pa',
      'atmega_16_a',
      'atmega_16_hva',
      'atmega_16_hva_2',
      'atmega_16_hvb',
      'atmega_16_hvbrevb',
      'atmega_16_m_1',
      'atmega_16_u_2',
      'atmega_16_u_4',
      'atmega_2560',
      'atmega_2561',
      'atmega_2564_rfr_2',
      'atmega_256_rfr_2',
      'atmega_32',
      'atmega_323',
      'atmega_324_a',
      'atmega_324_p',
      'atmega_324_pa',
      'atmega_325',
      'atmega_3250',
      'atmega_3250_a',
      'atmega_3250_p',
      'atmega_3250_pa',
      'atmega_325_a',
      'atmega_325_p',
      'atmega_325_pa',
      'atmega_328',
      'atmega_328_p',
      'atmega_329',
      'atmega_3290',
      'atmega_3290_a',
      'atmega_3290_p',
      'atmega_3290_pa',
      'atmega_329_a',
      'atmega_329_p',
      'atmega_329_pa',
      'atmega_32_a',
      'atmega_32_c_1',
      'atmega_32_hvb',
      'atmega_32_hvbrevb',
      'atmega_32_m_1',
      'atmega_32_u_2',
      'atmega_32_u_4',
      'atmega_32_u_6',
      'atmega_406',
      'atmega_48',
      'atmega_48_a',
      'atmega_48_p',
      'atmega_48_pa',
      'atmega_64',
      'atmega_640',
      'atmega_644',
      'atmega_644_a',
      'atmega_644_p',
      'atmega_644_pa',
      'atmega_644_rfr_2',
      'atmega_645',
      'atmega_6450',
      'atmega_6450_a',
      'atmega_6450_p',
      'atmega_645_a',
      'atmega_645_p',
      'atmega_649',
      'atmega_6490',
      'atmega_6490_a',
      'atmega_6490_p',
      'atmega_649_a',
      'atmega_649_p',
      'atmega_64_a',
      'atmega_64_c_1',
      'atmega_64_hve',
      'atmega_64_m_1',
      'atmega_64_rfr_2',
      'atmega_8',
      'atmega_8515',
      'atmega_8535',
      'atmega_88',
      'atmega_88_a',
      'atmega_88_p',
      'atmega_88_pa',
      'atmega_8_a',
      'atmega_8_hva',
      'atmega_8_u_2',
      'attiny_10',
      'attiny_102',
      'attiny_104',
      'attiny_11',
      'attiny_12',
      'attiny_13',
      'attiny_13_a',
      'attiny_15',
      'attiny_1634',
      'attiny_167',
      'attiny_20',
      'attiny_22',
      'attiny_2313',
      'attiny_2313_a',
      'attiny_24',
      'attiny_24_a',
      'attiny_25',
      'attiny_26',
      'attiny_261',
      'attiny_261_a',
      'attiny_28',
      'attiny_4',
      'attiny_40',
      'attiny_4313',
      'attiny_43_u',
      'attiny_44',
      'attiny_44_a',
      'attiny_45',
      'attiny_461',
      'attiny_461_a',
      'attiny_48',
      'attiny_5',
      'attiny_828',
      'attiny_84',
      'attiny_84_a',
      'attiny_85',
      'attiny_861',
      'attiny_861_a',
      'attiny_87',
      'attiny_88',
      'attiny_9',
      'atxmega_128_a_1',
      'atxmega_128_a_1_u',
      'atxmega_128_a_3',
      'atxmega_128_a_3_u',
      'atxmega_128_a_4_u',
      'atxmega_128_b_1',
      'atxmega_128_b_3',
      'atxmega_128_c_3',
      'atxmega_128_d_3',
      'atxmega_128_d_4',
      'atxmega_16_a_4',
      'atxmega_16_a_4_u',
      'atxmega_16_c_4',
      'atxmega_16_d_4',
      'atxmega_16_e_5',
      'atxmega_192_a_3',
      'atxmega_192_a_3_u',
      'atxmega_192_c_3',
      'atxmega_192_d_3',
      'atxmega_256_a_3',
      'atxmega_256_a_3_b',
      'atxmega_256_a_3_bu',
      'atxmega_256_a_3_u',
      'atxmega_256_c_3',
      'atxmega_256_d_3',
      'atxmega_32_a_4',
      'atxmega_32_a_4_u',
      'atxmega_32_c_4',
      'atxmega_32_d_4',
      'atxmega_32_e_5',
      'atxmega_32_x_1',
      'atxmega_384_c_3',
      'atxmega_384_d_3',
      'atxmega_64_a_1',
      'atxmega_64_a_1_u',
      'atxmega_64_a_3',
      'atxmega_64_a_3_u',
      'atxmega_64_a_4_u',
      'atxmega_64_b_1',
      'atxmega_64_b_3',
      'atxmega_64_c_3',
      'atxmega_64_d_3',
      'atxmega_64_d_4',
      'atxmega_8_e_5',
      'avr_1',
      'avr_2',
      'avr_25',
      'avr_3',
      'avr_31',
      'avr_35',
      'avr_4',
      'avr_5',
      'avr_51',
      'avr_6',
      'avrtiny',
      'avrxmega_1',
      'avrxmega_2',
      'avrxmega_3',
      'avrxmega_4',
      'avrxmega_5',
      'avrxmega_6',
      'avrxmega_7',
      'm_3000',
    ],
    feature: [
      'addsubiw',
      'avr_0',
      'avr_1',
      'avr_2',
      'avr_25',
      'avr_3',
      'avr_31',
      'avr_35',
      'avr_4',
      'avr_5',
      'avr_51',
      'avr_6',
      'avrtiny',
      'break',
      'des',
      'eijmpcall',
      'elpm',
      'elpmx',
      'ijmpcall',
      'jmpcall',
      'lpm',
      'lpmx',
      'memmappedregs',
      'movw',
      'mul',
      'rmw',
      'smallstack',
      'special',
      'spm',
      'spmx',
      'sram',
      'tinyencoding',
      'xmega',
      'xmegau',
    ],
    host: 'avr',
    note: 'Atmel AVR Microcontroller',
  },
  bpf: {
    cpu: ['generic', 'probe', 'v_1', 'v_2', 'v_3'],
    feature: ['alu_32', 'dummy', 'dwarfris'],
    host: 'bpf',
    note: 'BPF (host endian)',
  },
  bpfeb: {
    cpu: ['generic', 'probe', 'v_1', 'v_2', 'v_3'],
    feature: ['alu_32', 'dummy', 'dwarfris'],
    host: 'bpfeb',
    note: 'BPF (big endian)',
  },
  bpfel: {
    cpu: ['generic', 'probe', 'v_1', 'v_2', 'v_3'],
    feature: ['alu_32', 'dummy', 'dwarfris'],
    host: 'bpfel',
    note: 'BPF (little endian)',
  },
  hexagon: {
    cpu: [
      'generic',
      'hexagonv_5',
      'hexagonv_55',
      'hexagonv_60',
      'hexagonv_62',
      'hexagonv_65',
      'hexagonv_66',
      'hexagonv_67',
      'hexagonv_67_t',
    ],
    feature: [
      'audio',
      'compound',
      'duplex',
      'hvx',
      'hvx_length_128_b',
      'hvx_length_64_b',
      'hvxv_60',
      'hvxv_62',
      'hvxv_65',
      'hvxv_66',
      'hvxv_67',
      'long_calls',
      'mem_noshuf',
      'memops',
      'noreturn_stack_elim',
      'nvj',
      'nvs',
      'packets',
      'prev_65',
      'reserved_r_19',
      'small_data',
      'tinycore',
      'unsafe_fp',
      'v_5',
      'v_55',
      'v_60',
      'v_62',
      'v_65',
      'v_66',
      'v_67',
      'zreg',
    ],
    host: 'hexagon',
    note: 'Hexagon',
  },
  lanai: {
    cpu: [],
    feature: [],
    host: 'lanai',
    note: 'Lanai',
  },
  mips: {
    cpu: [
      'generic',
      'mips_1',
      'mips_2',
      'mips_3',
      'mips_32',
      'mips_32_r_2',
      'mips_32_r_3',
      'mips_32_r_5',
      'mips_32_r_6',
      'mips_4',
      'mips_5',
      'mips_64',
      'mips_64_r_2',
      'mips_64_r_3',
      'mips_64_r_5',
      'mips_64_r_6',
      'octeon',
      'octeon',
      'p_5600',
    ],
    feature: [
      'abs_2008',
      'cnmips',
      'cnmipsp',
      'crc',
      'dsp',
      'dspr_2',
      'dspr_3',
      'eva',
      'fp_64',
      'fpxx',
      'ginv',
      'gp_64',
      'long_calls',
      'micromips',
      'mips_1',
      'mips_16',
      'mips_2',
      'mips_3',
      'mips_32',
      'mips_32_r_2',
      'mips_32_r_3',
      'mips_32_r_5',
      'mips_32_r_6',
      'mips_3_32',
      'mips_3_32_r_2',
      'mips_3_d',
      'mips_4',
      'mips_4_32',
      'mips_4_32_r_2',
      'mips_5',
      'mips_5_32_r_2',
      'mips_64',
      'mips_64_r_2',
      'mips_64_r_3',
      'mips_64_r_5',
      'mips_64_r_6',
      'msa',
      'mt',
      'nan_2008',
      'noabicalls',
      'nomadd_4',
      'nooddspreg',
      'p_5600',
      'ptr_64',
      'single_float',
      'soft_float',
      'sym_32',
      'use_indirect_jump_hazard',
      'use_tcc_in_div',
      'vfpu',
      'virt',
      'xgot',
    ],
    host: 'mips',
    note: 'MIPS (32-bit big endian)',
  },
  mips64: {
    cpu: [
      'generic',
      'mips_1',
      'mips_2',
      'mips_3',
      'mips_32',
      'mips_32_r_2',
      'mips_32_r_3',
      'mips_32_r_5',
      'mips_32_r_6',
      'mips_4',
      'mips_5',
      'mips_64',
      'mips_64_r_2',
      'mips_64_r_3',
      'mips_64_r_5',
      'mips_64_r_6',
      'octeon',
      'octeon',
      'p_5600',
    ],
    feature: [
      'abs_2008',
      'cnmips',
      'cnmipsp',
      'crc',
      'dsp',
      'dspr_2',
      'dspr_3',
      'eva',
      'fp_64',
      'fpxx',
      'ginv',
      'gp_64',
      'long_calls',
      'micromips',
      'mips_1',
      'mips_16',
      'mips_2',
      'mips_3',
      'mips_32',
      'mips_32_r_2',
      'mips_32_r_3',
      'mips_32_r_5',
      'mips_32_r_6',
      'mips_3_32',
      'mips_3_32_r_2',
      'mips_3_d',
      'mips_4',
      'mips_4_32',
      'mips_4_32_r_2',
      'mips_5',
      'mips_5_32_r_2',
      'mips_64',
      'mips_64_r_2',
      'mips_64_r_3',
      'mips_64_r_5',
      'mips_64_r_6',
      'msa',
      'mt',
      'nan_2008',
      'noabicalls',
      'nomadd_4',
      'nooddspreg',
      'p_5600',
      'ptr_64',
      'single_float',
      'soft_float',
      'sym_32',
      'use_indirect_jump_hazard',
      'use_tcc_in_div',
      'vfpu',
      'virt',
      'xgot',
    ],
    host: 'mips64',
    note: 'MIPS (64-bit big endian)',
  },
  mips64el: {
    cpu: [
      'generic',
      'mips_1',
      'mips_2',
      'mips_3',
      'mips_32',
      'mips_32_r_2',
      'mips_32_r_3',
      'mips_32_r_5',
      'mips_32_r_6',
      'mips_4',
      'mips_5',
      'mips_64',
      'mips_64_r_2',
      'mips_64_r_3',
      'mips_64_r_5',
      'mips_64_r_6',
      'octeon',
      'octeon',
      'p_5600',
    ],
    feature: [
      'abs_2008',
      'cnmips',
      'cnmipsp',
      'crc',
      'dsp',
      'dspr_2',
      'dspr_3',
      'eva',
      'fp_64',
      'fpxx',
      'ginv',
      'gp_64',
      'long_calls',
      'micromips',
      'mips_1',
      'mips_16',
      'mips_2',
      'mips_3',
      'mips_32',
      'mips_32_r_2',
      'mips_32_r_3',
      'mips_32_r_5',
      'mips_32_r_6',
      'mips_3_32',
      'mips_3_32_r_2',
      'mips_3_d',
      'mips_4',
      'mips_4_32',
      'mips_4_32_r_2',
      'mips_5',
      'mips_5_32_r_2',
      'mips_64',
      'mips_64_r_2',
      'mips_64_r_3',
      'mips_64_r_5',
      'mips_64_r_6',
      'msa',
      'mt',
      'nan_2008',
      'noabicalls',
      'nomadd_4',
      'nooddspreg',
      'p_5600',
      'ptr_64',
      'single_float',
      'soft_float',
      'sym_32',
      'use_indirect_jump_hazard',
      'use_tcc_in_div',
      'vfpu',
      'virt',
      'xgot',
    ],
    host: 'mips64el',
    note: 'MIPS (64-bit little endian)',
  },
  mipsel: {
    cpu: [
      'generic',
      'mips_1',
      'mips_2',
      'mips_3',
      'mips_32',
      'mips_32_r_2',
      'mips_32_r_3',
      'mips_32_r_5',
      'mips_32_r_6',
      'mips_4',
      'mips_5',
      'mips_64',
      'mips_64_r_2',
      'mips_64_r_3',
      'mips_64_r_5',
      'mips_64_r_6',
      'octeon',
      'octeon',
      'p_5600',
    ],
    feature: [
      'abs_2008',
      'cnmips',
      'cnmipsp',
      'crc',
      'dsp',
      'dspr_2',
      'dspr_3',
      'eva',
      'fp_64',
      'fpxx',
      'ginv',
      'gp_64',
      'long_calls',
      'micromips',
      'mips_1',
      'mips_16',
      'mips_2',
      'mips_3',
      'mips_32',
      'mips_32_r_2',
      'mips_32_r_3',
      'mips_32_r_5',
      'mips_32_r_6',
      'mips_3_32',
      'mips_3_32_r_2',
      'mips_3_d',
      'mips_4',
      'mips_4_32',
      'mips_4_32_r_2',
      'mips_5',
      'mips_5_32_r_2',
      'mips_64',
      'mips_64_r_2',
      'mips_64_r_3',
      'mips_64_r_5',
      'mips_64_r_6',
      'msa',
      'mt',
      'nan_2008',
      'noabicalls',
      'nomadd_4',
      'nooddspreg',
      'p_5600',
      'ptr_64',
      'single_float',
      'soft_float',
      'sym_32',
      'use_indirect_jump_hazard',
      'use_tcc_in_div',
      'vfpu',
      'virt',
      'xgot',
    ],
    host: 'mipsel',
    note: 'MIPS (32-bit little endian)',
  },
  msp430: {
    cpu: ['generic', 'msp_430', 'msp_430_x'],
    feature: ['ext', 'hwmult_16', 'hwmult_32', 'hwmultf_5'],
    host: 'msp430',
    note: 'MSP430 [experimental]',
  },
  nvptx: {
    cpu: [
      'sm_20',
      'sm_21',
      'sm_30',
      'sm_32',
      'sm_35',
      'sm_37',
      'sm_50',
      'sm_52',
      'sm_53',
      'sm_60',
      'sm_61',
      'sm_62',
      'sm_70',
      'sm_72',
      'sm_75',
      'sm_80',
    ],
    feature: [
      'ptx_32',
      'ptx_40',
      'ptx_41',
      'ptx_42',
      'ptx_43',
      'ptx_50',
      'ptx_60',
      'ptx_61',
      'ptx_63',
      'ptx_64',
      'ptx_65',
      'ptx_70',
      'sm_20',
      'sm_21',
      'sm_30',
      'sm_32',
      'sm_35',
      'sm_37',
      'sm_50',
      'sm_52',
      'sm_53',
      'sm_60',
      'sm_61',
      'sm_62',
      'sm_70',
      'sm_72',
      'sm_75',
      'sm_80',
    ],
    host: 'nvptx',
    note: 'NVIDIA PTX 32-bit',
  },
  nvptx64: {
    cpu: [
      'sm_20',
      'sm_21',
      'sm_30',
      'sm_32',
      'sm_35',
      'sm_37',
      'sm_50',
      'sm_52',
      'sm_53',
      'sm_60',
      'sm_61',
      'sm_62',
      'sm_70',
      'sm_72',
      'sm_75',
      'sm_80',
    ],
    feature: [
      'ptx_32',
      'ptx_40',
      'ptx_41',
      'ptx_42',
      'ptx_43',
      'ptx_50',
      'ptx_60',
      'ptx_61',
      'ptx_63',
      'ptx_64',
      'ptx_65',
      'ptx_70',
      'sm_20',
      'sm_21',
      'sm_30',
      'sm_32',
      'sm_35',
      'sm_37',
      'sm_50',
      'sm_52',
      'sm_53',
      'sm_60',
      'sm_61',
      'sm_62',
      'sm_70',
      'sm_72',
      'sm_75',
      'sm_80',
    ],
    host: 'nvptx64',
    note: 'NVIDIA PTX 64-bit',
  },
  ppc32: {
    cpu: [
      '440',
      '450',
      '601',
      '602',
      '603',
      '603_e',
      '603_ev',
      '604',
      '604_e',
      '620',
      '7400',
      '7450',
      '750',
      '970',
      'a_2',
      'a_2_q',
      'e_500',
      'e_500_mc',
      'e_5500',
      'future',
      'g_3',
      'g_4',
      'g_4',
      'g_5',
      'generic',
      'ppc',
      'ppc_32',
      'ppc_64',
      'ppc_64_le',
      'pwr_10',
      'pwr_3',
      'pwr_4',
      'pwr_5',
      'pwr_5_x',
      'pwr_6',
      'pwr_6_x',
      'pwr_7',
      'pwr_8',
      'pwr_9',
    ],
    feature: [
      '64_bit',
      '64_bitregs',
      'allow_unaligned_fp_access',
      'altivec',
      'booke',
      'bpermd',
      'cmpb',
      'crbits',
      'crypto',
      'direct_move',
      'e_500',
      'extdiv',
      'fcpsgn',
      'float_128',
      'fpcvt',
      'fprnd',
      'fpu',
      'fre',
      'fres',
      'frsqrte',
      'frsqrtes',
      'fsqrt',
      'fuse_addi_load',
      'fuse_addis_load',
      'fusion',
      'hard_float',
      'htm',
      'icbt',
      'invariant_function_descriptors',
      'isa_v_30_instructions',
      'isa_v_31_instructions',
      'isel',
      'ldbrx',
      'lfiwax',
      'longcall',
      'mfocrf',
      'msync',
      'partword_atomics',
      'pcrelative_memops',
      'popcntd',
      'power_10_vector',
      'power_8_altivec',
      'power_8_vector',
      'power_9_altivec',
      'power_9_vector',
      'ppc_postra_sched',
      'ppc_prera_sched',
      'ppc_4_xx',
      'ppc_6_xx',
      'predictable_select_expensive',
      'prefix_instrs',
      'qpx',
      'recipprec',
      'secure_plt',
      'slow_popcntd',
      'spe',
      'stfiwx',
      'two_const_nr',
      'vectors_use_two_units',
      'vsx',
    ],
    host: 'ppc32',
    note: 'PowerPC 32',
  },
  ppc64: {
    cpu: [
      '440',
      '450',
      '601',
      '602',
      '603',
      '603_e',
      '603_ev',
      '604',
      '604_e',
      '620',
      '7400',
      '7450',
      '750',
      '970',
      'a_2',
      'a_2_q',
      'e_500',
      'e_500_mc',
      'e_5500',
      'future',
      'g_3',
      'g_4',
      'g_4',
      'g_5',
      'generic',
      'ppc',
      'ppc_32',
      'ppc_64',
      'ppc_64_le',
      'pwr_10',
      'pwr_3',
      'pwr_4',
      'pwr_5',
      'pwr_5_x',
      'pwr_6',
      'pwr_6_x',
      'pwr_7',
      'pwr_8',
      'pwr_9',
    ],
    feature: [
      '64_bit',
      '64_bitregs',
      'allow_unaligned_fp_access',
      'altivec',
      'booke',
      'bpermd',
      'cmpb',
      'crbits',
      'crypto',
      'direct_move',
      'e_500',
      'extdiv',
      'fcpsgn',
      'float_128',
      'fpcvt',
      'fprnd',
      'fpu',
      'fre',
      'fres',
      'frsqrte',
      'frsqrtes',
      'fsqrt',
      'fuse_addi_load',
      'fuse_addis_load',
      'fusion',
      'hard_float',
      'htm',
      'icbt',
      'invariant_function_descriptors',
      'isa_v_30_instructions',
      'isa_v_31_instructions',
      'isel',
      'ldbrx',
      'lfiwax',
      'longcall',
      'mfocrf',
      'msync',
      'partword_atomics',
      'pcrelative_memops',
      'popcntd',
      'power_10_vector',
      'power_8_altivec',
      'power_8_vector',
      'power_9_altivec',
      'power_9_vector',
      'ppc_postra_sched',
      'ppc_prera_sched',
      'ppc_4_xx',
      'ppc_6_xx',
      'predictable_select_expensive',
      'prefix_instrs',
      'qpx',
      'recipprec',
      'secure_plt',
      'slow_popcntd',
      'spe',
      'stfiwx',
      'two_const_nr',
      'vectors_use_two_units',
      'vsx',
    ],
    host: 'ppc64',
    note: 'PowerPC 64',
  },
  ppc64le: {
    cpu: [
      '440',
      '450',
      '601',
      '602',
      '603',
      '603_e',
      '603_ev',
      '604',
      '604_e',
      '620',
      '7400',
      '7450',
      '750',
      '970',
      'a_2',
      'a_2_q',
      'e_500',
      'e_500_mc',
      'e_5500',
      'future',
      'g_3',
      'g_4',
      'g_4',
      'g_5',
      'generic',
      'ppc',
      'ppc_32',
      'ppc_64',
      'ppc_64_le',
      'pwr_10',
      'pwr_3',
      'pwr_4',
      'pwr_5',
      'pwr_5_x',
      'pwr_6',
      'pwr_6_x',
      'pwr_7',
      'pwr_8',
      'pwr_9',
    ],
    feature: [
      '64_bit',
      '64_bitregs',
      'allow_unaligned_fp_access',
      'altivec',
      'booke',
      'bpermd',
      'cmpb',
      'crbits',
      'crypto',
      'direct_move',
      'e_500',
      'extdiv',
      'fcpsgn',
      'float_128',
      'fpcvt',
      'fprnd',
      'fpu',
      'fre',
      'fres',
      'frsqrte',
      'frsqrtes',
      'fsqrt',
      'fuse_addi_load',
      'fuse_addis_load',
      'fusion',
      'hard_float',
      'htm',
      'icbt',
      'invariant_function_descriptors',
      'isa_v_30_instructions',
      'isa_v_31_instructions',
      'isel',
      'ldbrx',
      'lfiwax',
      'longcall',
      'mfocrf',
      'msync',
      'partword_atomics',
      'pcrelative_memops',
      'popcntd',
      'power_10_vector',
      'power_8_altivec',
      'power_8_vector',
      'power_9_altivec',
      'power_9_vector',
      'ppc_postra_sched',
      'ppc_prera_sched',
      'ppc_4_xx',
      'ppc_6_xx',
      'predictable_select_expensive',
      'prefix_instrs',
      'qpx',
      'recipprec',
      'secure_plt',
      'slow_popcntd',
      'spe',
      'stfiwx',
      'two_const_nr',
      'vectors_use_two_units',
      'vsx',
    ],
    host: 'ppc64le',
    note: 'PowerPC 64 LE',
  },
  r600: {
    cpu: [
      'barts',
      'caicos',
      'cayman',
      'cedar',
      'cypress',
      'juniper',
      'r_600',
      'r_630',
      'redwood',
      'rs_880',
      'rv_670',
      'rv_710',
      'rv_730',
      'rv_770',
      'sumo',
      'turks',
    ],
    feature: [
      'has_vertex_cache',
      'r_600_alu_inst',
      'cayman_isa',
      'cfalubug',
      'evergreen',
      'fetch_16',
      'fetch_8',
      'fmaf',
      'fp_64',
      'localmemorysize_0',
      'localmemorysize_32768',
      'localmemorysize_65536',
      'northern_islands',
      'promote_alloca',
      'r_600',
      'r_700',
      'wavefrontsize_16',
      'wavefrontsize_32',
      'wavefrontsize_64',
    ],
    host: 'r600',
    note: 'AMD GPUs HD2XXX-HD6XXX',
  },
  riscv32: {
    cpu: [
      'generic_rv_32',
      'generic_rv_64',
      'rocket_rv_32',
      'rocket_rv_64',
      'sifive_e_31',
      'sifive_u_54',
    ],
    feature: [
      '64_bit',
      'a',
      'c',
      'd',
      'e',
      'experimental_b',
      'experimental_v',
      'experimental_zbb',
      'experimental_zbc',
      'experimental_zbe',
      'experimental_zbf',
      'experimental_zbm',
      'experimental_zbp',
      'experimental_zbproposedc',
      'experimental_zbr',
      'experimental_zbs',
      'experimental_zbt',
      'f',
      'm',
      'no_rvc_hints',
      'relax',
      'reserve_x_1',
      'reserve_x_10',
      'reserve_x_11',
      'reserve_x_12',
      'reserve_x_13',
      'reserve_x_14',
      'reserve_x_15',
      'reserve_x_16',
      'reserve_x_17',
      'reserve_x_18',
      'reserve_x_19',
      'reserve_x_2',
      'reserve_x_20',
      'reserve_x_21',
      'reserve_x_22',
      'reserve_x_23',
      'reserve_x_24',
      'reserve_x_25',
      'reserve_x_26',
      'reserve_x_27',
      'reserve_x_28',
      'reserve_x_29',
      'reserve_x_3',
      'reserve_x_30',
      'reserve_x_31',
      'reserve_x_4',
      'reserve_x_5',
      'reserve_x_6',
      'reserve_x_7',
      'reserve_x_8',
      'reserve_x_9',
      'save_restore',
    ],
    host: 'riscv32',
    note: '32-bit RISC-V',
  },
  riscv64: {
    cpu: [
      'generic_rv_32',
      'generic_rv_64',
      'rocket_rv_32',
      'rocket_rv_64',
      'sifive_e_31',
      'sifive_u_54',
    ],
    feature: [
      '64_bit',
      'a',
      'c',
      'd',
      'e',
      'experimental_b',
      'experimental_v',
      'experimental_zbb',
      'experimental_zbc',
      'experimental_zbe',
      'experimental_zbf',
      'experimental_zbm',
      'experimental_zbp',
      'experimental_zbproposedc',
      'experimental_zbr',
      'experimental_zbs',
      'experimental_zbt',
      'f',
      'm',
      'no_rvc_hints',
      'relax',
      'reserve_x_1',
      'reserve_x_10',
      'reserve_x_11',
      'reserve_x_12',
      'reserve_x_13',
      'reserve_x_14',
      'reserve_x_15',
      'reserve_x_16',
      'reserve_x_17',
      'reserve_x_18',
      'reserve_x_19',
      'reserve_x_2',
      'reserve_x_20',
      'reserve_x_21',
      'reserve_x_22',
      'reserve_x_23',
      'reserve_x_24',
      'reserve_x_25',
      'reserve_x_26',
      'reserve_x_27',
      'reserve_x_28',
      'reserve_x_29',
      'reserve_x_3',
      'reserve_x_30',
      'reserve_x_31',
      'reserve_x_4',
      'reserve_x_5',
      'reserve_x_6',
      'reserve_x_7',
      'reserve_x_8',
      'reserve_x_9',
      'save_restore',
    ],
    host: 'riscv64',
    note: '64-bit RISC-V',
  },
  sparc: {
    cpu: [
      'at_697_e',
      'at_697_f',
      'f_934',
      'generic',
      'gr_712_rc',
      'gr_740',
      'hypersparc',
      'leon_2',
      'leon_3',
      'leon_4',
      'ma_2080',
      'ma_2085',
      'ma_2100',
      'ma_2150',
      'ma_2155',
      'ma_2450',
      'ma_2455',
      'ma_2480',
      'ma_2485',
      'ma_2_x_5_x',
      'ma_2_x_8_x',
      'myriad_2',
      'myriad_2_1',
      'myriad_2_2',
      'myriad_2_3',
      'niagara',
      'niagara_2',
      'niagara_3',
      'niagara_4',
      'sparclet',
      'sparclite',
      'sparclite_86_x',
      'supersparc',
      'tsc_701',
      'ultrasparc',
      'ultrasparc_3',
      'ut_699',
      'v_7',
      'v_8',
      'v_9',
    ],
    feature: [
      'deprecated_v_8',
      'detectroundchange',
      'fixallfdivsqrt',
      'hard_quad_float',
      'hasleoncasa',
      'hasumacsmac',
      'insertnopload',
      'leon',
      'leoncyclecounter',
      'leonpwrpsr',
      'no_fmuls',
      'no_fsmuld',
      'popc',
      'soft_float',
      'soft_mul_div',
      'v_9',
      'vis',
      'vis_2',
      'vis_3',
    ],
    host: 'sparc',
    note: 'Sparc',
  },
  sparcel: {
    cpu: [
      'at_697_e',
      'at_697_f',
      'f_934',
      'generic',
      'gr_712_rc',
      'gr_740',
      'hypersparc',
      'leon_2',
      'leon_3',
      'leon_4',
      'ma_2080',
      'ma_2085',
      'ma_2100',
      'ma_2150',
      'ma_2155',
      'ma_2450',
      'ma_2455',
      'ma_2480',
      'ma_2485',
      'ma_2_x_5_x',
      'ma_2_x_8_x',
      'myriad_2',
      'myriad_2_1',
      'myriad_2_2',
      'myriad_2_3',
      'niagara',
      'niagara_2',
      'niagara_3',
      'niagara_4',
      'sparclet',
      'sparclite',
      'sparclite_86_x',
      'supersparc',
      'tsc_701',
      'ultrasparc',
      'ultrasparc_3',
      'ut_699',
      'v_7',
      'v_8',
      'v_9',
    ],
    feature: [
      'deprecated_v_8',
      'detectroundchange',
      'fixallfdivsqrt',
      'hard_quad_float',
      'hasleoncasa',
      'hasumacsmac',
      'insertnopload',
      'leon',
      'leoncyclecounter',
      'leonpwrpsr',
      'no_fmuls',
      'no_fsmuld',
      'popc',
      'soft_float',
      'soft_mul_div',
      'v_9',
      'vis',
      'vis_2',
      'vis_3',
    ],
    host: 'sparcel',
    note: 'Sparc LE',
  },
  sparcv9: {
    cpu: [
      'at_697_e',
      'at_697_f',
      'f_934',
      'generic',
      'gr_712_rc',
      'gr_740',
      'hypersparc',
      'leon_2',
      'leon_3',
      'leon_4',
      'ma_2080',
      'ma_2085',
      'ma_2100',
      'ma_2150',
      'ma_2155',
      'ma_2450',
      'ma_2455',
      'ma_2480',
      'ma_2485',
      'ma_2_x_5_x',
      'ma_2_x_8_x',
      'myriad_2',
      'myriad_2_1',
      'myriad_2_2',
      'myriad_2_3',
      'niagara',
      'niagara_2',
      'niagara_3',
      'niagara_4',
      'sparclet',
      'sparclite',
      'sparclite_86_x',
      'supersparc',
      'tsc_701',
      'ultrasparc',
      'ultrasparc_3',
      'ut_699',
      'v_7',
      'v_8',
      'v_9',
    ],
    feature: [
      'deprecated_v_8',
      'detectroundchange',
      'fixallfdivsqrt',
      'hard_quad_float',
      'hasleoncasa',
      'hasumacsmac',
      'insertnopload',
      'leon',
      'leoncyclecounter',
      'leonpwrpsr',
      'no_fmuls',
      'no_fsmuld',
      'popc',
      'soft_float',
      'soft_mul_div',
      'v_9',
      'vis',
      'vis_2',
      'vis_3',
    ],
    host: 'sparcv9',
    note: 'Sparc V9',
  },
  systemz: {
    cpu: [
      'arch_10',
      'arch_11',
      'arch_12',
      'arch_13',
      'arch_8',
      'arch_9',
      'generic',
      'z_10',
      'z_13',
      'z_14',
      'z_15',
      'z_196',
      'z_ec_12',
    ],
    feature: [
      'deflate_conversion',
      'dfp_packed_conversion',
      'dfp_zoned_conversion',
      'distinct_ops',
      'enhanced_dat_2',
      'enhanced_sort',
      'execution_hint',
      'fast_serialization',
      'fp_extension',
      'guarded_storage',
      'high_word',
      'insert_reference_bits_multiple',
      'interlocked_access_1',
      'load_and_trap',
      'load_and_zero_rightmost_byte',
      'load_store_on_cond',
      'load_store_on_cond_2',
      'message_security_assist_extension_3',
      'message_security_assist_extension_4',
      'message_security_assist_extension_5',
      'message_security_assist_extension_7',
      'message_security_assist_extension_8',
      'message_security_assist_extension_9',
      'miscellaneous_extensions',
      'miscellaneous_extensions_2',
      'miscellaneous_extensions_3',
      'population_count',
      'processor_assist',
      'reset_reference_bits_multiple',
      'soft_float',
      'transactional_execution',
      'vector',
      'vector_enhancements_1',
      'vector_enhancements_2',
      'vector_packed_decimal',
      'vector_packed_decimal_enhancement',
    ],
    host: 'systemz',
    note: 'SystemZ',
  },
  thumb: {
    cpu: [
      'arm_1020_e',
      'arm_1020_t',
      'arm_1022_e',
      'arm_10_e',
      'arm_10_tdmi',
      'arm_1136_j_s',
      'arm_1136_jf_s',
      'arm_1156_t_2_s',
      'arm_1156_t_2_f_s',
      'arm_1176_j_s',
      'arm_1176_jz_s',
      'arm_1176_jzf_s',
      'arm_710_t',
      'arm_720_t',
      'arm_7_tdmi',
      'arm_7_tdmi_s',
      'arm_8',
      'arm_810',
      'arm_9',
      'arm_920',
      'arm_920_t',
      'arm_922_t',
      'arm_926_ej_s',
      'arm_940_t',
      'arm_946_e_s',
      'arm_966_e_s',
      'arm_968_e_s',
      'arm_9_e',
      'arm_9_tdmi',
      'cortex_a_12',
      'cortex_a_15',
      'cortex_a_17',
      'cortex_a_32',
      'cortex_a_35',
      'cortex_a_5',
      'cortex_a_53',
      'cortex_a_55',
      'cortex_a_57',
      'cortex_a_7',
      'cortex_a_72',
      'cortex_a_73',
      'cortex_a_75',
      'cortex_a_76',
      'cortex_a_76_ae',
      'cortex_a_77',
      'cortex_a_78',
      'cortex_a_8',
      'cortex_a_9',
      'cortex_m_0',
      'cortex_m_0_plus',
      'cortex_m_1',
      'cortex_m_23',
      'cortex_m_3',
      'cortex_m_33',
      'cortex_m_35_p',
      'cortex_m_4',
      'cortex_m_55',
      'cortex_m_7',
      'cortex_r_4',
      'cortex_r_4_f',
      'cortex_r_5',
      'cortex_r_52',
      'cortex_r_7',
      'cortex_r_8',
      'cortex_x_1',
      'cyclone',
      'ep_9312',
      'exynos_m_3',
      'exynos_m_4',
      'exynos_m_5',
      'generic',
      'iwmmxt',
      'krait',
      'kryo',
      'mpcore',
      'mpcorenovfp',
      'neoverse_n_1',
      'sc_000',
      'sc_300',
      'strongarm',
      'strongarm_110',
      'strongarm_1100',
      'strongarm_1110',
      'swift',
      'xscale',
    ],
    feature: [
      '32_bit',
      '8_msecext',
      'a_12',
      'a_15',
      'a_17',
      'a_32',
      'a_35',
      'a_5',
      'a_53',
      'a_55',
      'a_57',
      'a_7',
      'a_72',
      'a_73',
      'a_75',
      'a_76',
      'a_77',
      'a_8',
      'a_9',
      'aclass',
      'acquire_release',
      'aes',
      'armv_2',
      'armv_2_a',
      'armv_3',
      'armv_3_m',
      'armv_4',
      'armv_4_t',
      'armv_5_t',
      'armv_5_te',
      'armv_5_tej',
      'armv_6',
      'armv_6_m',
      'armv_6_j',
      'armv_6_k',
      'armv_6_kz',
      'armv_6_s_m',
      'armv_6_t_2',
      'armv_7_a',
      'armv_7_m',
      'armv_7_r',
      'armv_7_e_m',
      'armv_7_k',
      'armv_7_s',
      'armv_7_ve',
      'armv_8_a',
      'armv_8_m_base',
      'armv_8_m_main',
      'armv_8_r',
      'armv_8_1_a',
      'armv_8_1_m_main',
      'armv_8_2_a',
      'armv_8_3_a',
      'armv_8_4_a',
      'armv_8_5_a',
      'armv_8_6_a',
      'avoid_movs_shop',
      'avoid_partial_cpsr',
      'bf_16',
      'cde',
      'cdecp_0',
      'cdecp_1',
      'cdecp_2',
      'cdecp_3',
      'cdecp_4',
      'cdecp_5',
      'cdecp_6',
      'cdecp_7',
      'cheap_predicable_cpsr',
      'cortex_a_78',
      'cortex_x_1',
      'crc',
      'crypto',
      'd_32',
      'db',
      'dfb',
      'disable_postra_scheduler',
      'dont_widen_vmovs',
      'dotprod',
      'dsp',
      'execute_only',
      'expand_fp_mlx',
      'exynos',
      'fp_armv_8',
      'fp_armv_8_d_16',
      'fp_armv_8_d_16_sp',
      'fp_armv_8_sp',
      'fp_16',
      'fp_16_fml',
      'fp_64',
      'fpao',
      'fpregs',
      'fpregs_16',
      'fpregs_64',
      'fullfp_16',
      'fuse_aes',
      'fuse_literals',
      'hwdiv',
      'hwdiv_arm',
      'i_8_mm',
      'iwmmxt',
      'iwmmxt_2',
      'krait',
      'kryo',
      'lob',
      'long_calls',
      'loop_align',
      'm_3',
      'mclass',
      'mp',
      'muxed_units',
      'mve',
      'mve_fp',
      'mve_1_beat',
      'mve_2_beat',
      'mve_4_beat',
      'nacl_trap',
      'neon',
      'neon_fpmovs',
      'neonfp',
      'no_branch_predictor',
      'no_movt',
      'no_neg_immediates',
      'noarm',
      'nonpipelined_vfp',
      'perfmon',
      'prefer_ishst',
      'prefer_vmovsr',
      'prof_unpr',
      'r_4',
      'r_5',
      'r_52',
      'r_7',
      'ras',
      'rclass',
      'read_tp_hard',
      'reserve_r_9',
      'ret_addr_stack',
      'sb',
      'sha_2',
      'slow_fp_brcc',
      'slow_load_d_subreg',
      'slow_odd_reg',
      'slow_vdup_32',
      'slow_vgetlni_32',
      'slowfpvfmx',
      'slowfpvmlx',
      'soft_float',
      'splat_vfp_neon',
      'strict_align',
      'swift',
      'thumb_mode',
      'thumb_2',
      'trustzone',
      'use_misched',
      'v_4_t',
      'v_5_t',
      'v_5_te',
      'v_6',
      'v_6_k',
      'v_6_m',
      'v_6_t_2',
      'v_7',
      'v_7_clrex',
      'v_8',
      'v_8_1_a',
      'v_8_1_m_main',
      'v_8_2_a',
      'v_8_3_a',
      'v_8_4_a',
      'v_8_5_a',
      'v_8_6_a',
      'v_8_m',
      'v_8_m_main',
      'vfp_2',
      'vfp_2_sp',
      'vfp_3',
      'vfp_3_d_16',
      'vfp_3_d_16_sp',
      'vfp_3_sp',
      'vfp_4',
      'vfp_4_d_16',
      'vfp_4_d_16_sp',
      'vfp_4_sp',
      'virtualization',
      'vldn_align',
      'vmlx_forwarding',
      'vmlx_hazards',
      'wide_stride_vfp',
      'xscale',
      'zcz',
    ],
    host: 'thumb',
    note: 'Thumb',
  },
  thumbeb: {
    cpu: [
      'arm_1020_e',
      'arm_1020_t',
      'arm_1022_e',
      'arm_10_e',
      'arm_10_tdmi',
      'arm_1136_j_s',
      'arm_1136_jf_s',
      'arm_1156_t_2_s',
      'arm_1156_t_2_f_s',
      'arm_1176_j_s',
      'arm_1176_jz_s',
      'arm_1176_jzf_s',
      'arm_710_t',
      'arm_720_t',
      'arm_7_tdmi',
      'arm_7_tdmi_s',
      'arm_8',
      'arm_810',
      'arm_9',
      'arm_920',
      'arm_920_t',
      'arm_922_t',
      'arm_926_ej_s',
      'arm_940_t',
      'arm_946_e_s',
      'arm_966_e_s',
      'arm_968_e_s',
      'arm_9_e',
      'arm_9_tdmi',
      'cortex_a_12',
      'cortex_a_15',
      'cortex_a_17',
      'cortex_a_32',
      'cortex_a_35',
      'cortex_a_5',
      'cortex_a_53',
      'cortex_a_55',
      'cortex_a_57',
      'cortex_a_7',
      'cortex_a_72',
      'cortex_a_73',
      'cortex_a_75',
      'cortex_a_76',
      'cortex_a_76_ae',
      'cortex_a_77',
      'cortex_a_78',
      'cortex_a_8',
      'cortex_a_9',
      'cortex_m_0',
      'cortex_m_0_plus',
      'cortex_m_1',
      'cortex_m_23',
      'cortex_m_3',
      'cortex_m_33',
      'cortex_m_35_p',
      'cortex_m_4',
      'cortex_m_55',
      'cortex_m_7',
      'cortex_r_4',
      'cortex_r_4_f',
      'cortex_r_5',
      'cortex_r_52',
      'cortex_r_7',
      'cortex_r_8',
      'cortex_x_1',
      'cyclone',
      'ep_9312',
      'exynos_m_3',
      'exynos_m_4',
      'exynos_m_5',
      'generic',
      'iwmmxt',
      'krait',
      'kryo',
      'mpcore',
      'mpcorenovfp',
      'neoverse_n_1',
      'sc_000',
      'sc_300',
      'strongarm',
      'strongarm_110',
      'strongarm_1100',
      'strongarm_1110',
      'swift',
      'xscale',
    ],
    feature: [
      '32_bit',
      '8_msecext',
      'a_12',
      'a_15',
      'a_17',
      'a_32',
      'a_35',
      'a_5',
      'a_53',
      'a_55',
      'a_57',
      'a_7',
      'a_72',
      'a_73',
      'a_75',
      'a_76',
      'a_77',
      'a_8',
      'a_9',
      'aclass',
      'acquire_release',
      'aes',
      'armv_2',
      'armv_2_a',
      'armv_3',
      'armv_3_m',
      'armv_4',
      'armv_4_t',
      'armv_5_t',
      'armv_5_te',
      'armv_5_tej',
      'armv_6',
      'armv_6_m',
      'armv_6_j',
      'armv_6_k',
      'armv_6_kz',
      'armv_6_s_m',
      'armv_6_t_2',
      'armv_7_a',
      'armv_7_m',
      'armv_7_r',
      'armv_7_e_m',
      'armv_7_k',
      'armv_7_s',
      'armv_7_ve',
      'armv_8_a',
      'armv_8_m_base',
      'armv_8_m_main',
      'armv_8_r',
      'armv_8_1_a',
      'armv_8_1_m_main',
      'armv_8_2_a',
      'armv_8_3_a',
      'armv_8_4_a',
      'armv_8_5_a',
      'armv_8_6_a',
      'avoid_movs_shop',
      'avoid_partial_cpsr',
      'bf_16',
      'cde',
      'cdecp_0',
      'cdecp_1',
      'cdecp_2',
      'cdecp_3',
      'cdecp_4',
      'cdecp_5',
      'cdecp_6',
      'cdecp_7',
      'cheap_predicable_cpsr',
      'cortex_a_78',
      'cortex_x_1',
      'crc',
      'crypto',
      'd_32',
      'db',
      'dfb',
      'disable_postra_scheduler',
      'dont_widen_vmovs',
      'dotprod',
      'dsp',
      'execute_only',
      'expand_fp_mlx',
      'exynos',
      'fp_armv_8',
      'fp_armv_8_d_16',
      'fp_armv_8_d_16_sp',
      'fp_armv_8_sp',
      'fp_16',
      'fp_16_fml',
      'fp_64',
      'fpao',
      'fpregs',
      'fpregs_16',
      'fpregs_64',
      'fullfp_16',
      'fuse_aes',
      'fuse_literals',
      'hwdiv',
      'hwdiv_arm',
      'i_8_mm',
      'iwmmxt',
      'iwmmxt_2',
      'krait',
      'kryo',
      'lob',
      'long_calls',
      'loop_align',
      'm_3',
      'mclass',
      'mp',
      'muxed_units',
      'mve',
      'mve_fp',
      'mve_1_beat',
      'mve_2_beat',
      'mve_4_beat',
      'nacl_trap',
      'neon',
      'neon_fpmovs',
      'neonfp',
      'no_branch_predictor',
      'no_movt',
      'no_neg_immediates',
      'noarm',
      'nonpipelined_vfp',
      'perfmon',
      'prefer_ishst',
      'prefer_vmovsr',
      'prof_unpr',
      'r_4',
      'r_5',
      'r_52',
      'r_7',
      'ras',
      'rclass',
      'read_tp_hard',
      'reserve_r_9',
      'ret_addr_stack',
      'sb',
      'sha_2',
      'slow_fp_brcc',
      'slow_load_d_subreg',
      'slow_odd_reg',
      'slow_vdup_32',
      'slow_vgetlni_32',
      'slowfpvfmx',
      'slowfpvmlx',
      'soft_float',
      'splat_vfp_neon',
      'strict_align',
      'swift',
      'thumb_mode',
      'thumb_2',
      'trustzone',
      'use_misched',
      'v_4_t',
      'v_5_t',
      'v_5_te',
      'v_6',
      'v_6_k',
      'v_6_m',
      'v_6_t_2',
      'v_7',
      'v_7_clrex',
      'v_8',
      'v_8_1_a',
      'v_8_1_m_main',
      'v_8_2_a',
      'v_8_3_a',
      'v_8_4_a',
      'v_8_5_a',
      'v_8_6_a',
      'v_8_m',
      'v_8_m_main',
      'vfp_2',
      'vfp_2_sp',
      'vfp_3',
      'vfp_3_d_16',
      'vfp_3_d_16_sp',
      'vfp_3_sp',
      'vfp_4',
      'vfp_4_d_16',
      'vfp_4_d_16_sp',
      'vfp_4_sp',
      'virtualization',
      'vldn_align',
      'vmlx_forwarding',
      'vmlx_hazards',
      'wide_stride_vfp',
      'xscale',
      'zcz',
    ],
    host: 'thumbeb',
    note: 'Thumb (big endian)',
  },
  wasm32: {
    cpu: ['bleeding_edge', 'generic', 'mvp'],
    feature: [
      'atomics',
      'bulk_memory',
      'exception_handling',
      'multivalue',
      'mutable_globals',
      'nontrapping_fptoint',
      'reference_types',
      'sign_ext',
      'simd_128',
      'tail_call',
      'unimplemented_simd_128',
    ],
    host: 'wasm32',
    note: 'WebAssembly 32-bit',
  },
  wasm64: {
    cpu: ['bleeding_edge', 'generic', 'mvp'],
    feature: [
      'atomics',
      'bulk_memory',
      'exception_handling',
      'multivalue',
      'mutable_globals',
      'nontrapping_fptoint',
      'reference_types',
      'sign_ext',
      'simd_128',
      'tail_call',
      'unimplemented_simd_128',
    ],
    host: 'wasm64',
    note: 'WebAssembly 64-bit',
  },
  x86: {
    cpu: [
      'amdfam_10',
      'athlon',
      'athlon_4',
      'athlon_fx',
      'athlon_mp',
      'athlon_tbird',
      'athlon_xp',
      'athlon_64',
      'athlon_64_sse_3',
      'atom',
      'barcelona',
      'bdver_1',
      'bdver_2',
      'bdver_3',
      'bdver_4',
      'bonnell',
      'broadwell',
      'btver_1',
      'btver_2',
      'c_3',
      'c_3_2',
      'cannonlake',
      'cascadelake',
      'cooperlake',
      'core_avx_i',
      'core_avx_2',
      'core_2',
      'corei_7',
      'corei_7_avx',
      'generic',
      'geode',
      'goldmont',
      'goldmont_plus',
      'haswell',
      'i_386',
      'i_486',
      'i_586',
      'i_686',
      'icelake_client',
      'icelake_server',
      'ivybridge',
      'k_6',
      'k_6_2',
      'k_6_3',
      'k_8',
      'k_8_sse_3',
      'knl',
      'knm',
      'lakemont',
      'nehalem',
      'nocona',
      'opteron',
      'opteron_sse_3',
      'penryn',
      'pentium',
      'pentium_m',
      'pentium_mmx',
      'pentium_2',
      'pentium_3',
      'pentium_3_m',
      'pentium_4',
      'pentium_4_m',
      'pentiumpro',
      'prescott',
      'sandybridge',
      'silvermont',
      'skx',
      'skylake',
      'skylake_avx_512',
      'slm',
      'tigerlake',
      'tremont',
      'westmere',
      'winchip_c_6',
      'winchip_2',
      'x_86_64',
      'yonah',
      'znver_1',
      'znver_2',
    ],
    feature: [
      '16_bit_mode',
      '32_bit_mode',
      '3_dnow',
      '3_dnowa',
      '64_bit',
      '64_bit_mode',
      'adx',
      'aes',
      'amx_bf_16',
      'amx_int_8',
      'amx_tile',
      'avx',
      'avx_2',
      'avx_512_bf_16',
      'avx_512_bitalg',
      'avx_512_bw',
      'avx_512_cd',
      'avx_512_dq',
      'avx_512_er',
      'avx_512_f',
      'avx_512_ifma',
      'avx_512_pf',
      'avx_512_vbmi',
      'avx_512_vbmi_2',
      'avx_512_vl',
      'avx_512_vnni',
      'avx_512_vp_2_intersect',
      'avx_512_vpopcntdq',
      'bmi',
      'bmi_2',
      'branchfusion',
      'cldemote',
      'clflushopt',
      'clwb',
      'clzero',
      'cmov',
      'cx_16',
      'cx_8',
      'enqcmd',
      'ermsb',
      'f_16_c',
      'false_deps_lzcnt_tzcnt',
      'false_deps_popcnt',
      'fast_11_bytenop',
      'fast_15_bytenop',
      'fast_7_bytenop',
      'fast_bextr',
      'fast_gather',
      'fast_hops',
      'fast_lzcnt',
      'fast_scalar_fsqrt',
      'fast_scalar_shift_masks',
      'fast_shld_rotate',
      'fast_variable_shuffle',
      'fast_vector_fsqrt',
      'fast_vector_shift_masks',
      'fma',
      'fma_4',
      'fsgsbase',
      'fxsr',
      'gfni',
      'idivl_to_divb',
      'idivq_to_divl',
      'invpcid',
      'lea_sp',
      'lea_uses_ag',
      'lvi_cfi',
      'lvi_load_hardening',
      'lwp',
      'lzcnt',
      'macrofusion',
      'merge_to_threeway_branch',
      'mmx',
      'movbe',
      'movdir_64_b',
      'movdiri',
      'mpx',
      'mwaitx',
      'nopl',
      'pad_short_functions',
      'pclmul',
      'pconfig',
      'pku',
      'popcnt',
      'prefer_128_bit',
      'prefer_256_bit',
      'prefer_mask_registers',
      'prefetchwt_1',
      'prfchw',
      'ptwrite',
      'rdpid',
      'rdrnd',
      'rdseed',
      'retpoline',
      'retpoline_external_thunk',
      'retpoline_indirect_branches',
      'retpoline_indirect_calls',
      'rtm',
      'sahf',
      'serialize',
      'seses',
      'sgx',
      'sha',
      'shstk',
      'slow_3_ops_lea',
      'slow_incdec',
      'slow_lea',
      'slow_pmaddwd',
      'slow_pmulld',
      'slow_shld',
      'slow_two_mem_ops',
      'slow_unaligned_mem_16',
      'slow_unaligned_mem_32',
      'soft_float',
      'sse',
      'sse_unaligned_mem',
      'sse_2',
      'sse_3',
      'sse_4_1',
      'sse_4_2',
      'sse_4_a',
      'ssse_3',
      'tbm',
      'tsxldtrk',
      'use_aa',
      'use_glm_div_sqrt_costs',
      'vaes',
      'vpclmulqdq',
      'vzeroupper',
      'waitpkg',
      'wbnoinvd',
      'x_87',
      'xop',
      'xsave',
      'xsavec',
      'xsaveopt',
      'xsaves',
    ],
    host: 'x86',
    note: '32-bit X86: Pentium-Pro and above',
  },
  x86_64: {
    cpu: [
      'amdfam_10',
      'athlon',
      'athlon_4',
      'athlon_fx',
      'athlon_mp',
      'athlon_tbird',
      'athlon_xp',
      'athlon_64',
      'athlon_64_sse_3',
      'atom',
      'barcelona',
      'bdver_1',
      'bdver_2',
      'bdver_3',
      'bdver_4',
      'bonnell',
      'broadwell',
      'btver_1',
      'btver_2',
      'c_3',
      'c_3_2',
      'cannonlake',
      'cascadelake',
      'cooperlake',
      'core_avx_i',
      'core_avx_2',
      'core_2',
      'corei_7',
      'corei_7_avx',
      'generic',
      'geode',
      'goldmont',
      'goldmont_plus',
      'haswell',
      'i_386',
      'i_486',
      'i_586',
      'i_686',
      'icelake_client',
      'icelake_server',
      'ivybridge',
      'k_6',
      'k_6_2',
      'k_6_3',
      'k_8',
      'k_8_sse_3',
      'knl',
      'knm',
      'lakemont',
      'nehalem',
      'nocona',
      'opteron',
      'opteron_sse_3',
      'penryn',
      'pentium',
      'pentium_m',
      'pentium_mmx',
      'pentium_2',
      'pentium_3',
      'pentium_3_m',
      'pentium_4',
      'pentium_4_m',
      'pentiumpro',
      'prescott',
      'sandybridge',
      'silvermont',
      'skx',
      'skylake',
      'skylake_avx_512',
      'slm',
      'tigerlake',
      'tremont',
      'westmere',
      'winchip_c_6',
      'winchip_2',
      'x_86_64',
      'yonah',
      'znver_1',
      'znver_2',
    ],
    feature: [
      '16_bit_mode',
      '32_bit_mode',
      '3_dnow',
      '3_dnowa',
      '64_bit',
      '64_bit_mode',
      'adx',
      'aes',
      'amx_bf_16',
      'amx_int_8',
      'amx_tile',
      'avx',
      'avx_2',
      'avx_512_bf_16',
      'avx_512_bitalg',
      'avx_512_bw',
      'avx_512_cd',
      'avx_512_dq',
      'avx_512_er',
      'avx_512_f',
      'avx_512_ifma',
      'avx_512_pf',
      'avx_512_vbmi',
      'avx_512_vbmi_2',
      'avx_512_vl',
      'avx_512_vnni',
      'avx_512_vp_2_intersect',
      'avx_512_vpopcntdq',
      'bmi',
      'bmi_2',
      'branchfusion',
      'cldemote',
      'clflushopt',
      'clwb',
      'clzero',
      'cmov',
      'cx_16',
      'cx_8',
      'enqcmd',
      'ermsb',
      'f_16_c',
      'false_deps_lzcnt_tzcnt',
      'false_deps_popcnt',
      'fast_11_bytenop',
      'fast_15_bytenop',
      'fast_7_bytenop',
      'fast_bextr',
      'fast_gather',
      'fast_hops',
      'fast_lzcnt',
      'fast_scalar_fsqrt',
      'fast_scalar_shift_masks',
      'fast_shld_rotate',
      'fast_variable_shuffle',
      'fast_vector_fsqrt',
      'fast_vector_shift_masks',
      'fma',
      'fma_4',
      'fsgsbase',
      'fxsr',
      'gfni',
      'idivl_to_divb',
      'idivq_to_divl',
      'invpcid',
      'lea_sp',
      'lea_uses_ag',
      'lvi_cfi',
      'lvi_load_hardening',
      'lwp',
      'lzcnt',
      'macrofusion',
      'merge_to_threeway_branch',
      'mmx',
      'movbe',
      'movdir_64_b',
      'movdiri',
      'mpx',
      'mwaitx',
      'nopl',
      'pad_short_functions',
      'pclmul',
      'pconfig',
      'pku',
      'popcnt',
      'prefer_128_bit',
      'prefer_256_bit',
      'prefer_mask_registers',
      'prefetchwt_1',
      'prfchw',
      'ptwrite',
      'rdpid',
      'rdrnd',
      'rdseed',
      'retpoline',
      'retpoline_external_thunk',
      'retpoline_indirect_branches',
      'retpoline_indirect_calls',
      'rtm',
      'sahf',
      'serialize',
      'seses',
      'sgx',
      'sha',
      'shstk',
      'slow_3_ops_lea',
      'slow_incdec',
      'slow_lea',
      'slow_pmaddwd',
      'slow_pmulld',
      'slow_shld',
      'slow_two_mem_ops',
      'slow_unaligned_mem_16',
      'slow_unaligned_mem_32',
      'soft_float',
      'sse',
      'sse_unaligned_mem',
      'sse_2',
      'sse_3',
      'sse_4_1',
      'sse_4_2',
      'sse_4_a',
      'ssse_3',
      'tbm',
      'tsxldtrk',
      'use_aa',
      'use_glm_div_sqrt_costs',
      'vaes',
      'vpclmulqdq',
      'vzeroupper',
      'waitpkg',
      'wbnoinvd',
      'x_87',
      'xop',
      'xsave',
      'xsavec',
      'xsaveopt',
      'xsaves',
    ],
    host: 'x86-64',
    note: '64-bit X86: EM64T and AMD64',
  },
  xcore: {
    cpu: [],
    feature: [],
    host: 'xcore',
    note: 'XCore',
  },
}

export const LLVM_CPU_CONTENT: LlvmCpuContent = {
  '440': {
    host: '440',
    note: 'The 440 processor.',
  },
  '450': {
    host: '450',
    note: 'The 450 processor.',
  },
  '601': {
    host: '601',
    note: 'The 601 processor.',
  },
  '602': {
    host: '602',
    note: 'The 602 processor.',
  },
  '603': {
    host: '603',
    note: 'The 603 processor.',
  },
  '604': {
    host: '604',
    note: 'The 604 processor.',
  },
  '620': {
    host: '620',
    note: 'The 620 processor.',
  },
  '750': {
    host: '750',
    note: 'The 750 processor.',
  },
  '970': {
    host: '970',
    note: 'The 970 processor.',
  },
  '7400': {
    host: '7400',
    note: 'The 7400 processor.',
  },
  '7450': {
    host: '7450',
    note: 'The 7450 processor.',
  },
  a_64_fx: {
    host: 'a64fx',
    note: 'The a64fx processor.',
  },
  apple_a_10: {
    host: 'apple-a10',
    note: 'The apple-a10 processor.',
  },
  apple_a_11: {
    host: 'apple-a11',
    note: 'The apple-a11 processor.',
  },
  apple_a_12: {
    host: 'apple-a12',
    note: 'The apple-a12 processor.',
  },
  apple_a_13: {
    host: 'apple-a13',
    note: 'The apple-a13 processor.',
  },
  apple_a_7: {
    host: 'apple-a7',
    note: 'The apple-a7 processor.',
  },
  apple_a_8: {
    host: 'apple-a8',
    note: 'The apple-a8 processor.',
  },
  apple_a_9: {
    host: 'apple-a9',
    note: 'The apple-a9 processor.',
  },
  apple_latest: {
    host: 'apple-latest',
    note: 'The apple-latest processor.',
  },
  apple_s_4: {
    host: 'apple-s4',
    note: 'The apple-s4 processor.',
  },
  apple_s_5: {
    host: 'apple-s5',
    note: 'The apple-s5 processor.',
  },
  carmel: {
    host: 'carmel',
    note: 'The carmel processor.',
  },
  cortex_a_34: {
    host: 'cortex-a34',
    note: 'The cortex-a34 processor.',
  },
  cortex_a_35: {
    host: 'cortex-a35',
    note: 'The cortex-a35 processor.',
  },
  cortex_a_53: {
    host: 'cortex-a53',
    note: 'The cortex-a53 processor.',
  },
  cortex_a_55: {
    host: 'cortex-a55',
    note: 'The cortex-a55 processor.',
  },
  cortex_a_57: {
    host: 'cortex-a57',
    note: 'The cortex-a57 processor.',
  },
  cortex_a_65: {
    host: 'cortex-a65',
    note: 'The cortex-a65 processor.',
  },
  cortex_a_65_ae: {
    host: 'cortex-a65ae',
    note: 'The cortex-a65ae processor.',
  },
  cortex_a_72: {
    host: 'cortex-a72',
    note: 'The cortex-a72 processor.',
  },
  cortex_a_73: {
    host: 'cortex-a73',
    note: 'The cortex-a73 processor.',
  },
  cortex_a_75: {
    host: 'cortex-a75',
    note: 'The cortex-a75 processor.',
  },
  cortex_a_76: {
    host: 'cortex-a76',
    note: 'The cortex-a76 processor.',
  },
  cortex_a_76_ae: {
    host: 'cortex-a76ae',
    note: 'The cortex-a76ae processor.',
  },
  cortex_a_77: {
    host: 'cortex-a77',
    note: 'The cortex-a77 processor.',
  },
  cortex_a_78: {
    host: 'cortex-a78',
    note: 'The cortex-a78 processor.',
  },
  cortex_x_1: {
    host: 'cortex-x1',
    note: 'The cortex-x1 processor.',
  },
  cyclone: {
    host: 'cyclone',
    note: 'The cyclone processor.',
  },
  exynos_m_3: {
    host: 'exynos-m3',
    note: 'The exynos-m3 processor.',
  },
  exynos_m_4: {
    host: 'exynos-m4',
    note: 'The exynos-m4 processor.',
  },
  exynos_m_5: {
    host: 'exynos-m5',
    note: 'The exynos-m5 processor.',
  },
  falkor: {
    host: 'falkor',
    note: 'The falkor processor.',
  },
  generic: {
    host: 'generic',
    note: 'The generic processor.',
  },
  kryo: {
    host: 'kryo',
    note: 'The kryo processor.',
  },
  neoverse_e_1: {
    host: 'neoverse-e1',
    note: 'The neoverse-e1 processor.',
  },
  neoverse_n_1: {
    host: 'neoverse-n1',
    note: 'The neoverse-n1 processor.',
  },
  saphira: {
    host: 'saphira',
    note: 'The saphira processor.',
  },
  thunderx: {
    host: 'thunderx',
    note: 'The thunderx processor.',
  },
  thunderx_2_t_99: {
    host: 'thunderx2t99',
    note: 'The thunderx2t99 processor.',
  },
  thunderx_3_t_110: {
    host: 'thunderx3t110',
    note: 'The thunderx3t110 processor.',
  },
  thunderxt_81: {
    host: 'thunderxt81',
    note: 'The thunderxt81 processor.',
  },
  thunderxt_83: {
    host: 'thunderxt83',
    note: 'The thunderxt83 processor.',
  },
  thunderxt_88: {
    host: 'thunderxt88',
    note: 'The thunderxt88 processor.',
  },
  tsv_110: {
    host: 'tsv110',
    note: 'The tsv110 processor.',
  },
  bonaire: {
    host: 'bonaire',
    note: 'The bonaire processor.',
  },
  carrizo: {
    host: 'carrizo',
    note: 'The carrizo processor.',
  },
  fiji: {
    host: 'fiji',
    note: 'The fiji processor.',
  },
  generic_hsa: {
    host: 'generic-hsa',
    note: 'The generic-hsa processor.',
  },
  gfx_1010: {
    host: 'gfx1010',
    note: 'The gfx1010 processor.',
  },
  gfx_1011: {
    host: 'gfx1011',
    note: 'The gfx1011 processor.',
  },
  gfx_1012: {
    host: 'gfx1012',
    note: 'The gfx1012 processor.',
  },
  gfx_1030: {
    host: 'gfx1030',
    note: 'The gfx1030 processor.',
  },
  gfx_600: {
    host: 'gfx600',
    note: 'The gfx600 processor.',
  },
  gfx_601: {
    host: 'gfx601',
    note: 'The gfx601 processor.',
  },
  gfx_700: {
    host: 'gfx700',
    note: 'The gfx700 processor.',
  },
  gfx_701: {
    host: 'gfx701',
    note: 'The gfx701 processor.',
  },
  gfx_702: {
    host: 'gfx702',
    note: 'The gfx702 processor.',
  },
  gfx_703: {
    host: 'gfx703',
    note: 'The gfx703 processor.',
  },
  gfx_704: {
    host: 'gfx704',
    note: 'The gfx704 processor.',
  },
  gfx_801: {
    host: 'gfx801',
    note: 'The gfx801 processor.',
  },
  gfx_802: {
    host: 'gfx802',
    note: 'The gfx802 processor.',
  },
  gfx_803: {
    host: 'gfx803',
    note: 'The gfx803 processor.',
  },
  gfx_810: {
    host: 'gfx810',
    note: 'The gfx810 processor.',
  },
  gfx_900: {
    host: 'gfx900',
    note: 'The gfx900 processor.',
  },
  gfx_902: {
    host: 'gfx902',
    note: 'The gfx902 processor.',
  },
  gfx_904: {
    host: 'gfx904',
    note: 'The gfx904 processor.',
  },
  gfx_906: {
    host: 'gfx906',
    note: 'The gfx906 processor.',
  },
  gfx_908: {
    host: 'gfx908',
    note: 'The gfx908 processor.',
  },
  gfx_909: {
    host: 'gfx909',
    note: 'The gfx909 processor.',
  },
  hainan: {
    host: 'hainan',
    note: 'The hainan processor.',
  },
  hawaii: {
    host: 'hawaii',
    note: 'The hawaii processor.',
  },
  iceland: {
    host: 'iceland',
    note: 'The iceland processor.',
  },
  kabini: {
    host: 'kabini',
    note: 'The kabini processor.',
  },
  kaveri: {
    host: 'kaveri',
    note: 'The kaveri processor.',
  },
  mullins: {
    host: 'mullins',
    note: 'The mullins processor.',
  },
  oland: {
    host: 'oland',
    note: 'The oland processor.',
  },
  pitcairn: {
    host: 'pitcairn',
    note: 'The pitcairn processor.',
  },
  polaris_10: {
    host: 'polaris10',
    note: 'The polaris10 processor.',
  },
  polaris_11: {
    host: 'polaris11',
    note: 'The polaris11 processor.',
  },
  stoney: {
    host: 'stoney',
    note: 'The stoney processor.',
  },
  tahiti: {
    host: 'tahiti',
    note: 'The tahiti processor.',
  },
  tonga: {
    host: 'tonga',
    note: 'The tonga processor.',
  },
  verde: {
    host: 'verde',
    note: 'The verde processor.',
  },
  arm_1020_e: {
    host: 'arm1020e',
    note: 'The arm1020e processor.',
  },
  arm_1020_t: {
    host: 'arm1020t',
    note: 'The arm1020t processor.',
  },
  arm_1022_e: {
    host: 'arm1022e',
    note: 'The arm1022e processor.',
  },
  arm_10_e: {
    host: 'arm10e',
    note: 'The arm10e processor.',
  },
  arm_10_tdmi: {
    host: 'arm10tdmi',
    note: 'The arm10tdmi processor.',
  },
  arm_1136_j_s: {
    host: 'arm1136j-s',
    note: 'The arm1136j-s processor.',
  },
  arm_1136_jf_s: {
    host: 'arm1136jf-s',
    note: 'The arm1136jf-s processor.',
  },
  arm_1156_t_2_s: {
    host: 'arm1156t2-s',
    note: 'The arm1156t2-s processor.',
  },
  arm_1156_t_2_f_s: {
    host: 'arm1156t2f-s',
    note: 'The arm1156t2f-s processor.',
  },
  arm_1176_j_s: {
    host: 'arm1176j-s',
    note: 'The arm1176j-s processor.',
  },
  arm_1176_jz_s: {
    host: 'arm1176jz-s',
    note: 'The arm1176jz-s processor.',
  },
  arm_1176_jzf_s: {
    host: 'arm1176jzf-s',
    note: 'The arm1176jzf-s processor.',
  },
  arm_710_t: {
    host: 'arm710t',
    note: 'The arm710t processor.',
  },
  arm_720_t: {
    host: 'arm720t',
    note: 'The arm720t processor.',
  },
  arm_7_tdmi: {
    host: 'arm7tdmi',
    note: 'The arm7tdmi processor.',
  },
  arm_7_tdmi_s: {
    host: 'arm7tdmi-s',
    note: 'The arm7tdmi-s processor.',
  },
  arm_8: {
    host: 'arm8',
    note: 'The arm8 processor.',
  },
  arm_810: {
    host: 'arm810',
    note: 'The arm810 processor.',
  },
  arm_9: {
    host: 'arm9',
    note: 'The arm9 processor.',
  },
  arm_920: {
    host: 'arm920',
    note: 'The arm920 processor.',
  },
  arm_920_t: {
    host: 'arm920t',
    note: 'The arm920t processor.',
  },
  arm_922_t: {
    host: 'arm922t',
    note: 'The arm922t processor.',
  },
  arm_926_ej_s: {
    host: 'arm926ej-s',
    note: 'The arm926ej-s processor.',
  },
  arm_940_t: {
    host: 'arm940t',
    note: 'The arm940t processor.',
  },
  arm_946_e_s: {
    host: 'arm946e-s',
    note: 'The arm946e-s processor.',
  },
  arm_966_e_s: {
    host: 'arm966e-s',
    note: 'The arm966e-s processor.',
  },
  arm_968_e_s: {
    host: 'arm968e-s',
    note: 'The arm968e-s processor.',
  },
  arm_9_e: {
    host: 'arm9e',
    note: 'The arm9e processor.',
  },
  arm_9_tdmi: {
    host: 'arm9tdmi',
    note: 'The arm9tdmi processor.',
  },
  cortex_a_12: {
    host: 'cortex-a12',
    note: 'The cortex-a12 processor.',
  },
  cortex_a_15: {
    host: 'cortex-a15',
    note: 'The cortex-a15 processor.',
  },
  cortex_a_17: {
    host: 'cortex-a17',
    note: 'The cortex-a17 processor.',
  },
  cortex_a_32: {
    host: 'cortex-a32',
    note: 'The cortex-a32 processor.',
  },
  cortex_a_5: {
    host: 'cortex-a5',
    note: 'The cortex-a5 processor.',
  },
  cortex_a_7: {
    host: 'cortex-a7',
    note: 'The cortex-a7 processor.',
  },
  cortex_a_8: {
    host: 'cortex-a8',
    note: 'The cortex-a8 processor.',
  },
  cortex_a_9: {
    host: 'cortex-a9',
    note: 'The cortex-a9 processor.',
  },
  cortex_m_0: {
    host: 'cortex-m0',
    note: 'The cortex-m0 processor.',
  },
  cortex_m_0_plus: {
    host: 'cortex-m0plus',
    note: 'The cortex-m0plus processor.',
  },
  cortex_m_1: {
    host: 'cortex-m1',
    note: 'The cortex-m1 processor.',
  },
  cortex_m_23: {
    host: 'cortex-m23',
    note: 'The cortex-m23 processor.',
  },
  cortex_m_3: {
    host: 'cortex-m3',
    note: 'The cortex-m3 processor.',
  },
  cortex_m_33: {
    host: 'cortex-m33',
    note: 'The cortex-m33 processor.',
  },
  cortex_m_35_p: {
    host: 'cortex-m35p',
    note: 'The cortex-m35p processor.',
  },
  cortex_m_4: {
    host: 'cortex-m4',
    note: 'The cortex-m4 processor.',
  },
  cortex_m_55: {
    host: 'cortex-m55',
    note: 'The cortex-m55 processor.',
  },
  cortex_m_7: {
    host: 'cortex-m7',
    note: 'The cortex-m7 processor.',
  },
  cortex_r_4: {
    host: 'cortex-r4',
    note: 'The cortex-r4 processor.',
  },
  cortex_r_4_f: {
    host: 'cortex-r4f',
    note: 'The cortex-r4f processor.',
  },
  cortex_r_5: {
    host: 'cortex-r5',
    note: 'The cortex-r5 processor.',
  },
  cortex_r_52: {
    host: 'cortex-r52',
    note: 'The cortex-r52 processor.',
  },
  cortex_r_7: {
    host: 'cortex-r7',
    note: 'The cortex-r7 processor.',
  },
  cortex_r_8: {
    host: 'cortex-r8',
    note: 'The cortex-r8 processor.',
  },
  ep_9312: {
    host: 'ep9312',
    note: 'The ep9312 processor.',
  },
  iwmmxt: {
    host: 'iwmmxt',
    note: 'The iwmmxt processor.',
  },
  krait: {
    host: 'krait',
    note: 'The krait processor.',
  },
  mpcore: {
    host: 'mpcore',
    note: 'The mpcore processor.',
  },
  mpcorenovfp: {
    host: 'mpcorenovfp',
    note: 'The mpcorenovfp processor.',
  },
  sc_000: {
    host: 'sc000',
    note: 'The sc000 processor.',
  },
  sc_300: {
    host: 'sc300',
    note: 'The sc300 processor.',
  },
  strongarm: {
    host: 'strongarm',
    note: 'The strongarm processor.',
  },
  strongarm_110: {
    host: 'strongarm110',
    note: 'The strongarm110 processor.',
  },
  strongarm_1100: {
    host: 'strongarm1100',
    note: 'The strongarm1100 processor.',
  },
  strongarm_1110: {
    host: 'strongarm1110',
    note: 'The strongarm1110 processor.',
  },
  swift: {
    host: 'swift',
    note: 'The swift processor.',
  },
  xscale: {
    host: 'xscale',
    note: 'The xscale processor.',
  },
  at_43_usb_320: {
    host: 'at43usb320',
    note: 'The at43usb320 processor.',
  },
  at_43_usb_355: {
    host: 'at43usb355',
    note: 'The at43usb355 processor.',
  },
  at_76_c_711: {
    host: 'at76c711',
    note: 'The at76c711 processor.',
  },
  at_86_rf_401: {
    host: 'at86rf401',
    note: 'The at86rf401 processor.',
  },
  at_90_c_8534: {
    host: 'at90c8534',
    note: 'The at90c8534 processor.',
  },
  at_90_can_128: {
    host: 'at90can128',
    note: 'The at90can128 processor.',
  },
  at_90_can_32: {
    host: 'at90can32',
    note: 'The at90can32 processor.',
  },
  at_90_can_64: {
    host: 'at90can64',
    note: 'The at90can64 processor.',
  },
  at_90_pwm_1: {
    host: 'at90pwm1',
    note: 'The at90pwm1 processor.',
  },
  at_90_pwm_161: {
    host: 'at90pwm161',
    note: 'The at90pwm161 processor.',
  },
  at_90_pwm_2: {
    host: 'at90pwm2',
    note: 'The at90pwm2 processor.',
  },
  at_90_pwm_216: {
    host: 'at90pwm216',
    note: 'The at90pwm216 processor.',
  },
  at_90_pwm_2_b: {
    host: 'at90pwm2b',
    note: 'The at90pwm2b processor.',
  },
  at_90_pwm_3: {
    host: 'at90pwm3',
    note: 'The at90pwm3 processor.',
  },
  at_90_pwm_316: {
    host: 'at90pwm316',
    note: 'The at90pwm316 processor.',
  },
  at_90_pwm_3_b: {
    host: 'at90pwm3b',
    note: 'The at90pwm3b processor.',
  },
  at_90_pwm_81: {
    host: 'at90pwm81',
    note: 'The at90pwm81 processor.',
  },
  at_90_s_1200: {
    host: 'at90s1200',
    note: 'The at90s1200 processor.',
  },
  at_90_s_2313: {
    host: 'at90s2313',
    note: 'The at90s2313 processor.',
  },
  at_90_s_2323: {
    host: 'at90s2323',
    note: 'The at90s2323 processor.',
  },
  at_90_s_2333: {
    host: 'at90s2333',
    note: 'The at90s2333 processor.',
  },
  at_90_s_2343: {
    host: 'at90s2343',
    note: 'The at90s2343 processor.',
  },
  at_90_s_4414: {
    host: 'at90s4414',
    note: 'The at90s4414 processor.',
  },
  at_90_s_4433: {
    host: 'at90s4433',
    note: 'The at90s4433 processor.',
  },
  at_90_s_4434: {
    host: 'at90s4434',
    note: 'The at90s4434 processor.',
  },
  at_90_s_8515: {
    host: 'at90s8515',
    note: 'The at90s8515 processor.',
  },
  at_90_s_8535: {
    host: 'at90s8535',
    note: 'The at90s8535 processor.',
  },
  at_90_scr_100: {
    host: 'at90scr100',
    note: 'The at90scr100 processor.',
  },
  at_90_usb_1286: {
    host: 'at90usb1286',
    note: 'The at90usb1286 processor.',
  },
  at_90_usb_1287: {
    host: 'at90usb1287',
    note: 'The at90usb1287 processor.',
  },
  at_90_usb_162: {
    host: 'at90usb162',
    note: 'The at90usb162 processor.',
  },
  at_90_usb_646: {
    host: 'at90usb646',
    note: 'The at90usb646 processor.',
  },
  at_90_usb_647: {
    host: 'at90usb647',
    note: 'The at90usb647 processor.',
  },
  at_90_usb_82: {
    host: 'at90usb82',
    note: 'The at90usb82 processor.',
  },
  at_94_k: {
    host: 'at94k',
    note: 'The at94k processor.',
  },
  ata_5272: {
    host: 'ata5272',
    note: 'The ata5272 processor.',
  },
  ata_5505: {
    host: 'ata5505',
    note: 'The ata5505 processor.',
  },
  ata_5790: {
    host: 'ata5790',
    note: 'The ata5790 processor.',
  },
  ata_5795: {
    host: 'ata5795',
    note: 'The ata5795 processor.',
  },
  ata_6285: {
    host: 'ata6285',
    note: 'The ata6285 processor.',
  },
  ata_6286: {
    host: 'ata6286',
    note: 'The ata6286 processor.',
  },
  ata_6289: {
    host: 'ata6289',
    note: 'The ata6289 processor.',
  },
  atmega_103: {
    host: 'atmega103',
    note: 'The atmega103 processor.',
  },
  atmega_128: {
    host: 'atmega128',
    note: 'The atmega128 processor.',
  },
  atmega_1280: {
    host: 'atmega1280',
    note: 'The atmega1280 processor.',
  },
  atmega_1281: {
    host: 'atmega1281',
    note: 'The atmega1281 processor.',
  },
  atmega_1284: {
    host: 'atmega1284',
    note: 'The atmega1284 processor.',
  },
  atmega_1284_p: {
    host: 'atmega1284p',
    note: 'The atmega1284p processor.',
  },
  atmega_1284_rfr_2: {
    host: 'atmega1284rfr2',
    note: 'The atmega1284rfr2 processor.',
  },
  atmega_128_a: {
    host: 'atmega128a',
    note: 'The atmega128a processor.',
  },
  atmega_128_rfa_1: {
    host: 'atmega128rfa1',
    note: 'The atmega128rfa1 processor.',
  },
  atmega_128_rfr_2: {
    host: 'atmega128rfr2',
    note: 'The atmega128rfr2 processor.',
  },
  atmega_16: {
    host: 'atmega16',
    note: 'The atmega16 processor.',
  },
  atmega_161: {
    host: 'atmega161',
    note: 'The atmega161 processor.',
  },
  atmega_162: {
    host: 'atmega162',
    note: 'The atmega162 processor.',
  },
  atmega_163: {
    host: 'atmega163',
    note: 'The atmega163 processor.',
  },
  atmega_164_a: {
    host: 'atmega164a',
    note: 'The atmega164a processor.',
  },
  atmega_164_p: {
    host: 'atmega164p',
    note: 'The atmega164p processor.',
  },
  atmega_164_pa: {
    host: 'atmega164pa',
    note: 'The atmega164pa processor.',
  },
  atmega_165: {
    host: 'atmega165',
    note: 'The atmega165 processor.',
  },
  atmega_165_a: {
    host: 'atmega165a',
    note: 'The atmega165a processor.',
  },
  atmega_165_p: {
    host: 'atmega165p',
    note: 'The atmega165p processor.',
  },
  atmega_165_pa: {
    host: 'atmega165pa',
    note: 'The atmega165pa processor.',
  },
  atmega_168: {
    host: 'atmega168',
    note: 'The atmega168 processor.',
  },
  atmega_168_a: {
    host: 'atmega168a',
    note: 'The atmega168a processor.',
  },
  atmega_168_p: {
    host: 'atmega168p',
    note: 'The atmega168p processor.',
  },
  atmega_168_pa: {
    host: 'atmega168pa',
    note: 'The atmega168pa processor.',
  },
  atmega_169: {
    host: 'atmega169',
    note: 'The atmega169 processor.',
  },
  atmega_169_a: {
    host: 'atmega169a',
    note: 'The atmega169a processor.',
  },
  atmega_169_p: {
    host: 'atmega169p',
    note: 'The atmega169p processor.',
  },
  atmega_169_pa: {
    host: 'atmega169pa',
    note: 'The atmega169pa processor.',
  },
  atmega_16_a: {
    host: 'atmega16a',
    note: 'The atmega16a processor.',
  },
  atmega_16_hva: {
    host: 'atmega16hva',
    note: 'The atmega16hva processor.',
  },
  atmega_16_hva_2: {
    host: 'atmega16hva2',
    note: 'The atmega16hva2 processor.',
  },
  atmega_16_hvb: {
    host: 'atmega16hvb',
    note: 'The atmega16hvb processor.',
  },
  atmega_16_hvbrevb: {
    host: 'atmega16hvbrevb',
    note: 'The atmega16hvbrevb processor.',
  },
  atmega_16_m_1: {
    host: 'atmega16m1',
    note: 'The atmega16m1 processor.',
  },
  atmega_16_u_2: {
    host: 'atmega16u2',
    note: 'The atmega16u2 processor.',
  },
  atmega_16_u_4: {
    host: 'atmega16u4',
    note: 'The atmega16u4 processor.',
  },
  atmega_2560: {
    host: 'atmega2560',
    note: 'The atmega2560 processor.',
  },
  atmega_2561: {
    host: 'atmega2561',
    note: 'The atmega2561 processor.',
  },
  atmega_2564_rfr_2: {
    host: 'atmega2564rfr2',
    note: 'The atmega2564rfr2 processor.',
  },
  atmega_256_rfr_2: {
    host: 'atmega256rfr2',
    note: 'The atmega256rfr2 processor.',
  },
  atmega_32: {
    host: 'atmega32',
    note: 'The atmega32 processor.',
  },
  atmega_323: {
    host: 'atmega323',
    note: 'The atmega323 processor.',
  },
  atmega_324_a: {
    host: 'atmega324a',
    note: 'The atmega324a processor.',
  },
  atmega_324_p: {
    host: 'atmega324p',
    note: 'The atmega324p processor.',
  },
  atmega_324_pa: {
    host: 'atmega324pa',
    note: 'The atmega324pa processor.',
  },
  atmega_325: {
    host: 'atmega325',
    note: 'The atmega325 processor.',
  },
  atmega_3250: {
    host: 'atmega3250',
    note: 'The atmega3250 processor.',
  },
  atmega_3250_a: {
    host: 'atmega3250a',
    note: 'The atmega3250a processor.',
  },
  atmega_3250_p: {
    host: 'atmega3250p',
    note: 'The atmega3250p processor.',
  },
  atmega_3250_pa: {
    host: 'atmega3250pa',
    note: 'The atmega3250pa processor.',
  },
  atmega_325_a: {
    host: 'atmega325a',
    note: 'The atmega325a processor.',
  },
  atmega_325_p: {
    host: 'atmega325p',
    note: 'The atmega325p processor.',
  },
  atmega_325_pa: {
    host: 'atmega325pa',
    note: 'The atmega325pa processor.',
  },
  atmega_328: {
    host: 'atmega328',
    note: 'The atmega328 processor.',
  },
  atmega_328_p: {
    host: 'atmega328p',
    note: 'The atmega328p processor.',
  },
  atmega_329: {
    host: 'atmega329',
    note: 'The atmega329 processor.',
  },
  atmega_3290: {
    host: 'atmega3290',
    note: 'The atmega3290 processor.',
  },
  atmega_3290_a: {
    host: 'atmega3290a',
    note: 'The atmega3290a processor.',
  },
  atmega_3290_p: {
    host: 'atmega3290p',
    note: 'The atmega3290p processor.',
  },
  atmega_3290_pa: {
    host: 'atmega3290pa',
    note: 'The atmega3290pa processor.',
  },
  atmega_329_a: {
    host: 'atmega329a',
    note: 'The atmega329a processor.',
  },
  atmega_329_p: {
    host: 'atmega329p',
    note: 'The atmega329p processor.',
  },
  atmega_329_pa: {
    host: 'atmega329pa',
    note: 'The atmega329pa processor.',
  },
  atmega_32_a: {
    host: 'atmega32a',
    note: 'The atmega32a processor.',
  },
  atmega_32_c_1: {
    host: 'atmega32c1',
    note: 'The atmega32c1 processor.',
  },
  atmega_32_hvb: {
    host: 'atmega32hvb',
    note: 'The atmega32hvb processor.',
  },
  atmega_32_hvbrevb: {
    host: 'atmega32hvbrevb',
    note: 'The atmega32hvbrevb processor.',
  },
  atmega_32_m_1: {
    host: 'atmega32m1',
    note: 'The atmega32m1 processor.',
  },
  atmega_32_u_2: {
    host: 'atmega32u2',
    note: 'The atmega32u2 processor.',
  },
  atmega_32_u_4: {
    host: 'atmega32u4',
    note: 'The atmega32u4 processor.',
  },
  atmega_32_u_6: {
    host: 'atmega32u6',
    note: 'The atmega32u6 processor.',
  },
  atmega_406: {
    host: 'atmega406',
    note: 'The atmega406 processor.',
  },
  atmega_48: {
    host: 'atmega48',
    note: 'The atmega48 processor.',
  },
  atmega_48_a: {
    host: 'atmega48a',
    note: 'The atmega48a processor.',
  },
  atmega_48_p: {
    host: 'atmega48p',
    note: 'The atmega48p processor.',
  },
  atmega_48_pa: {
    host: 'atmega48pa',
    note: 'The atmega48pa processor.',
  },
  atmega_64: {
    host: 'atmega64',
    note: 'The atmega64 processor.',
  },
  atmega_640: {
    host: 'atmega640',
    note: 'The atmega640 processor.',
  },
  atmega_644: {
    host: 'atmega644',
    note: 'The atmega644 processor.',
  },
  atmega_644_a: {
    host: 'atmega644a',
    note: 'The atmega644a processor.',
  },
  atmega_644_p: {
    host: 'atmega644p',
    note: 'The atmega644p processor.',
  },
  atmega_644_pa: {
    host: 'atmega644pa',
    note: 'The atmega644pa processor.',
  },
  atmega_644_rfr_2: {
    host: 'atmega644rfr2',
    note: 'The atmega644rfr2 processor.',
  },
  atmega_645: {
    host: 'atmega645',
    note: 'The atmega645 processor.',
  },
  atmega_6450: {
    host: 'atmega6450',
    note: 'The atmega6450 processor.',
  },
  atmega_6450_a: {
    host: 'atmega6450a',
    note: 'The atmega6450a processor.',
  },
  atmega_6450_p: {
    host: 'atmega6450p',
    note: 'The atmega6450p processor.',
  },
  atmega_645_a: {
    host: 'atmega645a',
    note: 'The atmega645a processor.',
  },
  atmega_645_p: {
    host: 'atmega645p',
    note: 'The atmega645p processor.',
  },
  atmega_649: {
    host: 'atmega649',
    note: 'The atmega649 processor.',
  },
  atmega_6490: {
    host: 'atmega6490',
    note: 'The atmega6490 processor.',
  },
  atmega_6490_a: {
    host: 'atmega6490a',
    note: 'The atmega6490a processor.',
  },
  atmega_6490_p: {
    host: 'atmega6490p',
    note: 'The atmega6490p processor.',
  },
  atmega_649_a: {
    host: 'atmega649a',
    note: 'The atmega649a processor.',
  },
  atmega_649_p: {
    host: 'atmega649p',
    note: 'The atmega649p processor.',
  },
  atmega_64_a: {
    host: 'atmega64a',
    note: 'The atmega64a processor.',
  },
  atmega_64_c_1: {
    host: 'atmega64c1',
    note: 'The atmega64c1 processor.',
  },
  atmega_64_hve: {
    host: 'atmega64hve',
    note: 'The atmega64hve processor.',
  },
  atmega_64_m_1: {
    host: 'atmega64m1',
    note: 'The atmega64m1 processor.',
  },
  atmega_64_rfr_2: {
    host: 'atmega64rfr2',
    note: 'The atmega64rfr2 processor.',
  },
  atmega_8: {
    host: 'atmega8',
    note: 'The atmega8 processor.',
  },
  atmega_8515: {
    host: 'atmega8515',
    note: 'The atmega8515 processor.',
  },
  atmega_8535: {
    host: 'atmega8535',
    note: 'The atmega8535 processor.',
  },
  atmega_88: {
    host: 'atmega88',
    note: 'The atmega88 processor.',
  },
  atmega_88_a: {
    host: 'atmega88a',
    note: 'The atmega88a processor.',
  },
  atmega_88_p: {
    host: 'atmega88p',
    note: 'The atmega88p processor.',
  },
  atmega_88_pa: {
    host: 'atmega88pa',
    note: 'The atmega88pa processor.',
  },
  atmega_8_a: {
    host: 'atmega8a',
    note: 'The atmega8a processor.',
  },
  atmega_8_hva: {
    host: 'atmega8hva',
    note: 'The atmega8hva processor.',
  },
  atmega_8_u_2: {
    host: 'atmega8u2',
    note: 'The atmega8u2 processor.',
  },
  attiny_10: {
    host: 'attiny10',
    note: 'The attiny10 processor.',
  },
  attiny_102: {
    host: 'attiny102',
    note: 'The attiny102 processor.',
  },
  attiny_104: {
    host: 'attiny104',
    note: 'The attiny104 processor.',
  },
  attiny_11: {
    host: 'attiny11',
    note: 'The attiny11 processor.',
  },
  attiny_12: {
    host: 'attiny12',
    note: 'The attiny12 processor.',
  },
  attiny_13: {
    host: 'attiny13',
    note: 'The attiny13 processor.',
  },
  attiny_13_a: {
    host: 'attiny13a',
    note: 'The attiny13a processor.',
  },
  attiny_15: {
    host: 'attiny15',
    note: 'The attiny15 processor.',
  },
  attiny_1634: {
    host: 'attiny1634',
    note: 'The attiny1634 processor.',
  },
  attiny_167: {
    host: 'attiny167',
    note: 'The attiny167 processor.',
  },
  attiny_20: {
    host: 'attiny20',
    note: 'The attiny20 processor.',
  },
  attiny_22: {
    host: 'attiny22',
    note: 'The attiny22 processor.',
  },
  attiny_2313: {
    host: 'attiny2313',
    note: 'The attiny2313 processor.',
  },
  attiny_2313_a: {
    host: 'attiny2313a',
    note: 'The attiny2313a processor.',
  },
  attiny_24: {
    host: 'attiny24',
    note: 'The attiny24 processor.',
  },
  attiny_24_a: {
    host: 'attiny24a',
    note: 'The attiny24a processor.',
  },
  attiny_25: {
    host: 'attiny25',
    note: 'The attiny25 processor.',
  },
  attiny_26: {
    host: 'attiny26',
    note: 'The attiny26 processor.',
  },
  attiny_261: {
    host: 'attiny261',
    note: 'The attiny261 processor.',
  },
  attiny_261_a: {
    host: 'attiny261a',
    note: 'The attiny261a processor.',
  },
  attiny_28: {
    host: 'attiny28',
    note: 'The attiny28 processor.',
  },
  attiny_4: {
    host: 'attiny4',
    note: 'The attiny4 processor.',
  },
  attiny_40: {
    host: 'attiny40',
    note: 'The attiny40 processor.',
  },
  attiny_4313: {
    host: 'attiny4313',
    note: 'The attiny4313 processor.',
  },
  attiny_43_u: {
    host: 'attiny43u',
    note: 'The attiny43u processor.',
  },
  attiny_44: {
    host: 'attiny44',
    note: 'The attiny44 processor.',
  },
  attiny_44_a: {
    host: 'attiny44a',
    note: 'The attiny44a processor.',
  },
  attiny_45: {
    host: 'attiny45',
    note: 'The attiny45 processor.',
  },
  attiny_461: {
    host: 'attiny461',
    note: 'The attiny461 processor.',
  },
  attiny_461_a: {
    host: 'attiny461a',
    note: 'The attiny461a processor.',
  },
  attiny_48: {
    host: 'attiny48',
    note: 'The attiny48 processor.',
  },
  attiny_5: {
    host: 'attiny5',
    note: 'The attiny5 processor.',
  },
  attiny_828: {
    host: 'attiny828',
    note: 'The attiny828 processor.',
  },
  attiny_84: {
    host: 'attiny84',
    note: 'The attiny84 processor.',
  },
  attiny_84_a: {
    host: 'attiny84a',
    note: 'The attiny84a processor.',
  },
  attiny_85: {
    host: 'attiny85',
    note: 'The attiny85 processor.',
  },
  attiny_861: {
    host: 'attiny861',
    note: 'The attiny861 processor.',
  },
  attiny_861_a: {
    host: 'attiny861a',
    note: 'The attiny861a processor.',
  },
  attiny_87: {
    host: 'attiny87',
    note: 'The attiny87 processor.',
  },
  attiny_88: {
    host: 'attiny88',
    note: 'The attiny88 processor.',
  },
  attiny_9: {
    host: 'attiny9',
    note: 'The attiny9 processor.',
  },
  atxmega_128_a_1: {
    host: 'atxmega128a1',
    note: 'The atxmega128a1 processor.',
  },
  atxmega_128_a_1_u: {
    host: 'atxmega128a1u',
    note: 'The atxmega128a1u processor.',
  },
  atxmega_128_a_3: {
    host: 'atxmega128a3',
    note: 'The atxmega128a3 processor.',
  },
  atxmega_128_a_3_u: {
    host: 'atxmega128a3u',
    note: 'The atxmega128a3u processor.',
  },
  atxmega_128_a_4_u: {
    host: 'atxmega128a4u',
    note: 'The atxmega128a4u processor.',
  },
  atxmega_128_b_1: {
    host: 'atxmega128b1',
    note: 'The atxmega128b1 processor.',
  },
  atxmega_128_b_3: {
    host: 'atxmega128b3',
    note: 'The atxmega128b3 processor.',
  },
  atxmega_128_c_3: {
    host: 'atxmega128c3',
    note: 'The atxmega128c3 processor.',
  },
  atxmega_128_d_3: {
    host: 'atxmega128d3',
    note: 'The atxmega128d3 processor.',
  },
  atxmega_128_d_4: {
    host: 'atxmega128d4',
    note: 'The atxmega128d4 processor.',
  },
  atxmega_16_a_4: {
    host: 'atxmega16a4',
    note: 'The atxmega16a4 processor.',
  },
  atxmega_16_a_4_u: {
    host: 'atxmega16a4u',
    note: 'The atxmega16a4u processor.',
  },
  atxmega_16_c_4: {
    host: 'atxmega16c4',
    note: 'The atxmega16c4 processor.',
  },
  atxmega_16_d_4: {
    host: 'atxmega16d4',
    note: 'The atxmega16d4 processor.',
  },
  atxmega_16_e_5: {
    host: 'atxmega16e5',
    note: 'The atxmega16e5 processor.',
  },
  atxmega_192_a_3: {
    host: 'atxmega192a3',
    note: 'The atxmega192a3 processor.',
  },
  atxmega_192_a_3_u: {
    host: 'atxmega192a3u',
    note: 'The atxmega192a3u processor.',
  },
  atxmega_192_c_3: {
    host: 'atxmega192c3',
    note: 'The atxmega192c3 processor.',
  },
  atxmega_192_d_3: {
    host: 'atxmega192d3',
    note: 'The atxmega192d3 processor.',
  },
  atxmega_256_a_3: {
    host: 'atxmega256a3',
    note: 'The atxmega256a3 processor.',
  },
  atxmega_256_a_3_b: {
    host: 'atxmega256a3b',
    note: 'The atxmega256a3b processor.',
  },
  atxmega_256_a_3_bu: {
    host: 'atxmega256a3bu',
    note: 'The atxmega256a3bu processor.',
  },
  atxmega_256_a_3_u: {
    host: 'atxmega256a3u',
    note: 'The atxmega256a3u processor.',
  },
  atxmega_256_c_3: {
    host: 'atxmega256c3',
    note: 'The atxmega256c3 processor.',
  },
  atxmega_256_d_3: {
    host: 'atxmega256d3',
    note: 'The atxmega256d3 processor.',
  },
  atxmega_32_a_4: {
    host: 'atxmega32a4',
    note: 'The atxmega32a4 processor.',
  },
  atxmega_32_a_4_u: {
    host: 'atxmega32a4u',
    note: 'The atxmega32a4u processor.',
  },
  atxmega_32_c_4: {
    host: 'atxmega32c4',
    note: 'The atxmega32c4 processor.',
  },
  atxmega_32_d_4: {
    host: 'atxmega32d4',
    note: 'The atxmega32d4 processor.',
  },
  atxmega_32_e_5: {
    host: 'atxmega32e5',
    note: 'The atxmega32e5 processor.',
  },
  atxmega_32_x_1: {
    host: 'atxmega32x1',
    note: 'The atxmega32x1 processor.',
  },
  atxmega_384_c_3: {
    host: 'atxmega384c3',
    note: 'The atxmega384c3 processor.',
  },
  atxmega_384_d_3: {
    host: 'atxmega384d3',
    note: 'The atxmega384d3 processor.',
  },
  atxmega_64_a_1: {
    host: 'atxmega64a1',
    note: 'The atxmega64a1 processor.',
  },
  atxmega_64_a_1_u: {
    host: 'atxmega64a1u',
    note: 'The atxmega64a1u processor.',
  },
  atxmega_64_a_3: {
    host: 'atxmega64a3',
    note: 'The atxmega64a3 processor.',
  },
  atxmega_64_a_3_u: {
    host: 'atxmega64a3u',
    note: 'The atxmega64a3u processor.',
  },
  atxmega_64_a_4_u: {
    host: 'atxmega64a4u',
    note: 'The atxmega64a4u processor.',
  },
  atxmega_64_b_1: {
    host: 'atxmega64b1',
    note: 'The atxmega64b1 processor.',
  },
  atxmega_64_b_3: {
    host: 'atxmega64b3',
    note: 'The atxmega64b3 processor.',
  },
  atxmega_64_c_3: {
    host: 'atxmega64c3',
    note: 'The atxmega64c3 processor.',
  },
  atxmega_64_d_3: {
    host: 'atxmega64d3',
    note: 'The atxmega64d3 processor.',
  },
  atxmega_64_d_4: {
    host: 'atxmega64d4',
    note: 'The atxmega64d4 processor.',
  },
  atxmega_8_e_5: {
    host: 'atxmega8e5',
    note: 'The atxmega8e5 processor.',
  },
  avr_1: {
    host: 'avr1',
    note: 'The avr1 processor.',
  },
  avr_2: {
    host: 'avr2',
    note: 'The avr2 processor.',
  },
  avr_25: {
    host: 'avr25',
    note: 'The avr25 processor.',
  },
  avr_3: {
    host: 'avr3',
    note: 'The avr3 processor.',
  },
  avr_31: {
    host: 'avr31',
    note: 'The avr31 processor.',
  },
  avr_35: {
    host: 'avr35',
    note: 'The avr35 processor.',
  },
  avr_4: {
    host: 'avr4',
    note: 'The avr4 processor.',
  },
  avr_5: {
    host: 'avr5',
    note: 'The avr5 processor.',
  },
  avr_51: {
    host: 'avr51',
    note: 'The avr51 processor.',
  },
  avr_6: {
    host: 'avr6',
    note: 'The avr6 processor.',
  },
  avrtiny: {
    host: 'avrtiny',
    note: 'The avrtiny processor.',
  },
  avrxmega_1: {
    host: 'avrxmega1',
    note: 'The avrxmega1 processor.',
  },
  avrxmega_2: {
    host: 'avrxmega2',
    note: 'The avrxmega2 processor.',
  },
  avrxmega_3: {
    host: 'avrxmega3',
    note: 'The avrxmega3 processor.',
  },
  avrxmega_4: {
    host: 'avrxmega4',
    note: 'The avrxmega4 processor.',
  },
  avrxmega_5: {
    host: 'avrxmega5',
    note: 'The avrxmega5 processor.',
  },
  avrxmega_6: {
    host: 'avrxmega6',
    note: 'The avrxmega6 processor.',
  },
  avrxmega_7: {
    host: 'avrxmega7',
    note: 'The avrxmega7 processor.',
  },
  m_3000: {
    host: 'm3000',
    note: 'The m3000 processor.',
  },
  probe: {
    host: 'probe',
    note: 'The probe processor.',
  },
  v_1: {
    host: 'v1',
    note: 'The v1 processor.',
  },
  v_2: {
    host: 'v2',
    note: 'The v2 processor.',
  },
  v_3: {
    host: 'v3',
    note: 'The v3 processor.',
  },
  hexagonv_5: {
    host: 'hexagonv5',
    note: 'The hexagonv5 processor.',
  },
  hexagonv_55: {
    host: 'hexagonv55',
    note: 'The hexagonv55 processor.',
  },
  hexagonv_60: {
    host: 'hexagonv60',
    note: 'The hexagonv60 processor.',
  },
  hexagonv_62: {
    host: 'hexagonv62',
    note: 'The hexagonv62 processor.',
  },
  hexagonv_65: {
    host: 'hexagonv65',
    note: 'The hexagonv65 processor.',
  },
  hexagonv_66: {
    host: 'hexagonv66',
    note: 'The hexagonv66 processor.',
  },
  hexagonv_67: {
    host: 'hexagonv67',
    note: 'The hexagonv67 processor.',
  },
  hexagonv_67_t: {
    host: 'hexagonv67t',
    note: 'The hexagonv67t processor.',
  },
  mips_1: {
    host: 'mips1',
    note: 'The mips1 processor.',
  },
  mips_2: {
    host: 'mips2',
    note: 'The mips2 processor.',
  },
  mips_3: {
    host: 'mips3',
    note: 'The mips3 processor.',
  },
  mips_32: {
    host: 'mips32',
    note: 'The mips32 processor.',
  },
  mips_32_r_2: {
    host: 'mips32r2',
    note: 'The mips32r2 processor.',
  },
  mips_32_r_3: {
    host: 'mips32r3',
    note: 'The mips32r3 processor.',
  },
  mips_32_r_5: {
    host: 'mips32r5',
    note: 'The mips32r5 processor.',
  },
  mips_32_r_6: {
    host: 'mips32r6',
    note: 'The mips32r6 processor.',
  },
  mips_4: {
    host: 'mips4',
    note: 'The mips4 processor.',
  },
  mips_5: {
    host: 'mips5',
    note: 'The mips5 processor.',
  },
  mips_64: {
    host: 'mips64',
    note: 'The mips64 processor.',
  },
  mips_64_r_2: {
    host: 'mips64r2',
    note: 'The mips64r2 processor.',
  },
  mips_64_r_3: {
    host: 'mips64r3',
    note: 'The mips64r3 processor.',
  },
  mips_64_r_5: {
    host: 'mips64r5',
    note: 'The mips64r5 processor.',
  },
  mips_64_r_6: {
    host: 'mips64r6',
    note: 'The mips64r6 processor.',
  },
  octeon: {
    host: 'octeon+',
    note: 'The octeon+ processor.',
  },
  p_5600: {
    host: 'p5600',
    note: 'The p5600 processor.',
  },
  msp_430: {
    host: 'msp430',
    note: 'The msp430 processor.',
  },
  msp_430_x: {
    host: 'msp430x',
    note: 'The msp430x processor.',
  },
  sm_20: {
    host: 'sm_20',
    note: 'The sm_20 processor.',
  },
  sm_21: {
    host: 'sm_21',
    note: 'The sm_21 processor.',
  },
  sm_30: {
    host: 'sm_30',
    note: 'The sm_30 processor.',
  },
  sm_32: {
    host: 'sm_32',
    note: 'The sm_32 processor.',
  },
  sm_35: {
    host: 'sm_35',
    note: 'The sm_35 processor.',
  },
  sm_37: {
    host: 'sm_37',
    note: 'The sm_37 processor.',
  },
  sm_50: {
    host: 'sm_50',
    note: 'The sm_50 processor.',
  },
  sm_52: {
    host: 'sm_52',
    note: 'The sm_52 processor.',
  },
  sm_53: {
    host: 'sm_53',
    note: 'The sm_53 processor.',
  },
  sm_60: {
    host: 'sm_60',
    note: 'The sm_60 processor.',
  },
  sm_61: {
    host: 'sm_61',
    note: 'The sm_61 processor.',
  },
  sm_62: {
    host: 'sm_62',
    note: 'The sm_62 processor.',
  },
  sm_70: {
    host: 'sm_70',
    note: 'The sm_70 processor.',
  },
  sm_72: {
    host: 'sm_72',
    note: 'The sm_72 processor.',
  },
  sm_75: {
    host: 'sm_75',
    note: 'The sm_75 processor.',
  },
  sm_80: {
    host: 'sm_80',
    note: 'The sm_80 processor.',
  },
  '603_e': {
    host: '603e',
    note: 'The 603e processor.',
  },
  '603_ev': {
    host: '603ev',
    note: 'The 603ev processor.',
  },
  '604_e': {
    host: '604e',
    note: 'The 604e processor.',
  },
  a_2: {
    host: 'a2',
    note: 'The a2 processor.',
  },
  a_2_q: {
    host: 'a2q',
    note: 'The a2q processor.',
  },
  e_500: {
    host: 'e500',
    note: 'The e500 processor.',
  },
  e_500_mc: {
    host: 'e500mc',
    note: 'The e500mc processor.',
  },
  e_5500: {
    host: 'e5500',
    note: 'The e5500 processor.',
  },
  future: {
    host: 'future',
    note: 'The future processor.',
  },
  g_3: {
    host: 'g3',
    note: 'The g3 processor.',
  },
  g_4: {
    host: 'g4+',
    note: 'The g4+ processor.',
  },
  g_5: {
    host: 'g5',
    note: 'The g5 processor.',
  },
  ppc: {
    host: 'ppc',
    note: 'The ppc processor.',
  },
  ppc_32: {
    host: 'ppc32',
    note: 'The ppc32 processor.',
  },
  ppc_64: {
    host: 'ppc64',
    note: 'The ppc64 processor.',
  },
  ppc_64_le: {
    host: 'ppc64le',
    note: 'The ppc64le processor.',
  },
  pwr_10: {
    host: 'pwr10',
    note: 'The pwr10 processor.',
  },
  pwr_3: {
    host: 'pwr3',
    note: 'The pwr3 processor.',
  },
  pwr_4: {
    host: 'pwr4',
    note: 'The pwr4 processor.',
  },
  pwr_5: {
    host: 'pwr5',
    note: 'The pwr5 processor.',
  },
  pwr_5_x: {
    host: 'pwr5x',
    note: 'The pwr5x processor.',
  },
  pwr_6: {
    host: 'pwr6',
    note: 'The pwr6 processor.',
  },
  pwr_6_x: {
    host: 'pwr6x',
    note: 'The pwr6x processor.',
  },
  pwr_7: {
    host: 'pwr7',
    note: 'The pwr7 processor.',
  },
  pwr_8: {
    host: 'pwr8',
    note: 'The pwr8 processor.',
  },
  pwr_9: {
    host: 'pwr9',
    note: 'The pwr9 processor.',
  },
  barts: {
    host: 'barts',
    note: 'The barts processor.',
  },
  caicos: {
    host: 'caicos',
    note: 'The caicos processor.',
  },
  cayman: {
    host: 'cayman',
    note: 'The cayman processor.',
  },
  cedar: {
    host: 'cedar',
    note: 'The cedar processor.',
  },
  cypress: {
    host: 'cypress',
    note: 'The cypress processor.',
  },
  juniper: {
    host: 'juniper',
    note: 'The juniper processor.',
  },
  r_600: {
    host: 'r600',
    note: 'The r600 processor.',
  },
  r_630: {
    host: 'r630',
    note: 'The r630 processor.',
  },
  redwood: {
    host: 'redwood',
    note: 'The redwood processor.',
  },
  rs_880: {
    host: 'rs880',
    note: 'The rs880 processor.',
  },
  rv_670: {
    host: 'rv670',
    note: 'The rv670 processor.',
  },
  rv_710: {
    host: 'rv710',
    note: 'The rv710 processor.',
  },
  rv_730: {
    host: 'rv730',
    note: 'The rv730 processor.',
  },
  rv_770: {
    host: 'rv770',
    note: 'The rv770 processor.',
  },
  sumo: {
    host: 'sumo',
    note: 'The sumo processor.',
  },
  turks: {
    host: 'turks',
    note: 'The turks processor.',
  },
  generic_rv_32: {
    host: 'generic-rv32',
    note: 'The generic-rv32 processor.',
  },
  generic_rv_64: {
    host: 'generic-rv64',
    note: 'The generic-rv64 processor.',
  },
  rocket_rv_32: {
    host: 'rocket-rv32',
    note: 'The rocket-rv32 processor.',
  },
  rocket_rv_64: {
    host: 'rocket-rv64',
    note: 'The rocket-rv64 processor.',
  },
  sifive_e_31: {
    host: 'sifive-e31',
    note: 'The sifive-e31 processor.',
  },
  sifive_u_54: {
    host: 'sifive-u54',
    note: 'The sifive-u54 processor.',
  },
  at_697_e: {
    host: 'at697e',
    note: 'The at697e processor.',
  },
  at_697_f: {
    host: 'at697f',
    note: 'The at697f processor.',
  },
  f_934: {
    host: 'f934',
    note: 'The f934 processor.',
  },
  gr_712_rc: {
    host: 'gr712rc',
    note: 'The gr712rc processor.',
  },
  gr_740: {
    host: 'gr740',
    note: 'The gr740 processor.',
  },
  hypersparc: {
    host: 'hypersparc',
    note: 'The hypersparc processor.',
  },
  leon_2: {
    host: 'leon2',
    note: 'The leon2 processor.',
  },
  leon_3: {
    host: 'leon3',
    note: 'The leon3 processor.',
  },
  leon_4: {
    host: 'leon4',
    note: 'The leon4 processor.',
  },
  ma_2080: {
    host: 'ma2080',
    note: 'The ma2080 processor.',
  },
  ma_2085: {
    host: 'ma2085',
    note: 'The ma2085 processor.',
  },
  ma_2100: {
    host: 'ma2100',
    note: 'The ma2100 processor.',
  },
  ma_2150: {
    host: 'ma2150',
    note: 'The ma2150 processor.',
  },
  ma_2155: {
    host: 'ma2155',
    note: 'The ma2155 processor.',
  },
  ma_2450: {
    host: 'ma2450',
    note: 'The ma2450 processor.',
  },
  ma_2455: {
    host: 'ma2455',
    note: 'The ma2455 processor.',
  },
  ma_2480: {
    host: 'ma2480',
    note: 'The ma2480 processor.',
  },
  ma_2485: {
    host: 'ma2485',
    note: 'The ma2485 processor.',
  },
  ma_2_x_5_x: {
    host: 'ma2x5x',
    note: 'The ma2x5x processor.',
  },
  ma_2_x_8_x: {
    host: 'ma2x8x',
    note: 'The ma2x8x processor.',
  },
  myriad_2: {
    host: 'myriad2',
    note: 'The myriad2 processor.',
  },
  myriad_2_1: {
    host: 'myriad2.1',
    note: 'The myriad2.1 processor.',
  },
  myriad_2_2: {
    host: 'myriad2.2',
    note: 'The myriad2.2 processor.',
  },
  myriad_2_3: {
    host: 'myriad2.3',
    note: 'The myriad2.3 processor.',
  },
  niagara: {
    host: 'niagara',
    note: 'The niagara processor.',
  },
  niagara_2: {
    host: 'niagara2',
    note: 'The niagara2 processor.',
  },
  niagara_3: {
    host: 'niagara3',
    note: 'The niagara3 processor.',
  },
  niagara_4: {
    host: 'niagara4',
    note: 'The niagara4 processor.',
  },
  sparclet: {
    host: 'sparclet',
    note: 'The sparclet processor.',
  },
  sparclite: {
    host: 'sparclite',
    note: 'The sparclite processor.',
  },
  sparclite_86_x: {
    host: 'sparclite86x',
    note: 'The sparclite86x processor.',
  },
  supersparc: {
    host: 'supersparc',
    note: 'The supersparc processor.',
  },
  tsc_701: {
    host: 'tsc701',
    note: 'The tsc701 processor.',
  },
  ultrasparc: {
    host: 'ultrasparc',
    note: 'The ultrasparc processor.',
  },
  ultrasparc_3: {
    host: 'ultrasparc3',
    note: 'The ultrasparc3 processor.',
  },
  ut_699: {
    host: 'ut699',
    note: 'The ut699 processor.',
  },
  v_7: {
    host: 'v7',
    note: 'The v7 processor.',
  },
  v_8: {
    host: 'v8',
    note: 'The v8 processor.',
  },
  v_9: {
    host: 'v9',
    note: 'The v9 processor.',
  },
  arch_10: {
    host: 'arch10',
    note: 'The arch10 processor.',
  },
  arch_11: {
    host: 'arch11',
    note: 'The arch11 processor.',
  },
  arch_12: {
    host: 'arch12',
    note: 'The arch12 processor.',
  },
  arch_13: {
    host: 'arch13',
    note: 'The arch13 processor.',
  },
  arch_8: {
    host: 'arch8',
    note: 'The arch8 processor.',
  },
  arch_9: {
    host: 'arch9',
    note: 'The arch9 processor.',
  },
  z_10: {
    host: 'z10',
    note: 'The z10 processor.',
  },
  z_13: {
    host: 'z13',
    note: 'The z13 processor.',
  },
  z_14: {
    host: 'z14',
    note: 'The z14 processor.',
  },
  z_15: {
    host: 'z15',
    note: 'The z15 processor.',
  },
  z_196: {
    host: 'z196',
    note: 'The z196 processor.',
  },
  z_ec_12: {
    host: 'zEC12',
    note: 'The zEC12 processor.',
  },
  bleeding_edge: {
    host: 'bleeding-edge',
    note: 'The bleeding-edge processor.',
  },
  mvp: {
    host: 'mvp',
    note: 'The mvp processor.',
  },
  amdfam_10: {
    host: 'amdfam10',
    note: 'The amdfam10 processor.',
  },
  athlon: {
    host: 'athlon',
    note: 'The athlon processor.',
  },
  athlon_4: {
    host: 'athlon-4',
    note: 'The athlon-4 processor.',
  },
  athlon_fx: {
    host: 'athlon-fx',
    note: 'The athlon-fx processor.',
  },
  athlon_mp: {
    host: 'athlon-mp',
    note: 'The athlon-mp processor.',
  },
  athlon_tbird: {
    host: 'athlon-tbird',
    note: 'The athlon-tbird processor.',
  },
  athlon_xp: {
    host: 'athlon-xp',
    note: 'The athlon-xp processor.',
  },
  athlon_64: {
    host: 'athlon64',
    note: 'The athlon64 processor.',
  },
  athlon_64_sse_3: {
    host: 'athlon64-sse3',
    note: 'The athlon64-sse3 processor.',
  },
  atom: {
    host: 'atom',
    note: 'The atom processor.',
  },
  barcelona: {
    host: 'barcelona',
    note: 'The barcelona processor.',
  },
  bdver_1: {
    host: 'bdver1',
    note: 'The bdver1 processor.',
  },
  bdver_2: {
    host: 'bdver2',
    note: 'The bdver2 processor.',
  },
  bdver_3: {
    host: 'bdver3',
    note: 'The bdver3 processor.',
  },
  bdver_4: {
    host: 'bdver4',
    note: 'The bdver4 processor.',
  },
  bonnell: {
    host: 'bonnell',
    note: 'The bonnell processor.',
  },
  broadwell: {
    host: 'broadwell',
    note: 'The broadwell processor.',
  },
  btver_1: {
    host: 'btver1',
    note: 'The btver1 processor.',
  },
  btver_2: {
    host: 'btver2',
    note: 'The btver2 processor.',
  },
  c_3: {
    host: 'c3',
    note: 'The c3 processor.',
  },
  c_3_2: {
    host: 'c3-2',
    note: 'The c3-2 processor.',
  },
  cannonlake: {
    host: 'cannonlake',
    note: 'The cannonlake processor.',
  },
  cascadelake: {
    host: 'cascadelake',
    note: 'The cascadelake processor.',
  },
  cooperlake: {
    host: 'cooperlake',
    note: 'The cooperlake processor.',
  },
  core_avx_i: {
    host: 'core-avx-i',
    note: 'The core-avx-i processor.',
  },
  core_avx_2: {
    host: 'core-avx2',
    note: 'The core-avx2 processor.',
  },
  core_2: {
    host: 'core2',
    note: 'The core2 processor.',
  },
  corei_7: {
    host: 'corei7',
    note: 'The corei7 processor.',
  },
  corei_7_avx: {
    host: 'corei7-avx',
    note: 'The corei7-avx processor.',
  },
  geode: {
    host: 'geode',
    note: 'The geode processor.',
  },
  goldmont: {
    host: 'goldmont',
    note: 'The goldmont processor.',
  },
  goldmont_plus: {
    host: 'goldmont-plus',
    note: 'The goldmont-plus processor.',
  },
  haswell: {
    host: 'haswell',
    note: 'The haswell processor.',
  },
  i_386: {
    host: 'i386',
    note: 'The i386 processor.',
  },
  i_486: {
    host: 'i486',
    note: 'The i486 processor.',
  },
  i_586: {
    host: 'i586',
    note: 'The i586 processor.',
  },
  i_686: {
    host: 'i686',
    note: 'The i686 processor.',
  },
  icelake_client: {
    host: 'icelake-client',
    note: 'The icelake-client processor.',
  },
  icelake_server: {
    host: 'icelake-server',
    note: 'The icelake-server processor.',
  },
  ivybridge: {
    host: 'ivybridge',
    note: 'The ivybridge processor.',
  },
  k_6: {
    host: 'k6',
    note: 'The k6 processor.',
  },
  k_6_2: {
    host: 'k6-2',
    note: 'The k6-2 processor.',
  },
  k_6_3: {
    host: 'k6-3',
    note: 'The k6-3 processor.',
  },
  k_8: {
    host: 'k8',
    note: 'The k8 processor.',
  },
  k_8_sse_3: {
    host: 'k8-sse3',
    note: 'The k8-sse3 processor.',
  },
  knl: {
    host: 'knl',
    note: 'The knl processor.',
  },
  knm: {
    host: 'knm',
    note: 'The knm processor.',
  },
  lakemont: {
    host: 'lakemont',
    note: 'The lakemont processor.',
  },
  nehalem: {
    host: 'nehalem',
    note: 'The nehalem processor.',
  },
  nocona: {
    host: 'nocona',
    note: 'The nocona processor.',
  },
  opteron: {
    host: 'opteron',
    note: 'The opteron processor.',
  },
  opteron_sse_3: {
    host: 'opteron-sse3',
    note: 'The opteron-sse3 processor.',
  },
  penryn: {
    host: 'penryn',
    note: 'The penryn processor.',
  },
  pentium: {
    host: 'pentium',
    note: 'The pentium processor.',
  },
  pentium_m: {
    host: 'pentium-m',
    note: 'The pentium-m processor.',
  },
  pentium_mmx: {
    host: 'pentium-mmx',
    note: 'The pentium-mmx processor.',
  },
  pentium_2: {
    host: 'pentium2',
    note: 'The pentium2 processor.',
  },
  pentium_3: {
    host: 'pentium3',
    note: 'The pentium3 processor.',
  },
  pentium_3_m: {
    host: 'pentium3m',
    note: 'The pentium3m processor.',
  },
  pentium_4: {
    host: 'pentium4',
    note: 'The pentium4 processor.',
  },
  pentium_4_m: {
    host: 'pentium4m',
    note: 'The pentium4m processor.',
  },
  pentiumpro: {
    host: 'pentiumpro',
    note: 'The pentiumpro processor.',
  },
  prescott: {
    host: 'prescott',
    note: 'The prescott processor.',
  },
  sandybridge: {
    host: 'sandybridge',
    note: 'The sandybridge processor.',
  },
  silvermont: {
    host: 'silvermont',
    note: 'The silvermont processor.',
  },
  skx: {
    host: 'skx',
    note: 'The skx processor.',
  },
  skylake: {
    host: 'skylake',
    note: 'The skylake processor.',
  },
  skylake_avx_512: {
    host: 'skylake-avx512',
    note: 'The skylake-avx512 processor.',
  },
  slm: {
    host: 'slm',
    note: 'The slm processor.',
  },
  tigerlake: {
    host: 'tigerlake',
    note: 'The tigerlake processor.',
  },
  tremont: {
    host: 'tremont',
    note: 'The tremont processor.',
  },
  westmere: {
    host: 'westmere',
    note: 'The westmere processor.',
  },
  winchip_c_6: {
    host: 'winchip-c6',
    note: 'The winchip-c6 processor.',
  },
  winchip_2: {
    host: 'winchip2',
    note: 'The winchip2 processor.',
  },
  x_86_64: {
    host: 'x86-64',
    note: 'The x86-64 processor.',
  },
  yonah: {
    host: 'yonah',
    note: 'The yonah processor.',
  },
  znver_1: {
    host: 'znver1',
    note: 'The znver1 processor.',
  },
  znver_2: {
    host: 'znver2',
    note: 'The znver2 processor.',
  },
}

export const LLVM_FEATURE_CONTENT: LlvmFeatureContent = {
  a_35: {
    host: 'a35',
    note: 'Cortex-A35 ARM processors.',
  },
  a_53: {
    host: 'a53',
    note: 'Cortex-A53 ARM processors.',
  },
  a_55: {
    host: 'a55',
    note: 'Cortex-A55 ARM processors.',
  },
  a_57: {
    host: 'a57',
    note: 'Cortex-A57 ARM processors.',
  },
  a_64_fx: {
    host: 'a64fx',
    note: 'Fujitsu A64FX processors.',
  },
  a_65: {
    host: 'a65',
    note: 'Cortex-A65 ARM processors.',
  },
  a_72: {
    host: 'a72',
    note: 'Cortex-A72 ARM processors.',
  },
  a_73: {
    host: 'a73',
    note: 'Cortex-A73 ARM processors.',
  },
  a_75: {
    host: 'a75',
    note: 'Cortex-A75 ARM processors.',
  },
  a_76: {
    host: 'a76',
    note: 'Cortex-A76 ARM processors.',
  },
  a_77: {
    host: 'a77',
    note: 'Cortex-A77 ARM processors.',
  },
  aes: {
    host: 'aes',
    note: 'Enable AES instructions.',
  },
  aggressive_fma: {
    host: 'aggressive-fma',
    note: 'Enable Aggressive FMA for floating-point..',
  },
  alternate_sextload_cvt_f_32_pattern: {
    host: 'alternate-sextload-cvt-f32-pattern',
    note: 'Use alternative pattern for sextload convert to f32.',
  },
  altnzcv: {
    host: 'altnzcv',
    note: 'Enable alternative NZCV format for floating point comparisons.',
  },
  am: {
    host: 'am',
    note: 'Enable v8.4-A Activity Monitors extension.',
  },
  amvs: {
    host: 'amvs',
    note: 'Enable v8.6-A Activity Monitors Virtualization support.',
  },
  apple_a_10: {
    host: 'apple-a10',
    note: 'Apple A10.',
  },
  apple_a_11: {
    host: 'apple-a11',
    note: 'Apple A11.',
  },
  apple_a_12: {
    host: 'apple-a12',
    note: 'Apple A12.',
  },
  apple_a_13: {
    host: 'apple-a13',
    note: 'Apple A13.',
  },
  apple_a_7: {
    host: 'apple-a7',
    note: 'Apple A7 (the CPU formerly known as Cyclone).',
  },
  arith_bcc_fusion: {
    host: 'arith-bcc-fusion',
    note: 'CPU fuses arithmetic+bcc operations.',
  },
  arith_cbz_fusion: {
    host: 'arith-cbz-fusion',
    note: 'CPU fuses arithmetic + cbz/cbnz operations.',
  },
  balance_fp_ops: {
    host: 'balance-fp-ops',
    note: 'balance mix of odd and even D-registers for fp multiply(-accumulate) ops.',
  },
  bf_16: {
    host: 'bf16',
    note: 'Enable support for BFloat16 instructions.',
  },
  bti: {
    host: 'bti',
    note: 'Enable Branch Target Identification.',
  },
  call_saved_x_10: {
    host: 'call-saved-x10',
    note: 'Make X10 callee saved..',
  },
  call_saved_x_11: {
    host: 'call-saved-x11',
    note: 'Make X11 callee saved..',
  },
  call_saved_x_12: {
    host: 'call-saved-x12',
    note: 'Make X12 callee saved..',
  },
  call_saved_x_13: {
    host: 'call-saved-x13',
    note: 'Make X13 callee saved..',
  },
  call_saved_x_14: {
    host: 'call-saved-x14',
    note: 'Make X14 callee saved..',
  },
  call_saved_x_15: {
    host: 'call-saved-x15',
    note: 'Make X15 callee saved..',
  },
  call_saved_x_18: {
    host: 'call-saved-x18',
    note: 'Make X18 callee saved..',
  },
  call_saved_x_8: {
    host: 'call-saved-x8',
    note: 'Make X8 callee saved..',
  },
  call_saved_x_9: {
    host: 'call-saved-x9',
    note: 'Make X9 callee saved..',
  },
  carmel: {
    host: 'carmel',
    note: 'Nvidia Carmel processors.',
  },
  ccdp: {
    host: 'ccdp',
    note: 'Enable v8.5 Cache Clean to Point of Deep Persistence.',
  },
  ccidx: {
    host: 'ccidx',
    note: 'Enable v8.3-A Extend of the CCSIDR number of sets.',
  },
  ccpp: {
    host: 'ccpp',
    note: 'Enable v8.2 data Cache Clean to Point of Persistence.',
  },
  complxnum: {
    host: 'complxnum',
    note: 'Enable v8.3-A Floating-point complex number support.',
  },
  cortex_a_78: {
    host: 'cortex-a78',
    note: 'Cortex-A78 ARM processors.',
  },
  cortex_x_1: {
    host: 'cortex-x1',
    note: 'Cortex-X1 ARM processors.',
  },
  crc: {
    host: 'crc',
    note: 'Enable support for CRC instructions.',
  },
  crypto: {
    host: 'crypto',
    note: 'Enable support for Cryptography extensions.',
  },
  custom_cheap_as_move: {
    host: 'custom-cheap-as-move',
    note: 'Use custom handling of cheap instructions.',
  },
  disable_latency_sched_heuristic: {
    host: 'disable-latency-sched-heuristic',
    note: 'Disable latency scheduling heuristic.',
  },
  dit: {
    host: 'dit',
    note: 'Enable v8.4-A Data Independent Timing instructions.',
  },
  dotprod: {
    host: 'dotprod',
    note: 'Enable support for dot product instructions.',
  },
  ecv: {
    host: 'ecv',
    note: 'Enable enhanced counter virtualization extension.',
  },
  ete: {
    host: 'ete',
    note: 'Enable Embedded Trace Extension.',
  },
  exynos_cheap_as_move: {
    host: 'exynos-cheap-as-move',
    note: 'Use Exynos specific handling of cheap instructions.',
  },
  exynosm_3: {
    host: 'exynosm3',
    note: 'Samsung Exynos-M3 processors.',
  },
  exynosm_4: {
    host: 'exynosm4',
    note: 'Samsung Exynos-M4 processors.',
  },
  f_32_mm: {
    host: 'f32mm',
    note: 'Enable Matrix Multiply FP32 Extension.',
  },
  f_64_mm: {
    host: 'f64mm',
    note: 'Enable Matrix Multiply FP64 Extension.',
  },
  falkor: {
    host: 'falkor',
    note: 'Qualcomm Falkor processors.',
  },
  fgt: {
    host: 'fgt',
    note: 'Enable fine grained virtualization traps extension.',
  },
  fmi: {
    host: 'fmi',
    note: 'Enable v8.4-A Flag Manipulation Instructions.',
  },
  force_32_bit_jump_tables: {
    host: 'force-32bit-jump-tables',
    note: 'Force jump table entries to be 32-bits wide except at MinSize.',
  },
  fp_armv_8: {
    host: 'fp-armv8',
    note: 'Enable ARMv8 FP.',
  },
  fp_16_fml: {
    host: 'fp16fml',
    note: 'Enable full half-precision floating point fml instructions.',
  },
  fptoint: {
    host: 'fptoint',
    note: 'Enable FRInt[32|64][Z|X] instructions that round a floating-point number to an integer (in FP format) forcing it to fit into a 32- or 64-bit int.',
  },
  fullfp_16: {
    host: 'fullfp16',
    note: 'Enable full half-precision floating point.',
  },
  fuse_address: {
    host: 'fuse-address',
    note: 'CPU fuses address generation and memory operations.',
  },
  fuse_aes: {
    host: 'fuse-aes',
    note: 'CPU fuses AES crypto operations.',
  },
  fuse_arith_logic: {
    host: 'fuse-arith-logic',
    note: 'CPU fuses arithmetic and logic operations.',
  },
  fuse_crypto_eor: {
    host: 'fuse-crypto-eor',
    note: 'CPU fuses AES/PMULL and EOR operations.',
  },
  fuse_csel: {
    host: 'fuse-csel',
    note: 'CPU fuses conditional select operations.',
  },
  fuse_literals: {
    host: 'fuse-literals',
    note: 'CPU fuses literal generation operations.',
  },
  harden_sls_blr: {
    host: 'harden-sls-blr',
    note: 'Harden against straight line speculation across BLR instructions.',
  },
  harden_sls_retbr: {
    host: 'harden-sls-retbr',
    note: 'Harden against straight line speculation across RET and BR instructions.',
  },
  i_8_mm: {
    host: 'i8mm',
    note: 'Enable Matrix Multiply Int8 Extension.',
  },
  jsconv: {
    host: 'jsconv',
    note: 'Enable v8.3-A JavaScript FP conversion instructions.',
  },
  kryo: {
    host: 'kryo',
    note: 'Qualcomm Kryo processors.',
  },
  lor: {
    host: 'lor',
    note: 'Enables ARM v8.1 Limited Ordering Regions extension.',
  },
  lse: {
    host: 'lse',
    note: 'Enable ARMv8.1 Large System Extension (LSE) atomic instructions.',
  },
  lsl_fast: {
    host: 'lsl-fast',
    note: 'CPU has a fastpath logical shift of up to 3 places.',
  },
  mpam: {
    host: 'mpam',
    note: 'Enable v8.4-A Memory system Partitioning and Monitoring extension.',
  },
  mte: {
    host: 'mte',
    note: 'Enable Memory Tagging Extension.',
  },
  neon: {
    host: 'neon',
    note: 'Enable NEON instructions.',
  },
  neoversee_1: {
    host: 'neoversee1',
    note: 'Neoverse E1 ARM processors.',
  },
  neoversen_1: {
    host: 'neoversen1',
    note: 'Neoverse N1 ARM processors.',
  },
  no_neg_immediates: {
    host: 'no-neg-immediates',
    note: 'Convert immediates and instructions to their negated or complemented equivalent when the immediate does not fit in the encoding..',
  },
  nv: {
    host: 'nv',
    note: 'Enable v8.4-A Nested Virtualization Enchancement.',
  },
  pa: {
    host: 'pa',
    note: 'Enable v8.3-A Pointer Authentication extension.',
  },
  pan: {
    host: 'pan',
    note: 'Enables ARM v8.1 Privileged Access-Never extension.',
  },
  pan_rwv: {
    host: 'pan-rwv',
    note: 'Enable v8.2 PAN s1e1R and s1e1W Variants.',
  },
  perfmon: {
    host: 'perfmon',
    note: 'Enable support for Performance Monitor extensions.',
  },
  pmu: {
    host: 'pmu',
    note: 'Enable v8.4-A PMU extension.',
  },
  predictable_select_expensive: {
    host: 'predictable-select-expensive',
    note: 'Prefer likely predicted branches over selects.',
  },
  predres: {
    host: 'predres',
    note: 'Enable v8.5a execution and data prediction invalidation instructions.',
  },
  rand: {
    host: 'rand',
    note: 'Enable Random Number generation instructions.',
  },
  ras: {
    host: 'ras',
    note: 'Enable Reliability, Availability and Serviceability extensions.',
  },
  rasv_8_4: {
    host: 'rasv8_4',
    note: 'Enable v8.4-A Reliability, Availability and Serviceability extension.',
  },
  rcpc: {
    host: 'rcpc',
    note: 'Enable support for RCPC extension.',
  },
  rcpc_immo: {
    host: 'rcpc-immo',
    note: 'Enable v8.4-A RCPC instructions with Immediate Offsets.',
  },
  rdm: {
    host: 'rdm',
    note: 'Enable ARMv8.1 Rounding Double Multiply Add/Subtract instructions.',
  },
  reserve_x_1: {
    host: 'reserve-x1',
    note: 'Reserve X1.',
  },
  reserve_x_10: {
    host: 'reserve-x10',
    note: 'Reserve X10.',
  },
  reserve_x_11: {
    host: 'reserve-x11',
    note: 'Reserve X11.',
  },
  reserve_x_12: {
    host: 'reserve-x12',
    note: 'Reserve X12.',
  },
  reserve_x_13: {
    host: 'reserve-x13',
    note: 'Reserve X13.',
  },
  reserve_x_14: {
    host: 'reserve-x14',
    note: 'Reserve X14.',
  },
  reserve_x_15: {
    host: 'reserve-x15',
    note: 'Reserve X15.',
  },
  reserve_x_18: {
    host: 'reserve-x18',
    note: 'Reserve X18.',
  },
  reserve_x_2: {
    host: 'reserve-x2',
    note: 'Reserve X2.',
  },
  reserve_x_20: {
    host: 'reserve-x20',
    note: 'Reserve X20.',
  },
  reserve_x_21: {
    host: 'reserve-x21',
    note: 'Reserve X21.',
  },
  reserve_x_22: {
    host: 'reserve-x22',
    note: 'Reserve X22.',
  },
  reserve_x_23: {
    host: 'reserve-x23',
    note: 'Reserve X23.',
  },
  reserve_x_24: {
    host: 'reserve-x24',
    note: 'Reserve X24.',
  },
  reserve_x_25: {
    host: 'reserve-x25',
    note: 'Reserve X25.',
  },
  reserve_x_26: {
    host: 'reserve-x26',
    note: 'Reserve X26.',
  },
  reserve_x_27: {
    host: 'reserve-x27',
    note: 'Reserve X27.',
  },
  reserve_x_28: {
    host: 'reserve-x28',
    note: 'Reserve X28.',
  },
  reserve_x_3: {
    host: 'reserve-x3',
    note: 'Reserve X3.',
  },
  reserve_x_30: {
    host: 'reserve-x30',
    note: 'Reserve X30.',
  },
  reserve_x_4: {
    host: 'reserve-x4',
    note: 'Reserve X4.',
  },
  reserve_x_5: {
    host: 'reserve-x5',
    note: 'Reserve X5.',
  },
  reserve_x_6: {
    host: 'reserve-x6',
    note: 'Reserve X6.',
  },
  reserve_x_7: {
    host: 'reserve-x7',
    note: 'Reserve X7.',
  },
  reserve_x_9: {
    host: 'reserve-x9',
    note: 'Reserve X9.',
  },
  saphira: {
    host: 'saphira',
    note: 'Qualcomm Saphira processors.',
  },
  sb: {
    host: 'sb',
    note: 'Enable v8.5a Speculation Barrier.',
  },
  sel_2: {
    host: 'sel2',
    note: 'Enable v8.4-A Secure Exception Level 2 extension.',
  },
  sha_2: {
    host: 'sha2',
    note: 'Enable SHA1 and SHA256 support.',
  },
  sha_3: {
    host: 'sha3',
    note: 'Enable SHA512 and SHA3 support.',
  },
  slow_misaligned_128_store: {
    host: 'slow-misaligned-128store',
    note: 'Misaligned 128 bit stores are slow.',
  },
  slow_paired_128: {
    host: 'slow-paired-128',
    note: 'Paired 128 bit loads and stores are slow.',
  },
  slow_strqro_store: {
    host: 'slow-strqro-store',
    note: 'STR of Q register with register offset is slow.',
  },
  sm_4: {
    host: 'sm4',
    note: 'Enable SM3 and SM4 support.',
  },
  spe: {
    host: 'spe',
    note: 'Enable SPE instructions.',
  },
  specrestrict: {
    host: 'specrestrict',
    note: 'Enable architectural speculation restriction.',
  },
  ssbs: {
    host: 'ssbs',
    note: 'Enable Speculative Store Bypass Safe bit.',
  },
  strict_align: {
    host: 'strict-align',
    note: 'Disallow all unaligned memory access.',
  },
  sve: {
    host: 'sve',
    note: 'Enable Scalable Vector Extension (SVE) instructions.',
  },
  sve_2: {
    host: 'sve2',
    note: 'Enable Scalable Vector Extension 2 (SVE2) instructions.',
  },
  sve_2_aes: {
    host: 'sve2-aes',
    note: 'Enable AES SVE2 instructions.',
  },
  sve_2_bitperm: {
    host: 'sve2-bitperm',
    note: 'Enable bit permutation SVE2 instructions.',
  },
  sve_2_sha_3: {
    host: 'sve2-sha3',
    note: 'Enable SHA3 SVE2 instructions.',
  },
  sve_2_sm_4: {
    host: 'sve2-sm4',
    note: 'Enable SM4 SVE2 instructions.',
  },
  tagged_globals: {
    host: 'tagged-globals',
    note: 'Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits.',
  },
  thunderx: {
    host: 'thunderx',
    note: 'Cavium ThunderX processors.',
  },
  thunderx_2_t_99: {
    host: 'thunderx2t99',
    note: 'Cavium ThunderX2 processors.',
  },
  thunderx_3_t_110: {
    host: 'thunderx3t110',
    note: 'Marvell ThunderX3 processors.',
  },
  thunderxt_81: {
    host: 'thunderxt81',
    note: 'Cavium ThunderX processors.',
  },
  thunderxt_83: {
    host: 'thunderxt83',
    note: 'Cavium ThunderX processors.',
  },
  thunderxt_88: {
    host: 'thunderxt88',
    note: 'Cavium ThunderX processors.',
  },
  tlb_rmi: {
    host: 'tlb-rmi',
    note: 'Enable v8.4-A TLB Range and Maintenance Instructions.',
  },
  tme: {
    host: 'tme',
    note: 'Enable Transactional Memory Extension.',
  },
  tpidr_el_1: {
    host: 'tpidr-el1',
    note: 'Permit use of TPIDR_EL1 for the TLS base.',
  },
  tpidr_el_2: {
    host: 'tpidr-el2',
    note: 'Permit use of TPIDR_EL2 for the TLS base.',
  },
  tpidr_el_3: {
    host: 'tpidr-el3',
    note: 'Permit use of TPIDR_EL3 for the TLS base.',
  },
  tracev_8_4: {
    host: 'tracev8.4',
    note: 'Enable v8.4-A Trace extension.',
  },
  trbe: {
    host: 'trbe',
    note: 'Enable Trace Buffer Extension.',
  },
  tsv_110: {
    host: 'tsv110',
    note: 'HiSilicon TS-V110 processors.',
  },
  uaops: {
    host: 'uaops',
    note: 'Enable v8.2 UAO PState.',
  },
  use_aa: {
    host: 'use-aa',
    note: 'Use alias analysis during codegen.',
  },
  use_experimental_zeroing_pseudos: {
    host: 'use-experimental-zeroing-pseudos',
    note: 'Hint to the compiler that the MOVPRFX instruction is merged with destructive operations.',
  },
  use_postra_scheduler: {
    host: 'use-postra-scheduler',
    note: 'Schedule again after register allocation.',
  },
  use_reciprocal_square_root: {
    host: 'use-reciprocal-square-root',
    note: 'Use the reciprocal square root approximation.',
  },
  v_8_1_a: {
    host: 'v8.1a',
    note: 'Support ARM v8.1a instructions.',
  },
  v_8_2_a: {
    host: 'v8.2a',
    note: 'Support ARM v8.2a instructions.',
  },
  v_8_3_a: {
    host: 'v8.3a',
    note: 'Support ARM v8.3a instructions.',
  },
  v_8_4_a: {
    host: 'v8.4a',
    note: 'Support ARM v8.4a instructions.',
  },
  v_8_5_a: {
    host: 'v8.5a',
    note: 'Support ARM v8.5a instructions.',
  },
  v_8_6_a: {
    host: 'v8.6a',
    note: 'Support ARM v8.6a instructions.',
  },
  vh: {
    host: 'vh',
    note: 'Enables ARM v8.1 Virtual Host extension.',
  },
  zcm: {
    host: 'zcm',
    note: 'Has zero-cycle register moves.',
  },
  zcz: {
    host: 'zcz',
    note: 'Has zero-cycle zeroing instructions.',
  },
  zcz_fp: {
    host: 'zcz-fp',
    note: 'Has zero-cycle zeroing instructions for FP registers.',
  },
  zcz_fp_workaround: {
    host: 'zcz-fp-workaround',
    note: 'The zero-cycle floating-point zeroing instruction has a bug.',
  },
  zcz_gp: {
    host: 'zcz-gp',
    note: 'Has zero-cycle zeroing instructions for generic registers.',
  },
  '16_bit_insts': {
    host: '16-bit-insts',
    note: 'Has i16/f16 instructions.',
  },
  dump_code: {
    host: 'DumpCode',
    note: 'Dump MachineInstrs in the CodeEmitter.',
  },
  a_16: {
    host: 'a16',
    note: 'Support gfx10-style A16 for 16-bit coordinates/gradients/lod/clamp/mip image operands.',
  },
  add_no_carry_insts: {
    host: 'add-no-carry-insts',
    note: 'Have VALU add/sub instructions without carry out.',
  },
  aperture_regs: {
    host: 'aperture-regs',
    note: 'Has Memory Aperture Base and Size Registers.',
  },
  atomic_fadd_insts: {
    host: 'atomic-fadd-insts',
    note: 'Has buffer_atomic_add_f32, buffer_atomic_pk_add_f16, global_atomic_add_f32, global_atomic_pk_add_f16 instructions.',
  },
  auto_waitcnt_before_barrier: {
    host: 'auto-waitcnt-before-barrier',
    note: 'Hardware automatically inserts waitcnt before barrier.',
  },
  ci_insts: {
    host: 'ci-insts',
    note: 'Additional instructions for CI+.',
  },
  code_object_v_3: {
    host: 'code-object-v3',
    note: 'Generate code object version 3.',
  },
  cumode: {
    host: 'cumode',
    note: 'Enable CU wavefront execution mode.',
  },
  dl_insts: {
    host: 'dl-insts',
    note: 'Has v_fmac_f32 and v_xnor_b32 instructions.',
  },
  dot_1_insts: {
    host: 'dot1-insts',
    note: 'Has v_dot4_i32_i8 and v_dot8_i32_i4 instructions.',
  },
  dot_2_insts: {
    host: 'dot2-insts',
    note: 'Has v_dot2_f32_f16, v_dot2_i32_i16, v_dot2_u32_u16, v_dot4_u32_u8, v_dot8_u32_u4 instructions.',
  },
  dot_3_insts: {
    host: 'dot3-insts',
    note: 'Has v_dot8c_i32_i4 instruction.',
  },
  dot_4_insts: {
    host: 'dot4-insts',
    note: 'Has v_dot2c_i32_i16 instruction.',
  },
  dot_5_insts: {
    host: 'dot5-insts',
    note: 'Has v_dot2c_f32_f16 instruction.',
  },
  dot_6_insts: {
    host: 'dot6-insts',
    note: 'Has v_dot4c_i32_i8 instruction.',
  },
  dpp: {
    host: 'dpp',
    note: 'Support DPP (Data Parallel Primitives) extension.',
  },
  dpp_8: {
    host: 'dpp8',
    note: 'Support DPP8 (Data Parallel Primitives) extension.',
  },
  ds_src_2_insts: {
    host: 'ds-src2-insts',
    note: 'Has ds_*_src2 instructions.',
  },
  dumpcode: {
    host: 'dumpcode',
    note: 'Dump MachineInstrs in the CodeEmitter.',
  },
  enable_ds_128: {
    host: 'enable-ds128',
    note: 'Use ds_{read|write}_b128.',
  },
  enable_prt_strict_null: {
    host: 'enable-prt-strict-null',
    note: 'Enable zeroing of result registers for sparse texture fetches.',
  },
  fast_denormal_f_32: {
    host: 'fast-denormal-f32',
    note: 'Enabling denormals does not cause f32 instructions to run at f64 rates.',
  },
  fast_fmaf: {
    host: 'fast-fmaf',
    note: 'Assuming f32 fma is at least as fast as mul + add.',
  },
  flat_address_space: {
    host: 'flat-address-space',
    note: 'Support flat address space.',
  },
  flat_for_global: {
    host: 'flat-for-global',
    note: 'Force to generate flat instruction for global.',
  },
  flat_global_insts: {
    host: 'flat-global-insts',
    note: 'Have global_* flat memory instructions.',
  },
  flat_inst_offsets: {
    host: 'flat-inst-offsets',
    note: 'Flat instructions have immediate offset addressing mode.',
  },
  flat_scratch_insts: {
    host: 'flat-scratch-insts',
    note: 'Have scratch_* flat memory instructions.',
  },
  flat_segment_offset_bug: {
    host: 'flat-segment-offset-bug',
    note: 'GFX10 bug, inst_offset ignored in flat segment.',
  },
  fma_mix_insts: {
    host: 'fma-mix-insts',
    note: 'Has v_fma_mix_f32, v_fma_mixlo_f16, v_fma_mixhi_f16 instructions.',
  },
  fmaf: {
    host: 'fmaf',
    note: 'Enable single precision FMA (not as fast as mul+add, but fused).',
  },
  fp_64: {
    host: 'fp64',
    note: 'Floating point unit supports double precision.',
  },
  g_16: {
    host: 'g16',
    note: 'Support G16 for 16-bit gradient image operands.',
  },
  gcn_3_encoding: {
    host: 'gcn3-encoding',
    note: 'Encoding format for VI.',
  },
  get_wave_id_inst: {
    host: 'get-wave-id-inst',
    note: 'Has s_get_waveid_in_workgroup instruction.',
  },
  gfx_10: {
    host: 'gfx10',
    note: 'GFX10 GPU generation.',
  },
  gfx_10_3_insts: {
    host: 'gfx10-3-insts',
    note: 'Additional instructions for GFX10.3.',
  },
  gfx_10_insts: {
    host: 'gfx10-insts',
    note: 'Additional instructions for GFX10+.',
  },
  gfx_10_b_encoding: {
    host: 'gfx10_b-encoding',
    note: 'Encoding format GFX10_B.',
  },
  gfx_7_gfx_8_gfx_9_insts: {
    host: 'gfx7-gfx8-gfx9-insts',
    note: 'Instructions shared in GFX7, GFX8, GFX9.',
  },
  gfx_8_insts: {
    host: 'gfx8-insts',
    note: 'Additional instructions for GFX8+.',
  },
  gfx_9: {
    host: 'gfx9',
    note: 'GFX9 GPU generation.',
  },
  gfx_9_insts: {
    host: 'gfx9-insts',
    note: 'Additional instructions for GFX9+.',
  },
  half_rate_64_ops: {
    host: 'half-rate-64-ops',
    note: 'Most fp64 instructions are half rate instead of quarter.',
  },
  inst_fwd_prefetch_bug: {
    host: 'inst-fwd-prefetch-bug',
    note: 'S_INST_PREFETCH instruction causes shader to hang.',
  },
  int_clamp_insts: {
    host: 'int-clamp-insts',
    note: 'Support clamp for integer destination.',
  },
  inv_2_pi_inline_imm: {
    host: 'inv-2pi-inline-imm',
    note: 'Has 1 / (2 * pi) as inline immediate.',
  },
  lds_branch_vmem_war_hazard: {
    host: 'lds-branch-vmem-war-hazard',
    note: 'Switching between LDS and VMEM-tex not waiting VM_VSRC=0.',
  },
  lds_misaligned_bug: {
    host: 'lds-misaligned-bug',
    note: 'Some GFX10 bug with misaligned multi-dword LDS access in WGP mode.',
  },
  ldsbankcount_16: {
    host: 'ldsbankcount16',
    note: 'The number of LDS banks per compute unit..',
  },
  ldsbankcount_32: {
    host: 'ldsbankcount32',
    note: 'The number of LDS banks per compute unit..',
  },
  load_store_opt: {
    host: 'load-store-opt',
    note: 'Enable SI load/store optimizer pass.',
  },
  localmemorysize_0: {
    host: 'localmemorysize0',
    note: 'The size of local memory in bytes.',
  },
  localmemorysize_32768: {
    host: 'localmemorysize32768',
    note: 'The size of local memory in bytes.',
  },
  localmemorysize_65536: {
    host: 'localmemorysize65536',
    note: 'The size of local memory in bytes.',
  },
  mad_mac_f_32_insts: {
    host: 'mad-mac-f32-insts',
    note: 'Has v_mad_f32/v_mac_f32/v_madak_f32/v_madmk_f32 instructions.',
  },
  mad_mix_insts: {
    host: 'mad-mix-insts',
    note: 'Has v_mad_mix_f32, v_mad_mixlo_f16, v_mad_mixhi_f16 instructions.',
  },
  mai_insts: {
    host: 'mai-insts',
    note: 'Has mAI instructions.',
  },
  max_private_element_size_16: {
    host: 'max-private-element-size-16',
    note: 'Maximum private access size may be 16.',
  },
  max_private_element_size_4: {
    host: 'max-private-element-size-4',
    note: 'Maximum private access size may be 4.',
  },
  max_private_element_size_8: {
    host: 'max-private-element-size-8',
    note: 'Maximum private access size may be 8.',
  },
  mfma_inline_literal_bug: {
    host: 'mfma-inline-literal-bug',
    note: 'MFMA cannot use inline literal as SrcC.',
  },
  mimg_r_128: {
    host: 'mimg-r128',
    note: 'Support 128-bit texture resources.',
  },
  movrel: {
    host: 'movrel',
    note: 'Has v_movrel*_b32 instructions.',
  },
  no_data_dep_hazard: {
    host: 'no-data-dep-hazard',
    note: 'Does not need SW waitstates.',
  },
  no_sdst_cmpx: {
    host: 'no-sdst-cmpx',
    note: 'V_CMPX does not write VCC/SGPR in addition to EXEC.',
  },
  no_sram_ecc_support: {
    host: 'no-sram-ecc-support',
    note: 'Hardware does not support SRAM ECC.',
  },
  no_xnack_support: {
    host: 'no-xnack-support',
    note: 'Hardware does not support XNACK.',
  },
  nsa_encoding: {
    host: 'nsa-encoding',
    note: 'Support NSA encoding for image instructions.',
  },
  nsa_to_vmem_bug: {
    host: 'nsa-to-vmem-bug',
    note: 'MIMG-NSA followed by VMEM fail if EXEC_LO or EXEC_HI equals zero.',
  },
  offset_3_f_bug: {
    host: 'offset-3f-bug',
    note: 'Branch offset of 3f hardware bug.',
  },
  pk_fmac_f_16_inst: {
    host: 'pk-fmac-f16-inst',
    note: 'Has v_pk_fmac_f16 instruction.',
  },
  promote_alloca: {
    host: 'promote-alloca',
    note: 'Enable promote alloca pass.',
  },
  r_128_a_16: {
    host: 'r128-a16',
    note: 'Support gfx9-style A16 for 16-bit coordinates/gradients/lod/clamp/mip image operands, where a16 is aliased with r128.',
  },
  register_banking: {
    host: 'register-banking',
    note: 'Has register banking.',
  },
  s_memrealtime: {
    host: 's-memrealtime',
    note: 'Has s_memrealtime instruction.',
  },
  s_memtime_inst: {
    host: 's-memtime-inst',
    note: 'Has s_memtime instruction.',
  },
  scalar_atomics: {
    host: 'scalar-atomics',
    note: 'Has atomic scalar memory instructions.',
  },
  scalar_flat_scratch_insts: {
    host: 'scalar-flat-scratch-insts',
    note: 'Have s_scratch_* flat memory instructions.',
  },
  scalar_stores: {
    host: 'scalar-stores',
    note: 'Has store scalar memory instructions.',
  },
  sdwa: {
    host: 'sdwa',
    note: 'Support SDWA (Sub-DWORD Addressing) extension.',
  },
  sdwa_mav: {
    host: 'sdwa-mav',
    note: 'Support v_mac_f32/f16 with SDWA (Sub-DWORD Addressing) extension.',
  },
  sdwa_omod: {
    host: 'sdwa-omod',
    note: 'Support OMod with SDWA (Sub-DWORD Addressing) extension.',
  },
  sdwa_out_mods_vopc: {
    host: 'sdwa-out-mods-vopc',
    note: 'Support clamp for VOPC with SDWA (Sub-DWORD Addressing) extension.',
  },
  sdwa_scalar: {
    host: 'sdwa-scalar',
    note: 'Support scalar register with SDWA (Sub-DWORD Addressing) extension.',
  },
  sdwa_sdst: {
    host: 'sdwa-sdst',
    note: 'Support scalar dst for VOPC with SDWA (Sub-DWORD Addressing) extension.',
  },
  sea_islands: {
    host: 'sea-islands',
    note: 'SEA_ISLANDS GPU generation.',
  },
  sgpr_init_bug: {
    host: 'sgpr-init-bug',
    note: 'VI SGPR initialization bug requiring a fixed SGPR allocation size.',
  },
  si_scheduler: {
    host: 'si-scheduler',
    note: 'Enable SI Machine Scheduler.',
  },
  smem_to_vector_write_hazard: {
    host: 'smem-to-vector-write-hazard',
    note: 's_load_dword followed by v_cmp page faults.',
  },
  southern_islands: {
    host: 'southern-islands',
    note: 'SOUTHERN_ISLANDS GPU generation.',
  },
  sram_ecc: {
    host: 'sram-ecc',
    note: 'Enable SRAM ECC.',
  },
  trap_handler: {
    host: 'trap-handler',
    note: 'Trap handler support.',
  },
  trig_reduced_range: {
    host: 'trig-reduced-range',
    note: 'Requires use of fract on arguments to trig instructions.',
  },
  unaligned_buffer_access: {
    host: 'unaligned-buffer-access',
    note: 'Support unaligned global loads and stores.',
  },
  unaligned_scratch_access: {
    host: 'unaligned-scratch-access',
    note: 'Support unaligned scratch loads and stores.',
  },
  unpacked_d_16_vmem: {
    host: 'unpacked-d16-vmem',
    note: 'Has unpacked d16 vmem instructions.',
  },
  unsafe_ds_offset_folding: {
    host: 'unsafe-ds-offset-folding',
    note: 'Force using DS instruction immediate offsets on SI.',
  },
  vcmpx_exec_war_hazard: {
    host: 'vcmpx-exec-war-hazard',
    note: 'V_CMPX WAR hazard on EXEC (V_CMPX issue ONLY).',
  },
  vcmpx_permlane_hazard: {
    host: 'vcmpx-permlane-hazard',
    note: 'TODO: describe me.',
  },
  vgpr_index_mode: {
    host: 'vgpr-index-mode',
    note: 'Has VGPR mode register indexing.',
  },
  vmem_to_scalar_write_hazard: {
    host: 'vmem-to-scalar-write-hazard',
    note: 'VMEM instruction followed by scalar writing to EXEC mask, M0 or SGPR leads to incorrect execution..',
  },
  volcanic_islands: {
    host: 'volcanic-islands',
    note: 'VOLCANIC_ISLANDS GPU generation.',
  },
  vop_3_literal: {
    host: 'vop3-literal',
    note: 'Can use one literal in VOP3.',
  },
  vop_3_p: {
    host: 'vop3p',
    note: 'Has VOP3P packed instructions.',
  },
  vscnt: {
    host: 'vscnt',
    note: 'Has separate store vscnt counter.',
  },
  wavefrontsize_16: {
    host: 'wavefrontsize16',
    note: 'The number of threads per wavefront.',
  },
  wavefrontsize_32: {
    host: 'wavefrontsize32',
    note: 'The number of threads per wavefront.',
  },
  wavefrontsize_64: {
    host: 'wavefrontsize64',
    note: 'The number of threads per wavefront.',
  },
  xnack: {
    host: 'xnack',
    note: 'Enable XNACK support.',
  },
  '32_bit': {
    host: '32bit',
    note: 'Prefer 32-bit Thumb instrs.',
  },
  '8_msecext': {
    host: '8msecext',
    note: 'Enable support for ARMv8-M Security Extensions.',
  },
  a_12: {
    host: 'a12',
    note: 'Cortex-A12 ARM processors.',
  },
  a_15: {
    host: 'a15',
    note: 'Cortex-A15 ARM processors.',
  },
  a_17: {
    host: 'a17',
    note: 'Cortex-A17 ARM processors.',
  },
  a_32: {
    host: 'a32',
    note: 'Cortex-A32 ARM processors.',
  },
  a_5: {
    host: 'a5',
    note: 'Cortex-A5 ARM processors.',
  },
  a_7: {
    host: 'a7',
    note: 'Cortex-A7 ARM processors.',
  },
  a_8: {
    host: 'a8',
    note: 'Cortex-A8 ARM processors.',
  },
  a_9: {
    host: 'a9',
    note: 'Cortex-A9 ARM processors.',
  },
  aclass: {
    host: 'aclass',
    note: "Is application profile ('A' series).",
  },
  acquire_release: {
    host: 'acquire-release',
    note: 'Has v8 acquire/release (lda/ldaex  etc) instructions.',
  },
  armv_2: {
    host: 'armv2',
    note: 'ARMv2 architecture.',
  },
  armv_2_a: {
    host: 'armv2a',
    note: 'ARMv2a architecture.',
  },
  armv_3: {
    host: 'armv3',
    note: 'ARMv3 architecture.',
  },
  armv_3_m: {
    host: 'armv3m',
    note: 'ARMv3m architecture.',
  },
  armv_4: {
    host: 'armv4',
    note: 'ARMv4 architecture.',
  },
  armv_4_t: {
    host: 'armv4t',
    note: 'ARMv4t architecture.',
  },
  armv_5_t: {
    host: 'armv5t',
    note: 'ARMv5t architecture.',
  },
  armv_5_te: {
    host: 'armv5te',
    note: 'ARMv5te architecture.',
  },
  armv_5_tej: {
    host: 'armv5tej',
    note: 'ARMv5tej architecture.',
  },
  armv_6: {
    host: 'armv6',
    note: 'ARMv6 architecture.',
  },
  armv_6_m: {
    host: 'armv6-m',
    note: 'ARMv6m architecture.',
  },
  armv_6_j: {
    host: 'armv6j',
    note: 'ARMv7a architecture.',
  },
  armv_6_k: {
    host: 'armv6k',
    note: 'ARMv6k architecture.',
  },
  armv_6_kz: {
    host: 'armv6kz',
    note: 'ARMv6kz architecture.',
  },
  armv_6_s_m: {
    host: 'armv6s-m',
    note: 'ARMv6sm architecture.',
  },
  armv_6_t_2: {
    host: 'armv6t2',
    note: 'ARMv6t2 architecture.',
  },
  armv_7_a: {
    host: 'armv7-a',
    note: 'ARMv7a architecture.',
  },
  armv_7_m: {
    host: 'armv7-m',
    note: 'ARMv7m architecture.',
  },
  armv_7_r: {
    host: 'armv7-r',
    note: 'ARMv7r architecture.',
  },
  armv_7_e_m: {
    host: 'armv7e-m',
    note: 'ARMv7em architecture.',
  },
  armv_7_k: {
    host: 'armv7k',
    note: 'ARMv7a architecture.',
  },
  armv_7_s: {
    host: 'armv7s',
    note: 'ARMv7a architecture.',
  },
  armv_7_ve: {
    host: 'armv7ve',
    note: 'ARMv7ve architecture.',
  },
  armv_8_a: {
    host: 'armv8-a',
    note: 'ARMv8a architecture.',
  },
  armv_8_m_base: {
    host: 'armv8-m.base',
    note: 'ARMv8mBaseline architecture.',
  },
  armv_8_m_main: {
    host: 'armv8-m.main',
    note: 'ARMv8mMainline architecture.',
  },
  armv_8_r: {
    host: 'armv8-r',
    note: 'ARMv8r architecture.',
  },
  armv_8_1_a: {
    host: 'armv8.1-a',
    note: 'ARMv81a architecture.',
  },
  armv_8_1_m_main: {
    host: 'armv8.1-m.main',
    note: 'ARMv81mMainline architecture.',
  },
  armv_8_2_a: {
    host: 'armv8.2-a',
    note: 'ARMv82a architecture.',
  },
  armv_8_3_a: {
    host: 'armv8.3-a',
    note: 'ARMv83a architecture.',
  },
  armv_8_4_a: {
    host: 'armv8.4-a',
    note: 'ARMv84a architecture.',
  },
  armv_8_5_a: {
    host: 'armv8.5-a',
    note: 'ARMv85a architecture.',
  },
  armv_8_6_a: {
    host: 'armv8.6-a',
    note: 'ARMv86a architecture.',
  },
  avoid_movs_shop: {
    host: 'avoid-movs-shop',
    note: 'Avoid movs instructions with shifter operand.',
  },
  avoid_partial_cpsr: {
    host: 'avoid-partial-cpsr',
    note: 'Avoid CPSR partial update for OOO execution.',
  },
  cde: {
    host: 'cde',
    note: 'Support CDE instructions.',
  },
  cdecp_0: {
    host: 'cdecp0',
    note: 'Coprocessor 0 ISA is CDEv1.',
  },
  cdecp_1: {
    host: 'cdecp1',
    note: 'Coprocessor 1 ISA is CDEv1.',
  },
  cdecp_2: {
    host: 'cdecp2',
    note: 'Coprocessor 2 ISA is CDEv1.',
  },
  cdecp_3: {
    host: 'cdecp3',
    note: 'Coprocessor 3 ISA is CDEv1.',
  },
  cdecp_4: {
    host: 'cdecp4',
    note: 'Coprocessor 4 ISA is CDEv1.',
  },
  cdecp_5: {
    host: 'cdecp5',
    note: 'Coprocessor 5 ISA is CDEv1.',
  },
  cdecp_6: {
    host: 'cdecp6',
    note: 'Coprocessor 6 ISA is CDEv1.',
  },
  cdecp_7: {
    host: 'cdecp7',
    note: 'Coprocessor 7 ISA is CDEv1.',
  },
  cheap_predicable_cpsr: {
    host: 'cheap-predicable-cpsr',
    note: 'Disable +1 predication cost for instructions updating CPSR.',
  },
  d_32: {
    host: 'd32',
    note: 'Extend FP to 32 double registers.',
  },
  db: {
    host: 'db',
    note: 'Has data barrier (dmb/dsb) instructions.',
  },
  dfb: {
    host: 'dfb',
    note: 'Has full data barrier (dfb) instruction.',
  },
  disable_postra_scheduler: {
    host: 'disable-postra-scheduler',
    note: "Don't schedule again after register allocation.",
  },
  dont_widen_vmovs: {
    host: 'dont-widen-vmovs',
    note: "Don't widen VMOVS to VMOVD.",
  },
  dsp: {
    host: 'dsp',
    note: 'Supports DSP instructions in ARM and/or Thumb2.',
  },
  execute_only: {
    host: 'execute-only',
    note: 'Enable the generation of execute only code..',
  },
  expand_fp_mlx: {
    host: 'expand-fp-mlx',
    note: 'Expand VFP/NEON MLA/MLS instructions.',
  },
  exynos: {
    host: 'exynos',
    note: 'Samsung Exynos processors.',
  },
  fp_armv_8_d_16: {
    host: 'fp-armv8d16',
    note: 'Enable ARMv8 FP with only 16 d-registers.',
  },
  fp_armv_8_d_16_sp: {
    host: 'fp-armv8d16sp',
    note: 'Enable ARMv8 FP with only 16 d-registers and no double precision.',
  },
  fp_armv_8_sp: {
    host: 'fp-armv8sp',
    note: 'Enable ARMv8 FP with no double precision.',
  },
  fp_16: {
    host: 'fp16',
    note: 'Enable half-precision floating point.',
  },
  fpao: {
    host: 'fpao',
    note: 'Enable fast computation of positive address offsets.',
  },
  fpregs: {
    host: 'fpregs',
    note: 'Enable FP registers.',
  },
  fpregs_16: {
    host: 'fpregs16',
    note: 'Enable 16-bit FP registers.',
  },
  fpregs_64: {
    host: 'fpregs64',
    note: 'Enable 64-bit FP registers.',
  },
  hwdiv: {
    host: 'hwdiv',
    note: 'Enable divide instructions in Thumb.',
  },
  hwdiv_arm: {
    host: 'hwdiv-arm',
    note: 'Enable divide instructions in ARM mode.',
  },
  iwmmxt: {
    host: 'iwmmxt',
    note: 'ARMv5te architecture.',
  },
  iwmmxt_2: {
    host: 'iwmmxt2',
    note: 'ARMv5te architecture.',
  },
  krait: {
    host: 'krait',
    note: 'Qualcomm Krait processors.',
  },
  lob: {
    host: 'lob',
    note: 'Enable Low Overhead Branch extensions.',
  },
  long_calls: {
    host: 'long-calls',
    note: 'Generate calls via indirect call instructions.',
  },
  loop_align: {
    host: 'loop-align',
    note: 'Prefer 32-bit alignment for loops.',
  },
  m_3: {
    host: 'm3',
    note: 'Cortex-M3 ARM processors.',
  },
  mclass: {
    host: 'mclass',
    note: "Is microcontroller profile ('M' series).",
  },
  mp: {
    host: 'mp',
    note: 'Supports Multiprocessing extension.',
  },
  muxed_units: {
    host: 'muxed-units',
    note: 'Has muxed AGU and NEON/FPU.',
  },
  mve: {
    host: 'mve',
    note: 'Support M-Class Vector Extension with integer ops.',
  },
  mve_fp: {
    host: 'mve.fp',
    note: 'Support M-Class Vector Extension with integer and floating ops.',
  },
  mve_1_beat: {
    host: 'mve1beat',
    note: 'Model MVE instructions as a 1 beat per tick architecture.',
  },
  mve_2_beat: {
    host: 'mve2beat',
    note: 'Model MVE instructions as a 2 beats per tick architecture.',
  },
  mve_4_beat: {
    host: 'mve4beat',
    note: 'Model MVE instructions as a 4 beats per tick architecture.',
  },
  nacl_trap: {
    host: 'nacl-trap',
    note: 'NaCl trap.',
  },
  neon_fpmovs: {
    host: 'neon-fpmovs',
    note: 'Convert VMOVSR, VMOVRS, VMOVS to NEON.',
  },
  neonfp: {
    host: 'neonfp',
    note: 'Use NEON for single precision FP.',
  },
  no_branch_predictor: {
    host: 'no-branch-predictor',
    note: 'Has no branch predictor.',
  },
  no_movt: {
    host: 'no-movt',
    note: "Don't use movt/movw pairs for 32-bit imms.",
  },
  noarm: {
    host: 'noarm',
    note: 'Does not support ARM mode execution.',
  },
  nonpipelined_vfp: {
    host: 'nonpipelined-vfp',
    note: 'VFP instructions are not pipelined.',
  },
  prefer_ishst: {
    host: 'prefer-ishst',
    note: 'Prefer ISHST barriers.',
  },
  prefer_vmovsr: {
    host: 'prefer-vmovsr',
    note: 'Prefer VMOVSR.',
  },
  prof_unpr: {
    host: 'prof-unpr',
    note: 'Is profitable to unpredicate.',
  },
  r_4: {
    host: 'r4',
    note: 'Cortex-R4 ARM processors.',
  },
  r_5: {
    host: 'r5',
    note: 'Cortex-R5 ARM processors.',
  },
  r_52: {
    host: 'r52',
    note: 'Cortex-R52 ARM processors.',
  },
  r_7: {
    host: 'r7',
    note: 'Cortex-R7 ARM processors.',
  },
  rclass: {
    host: 'rclass',
    note: "Is realtime profile ('R' series).",
  },
  read_tp_hard: {
    host: 'read-tp-hard',
    note: 'Reading thread pointer from register.',
  },
  reserve_r_9: {
    host: 'reserve-r9',
    note: 'Reserve R9, making it unavailable as GPR.',
  },
  ret_addr_stack: {
    host: 'ret-addr-stack',
    note: 'Has return address stack.',
  },
  slow_fp_brcc: {
    host: 'slow-fp-brcc',
    note: 'FP compare + branch is slow.',
  },
  slow_load_d_subreg: {
    host: 'slow-load-D-subreg',
    note: 'Loading into D subregs is slow.',
  },
  slow_odd_reg: {
    host: 'slow-odd-reg',
    note: 'VLDM/VSTM starting with an odd register is slow.',
  },
  slow_vdup_32: {
    host: 'slow-vdup32',
    note: 'Has slow VDUP32 - prefer VMOV.',
  },
  slow_vgetlni_32: {
    host: 'slow-vgetlni32',
    note: 'Has slow VGETLNi32 - prefer VMOV.',
  },
  slowfpvfmx: {
    host: 'slowfpvfmx',
    note: 'Disable VFP / NEON FMA instructions.',
  },
  slowfpvmlx: {
    host: 'slowfpvmlx',
    note: 'Disable VFP / NEON MAC instructions.',
  },
  soft_float: {
    host: 'soft-float',
    note: 'Use software floating point features.',
  },
  splat_vfp_neon: {
    host: 'splat-vfp-neon',
    note: 'Splat register from VFP to NEON.',
  },
  swift: {
    host: 'swift',
    note: 'Swift ARM processors.',
  },
  thumb_mode: {
    host: 'thumb-mode',
    note: 'Thumb mode.',
  },
  thumb_2: {
    host: 'thumb2',
    note: 'Enable Thumb2 instructions.',
  },
  trustzone: {
    host: 'trustzone',
    note: 'Enable support for TrustZone security extensions.',
  },
  use_misched: {
    host: 'use-misched',
    note: 'Use the MachineScheduler.',
  },
  v_4_t: {
    host: 'v4t',
    note: 'Support ARM v4T instructions.',
  },
  v_5_t: {
    host: 'v5t',
    note: 'Support ARM v5T instructions.',
  },
  v_5_te: {
    host: 'v5te',
    note: 'Support ARM v5TE, v5TEj, and v5TExp instructions.',
  },
  v_6: {
    host: 'v6',
    note: 'Support ARM v6 instructions.',
  },
  v_6_k: {
    host: 'v6k',
    note: 'Support ARM v6k instructions.',
  },
  v_6_m: {
    host: 'v6m',
    note: 'Support ARM v6M instructions.',
  },
  v_6_t_2: {
    host: 'v6t2',
    note: 'Support ARM v6t2 instructions.',
  },
  v_7: {
    host: 'v7',
    note: 'Support ARM v7 instructions.',
  },
  v_7_clrex: {
    host: 'v7clrex',
    note: 'Has v7 clrex instruction.',
  },
  v_8: {
    host: 'v8',
    note: 'Support ARM v8 instructions.',
  },
  v_8_1_m_main: {
    host: 'v8.1m.main',
    note: 'Support ARM v8-1M Mainline instructions.',
  },
  v_8_m: {
    host: 'v8m',
    note: 'Support ARM v8M Baseline instructions.',
  },
  v_8_m_main: {
    host: 'v8m.main',
    note: 'Support ARM v8M Mainline instructions.',
  },
  vfp_2: {
    host: 'vfp2',
    note: 'Enable VFP2 instructions.',
  },
  vfp_2_sp: {
    host: 'vfp2sp',
    note: 'Enable VFP2 instructions with no double precision.',
  },
  vfp_3: {
    host: 'vfp3',
    note: 'Enable VFP3 instructions.',
  },
  vfp_3_d_16: {
    host: 'vfp3d16',
    note: 'Enable VFP3 instructions with only 16 d-registers.',
  },
  vfp_3_d_16_sp: {
    host: 'vfp3d16sp',
    note: 'Enable VFP3 instructions with only 16 d-registers and no double precision.',
  },
  vfp_3_sp: {
    host: 'vfp3sp',
    note: 'Enable VFP3 instructions with no double precision.',
  },
  vfp_4: {
    host: 'vfp4',
    note: 'Enable VFP4 instructions.',
  },
  vfp_4_d_16: {
    host: 'vfp4d16',
    note: 'Enable VFP4 instructions with only 16 d-registers.',
  },
  vfp_4_d_16_sp: {
    host: 'vfp4d16sp',
    note: 'Enable VFP4 instructions with only 16 d-registers and no double precision.',
  },
  vfp_4_sp: {
    host: 'vfp4sp',
    note: 'Enable VFP4 instructions with no double precision.',
  },
  virtualization: {
    host: 'virtualization',
    note: 'Supports Virtualization extension.',
  },
  vldn_align: {
    host: 'vldn-align',
    note: 'Check for VLDn unaligned access.',
  },
  vmlx_forwarding: {
    host: 'vmlx-forwarding',
    note: 'Has multiplier accumulator forwarding.',
  },
  vmlx_hazards: {
    host: 'vmlx-hazards',
    note: 'Has VMLx hazards.',
  },
  wide_stride_vfp: {
    host: 'wide-stride-vfp',
    note: 'Use a wide stride when allocating VFP registers.',
  },
  xscale: {
    host: 'xscale',
    note: 'ARMv5te architecture.',
  },
  addsubiw: {
    host: 'addsubiw',
    note: 'Enable 16-bit register-immediate addition and subtraction instructions.',
  },
  avr_0: {
    host: 'avr0',
    note: 'The device is a part of the avr0 family.',
  },
  avr_1: {
    host: 'avr1',
    note: 'The device is a part of the avr1 family.',
  },
  avr_2: {
    host: 'avr2',
    note: 'The device is a part of the avr2 family.',
  },
  avr_25: {
    host: 'avr25',
    note: 'The device is a part of the avr25 family.',
  },
  avr_3: {
    host: 'avr3',
    note: 'The device is a part of the avr3 family.',
  },
  avr_31: {
    host: 'avr31',
    note: 'The device is a part of the avr31 family.',
  },
  avr_35: {
    host: 'avr35',
    note: 'The device is a part of the avr35 family.',
  },
  avr_4: {
    host: 'avr4',
    note: 'The device is a part of the avr4 family.',
  },
  avr_5: {
    host: 'avr5',
    note: 'The device is a part of the avr5 family.',
  },
  avr_51: {
    host: 'avr51',
    note: 'The device is a part of the avr51 family.',
  },
  avr_6: {
    host: 'avr6',
    note: 'The device is a part of the avr6 family.',
  },
  avrtiny: {
    host: 'avrtiny',
    note: 'The device is a part of the avrtiny family.',
  },
  break: {
    host: 'break',
    note: 'The device supports the `BREAK` debugging instruction.',
  },
  des: {
    host: 'des',
    note: 'The device supports the `DES k` encryption instruction.',
  },
  eijmpcall: {
    host: 'eijmpcall',
    note: 'The device supports the `EIJMP`/`EICALL` instructions.',
  },
  elpm: {
    host: 'elpm',
    note: 'The device supports the ELPM instruction.',
  },
  elpmx: {
    host: 'elpmx',
    note: 'The device supports the `ELPM Rd, Z[+]` instructions.',
  },
  ijmpcall: {
    host: 'ijmpcall',
    note: 'The device supports `IJMP`/`ICALL`instructions.',
  },
  jmpcall: {
    host: 'jmpcall',
    note: 'The device supports the `JMP` and `CALL` instructions.',
  },
  lpm: {
    host: 'lpm',
    note: 'The device supports the `LPM` instruction.',
  },
  lpmx: {
    host: 'lpmx',
    note: 'The device supports the `LPM Rd, Z[+]` instruction.',
  },
  memmappedregs: {
    host: 'memmappedregs',
    note: 'The device has CPU registers mapped in data address space.',
  },
  movw: {
    host: 'movw',
    note: 'The device supports the 16-bit MOVW instruction.',
  },
  mul: {
    host: 'mul',
    note: 'The device supports the multiplication instructions.',
  },
  rmw: {
    host: 'rmw',
    note: 'The device supports the read-write-modify instructions: XCH, LAS, LAC, LAT.',
  },
  smallstack: {
    host: 'smallstack',
    note: 'The device has an 8-bit stack pointer.',
  },
  special: {
    host: 'special',
    note: 'Enable use of the entire instruction set - used for debugging.',
  },
  spm: {
    host: 'spm',
    note: 'The device supports the `SPM` instruction.',
  },
  spmx: {
    host: 'spmx',
    note: 'The device supports the `SPM Z+` instruction.',
  },
  sram: {
    host: 'sram',
    note: 'The device has random access memory.',
  },
  tinyencoding: {
    host: 'tinyencoding',
    note: 'The device has Tiny core specific instruction encodings.',
  },
  xmega: {
    host: 'xmega',
    note: 'The device is a part of the xmega family.',
  },
  xmegau: {
    host: 'xmegau',
    note: 'The device is a part of the xmegau family.',
  },
  alu_32: {
    host: 'alu32',
    note: 'Enable ALU32 instructions.',
  },
  dummy: {
    host: 'dummy',
    note: 'unused feature.',
  },
  dwarfris: {
    host: 'dwarfris',
    note: 'Disable MCAsmInfo DwarfUsesRelocationsAcrossSections.',
  },
  audio: {
    host: 'audio',
    note: 'Hexagon Audio extension instructions.',
  },
  compound: {
    host: 'compound',
    note: 'Use compound instructions.',
  },
  duplex: {
    host: 'duplex',
    note: 'Enable generation of duplex instruction.',
  },
  hvx: {
    host: 'hvx',
    note: 'Hexagon HVX instructions.',
  },
  hvx_length_128_b: {
    host: 'hvx-length128b',
    note: 'Hexagon HVX 128B instructions.',
  },
  hvx_length_64_b: {
    host: 'hvx-length64b',
    note: 'Hexagon HVX 64B instructions.',
  },
  hvxv_60: {
    host: 'hvxv60',
    note: 'Hexagon HVX instructions.',
  },
  hvxv_62: {
    host: 'hvxv62',
    note: 'Hexagon HVX instructions.',
  },
  hvxv_65: {
    host: 'hvxv65',
    note: 'Hexagon HVX instructions.',
  },
  hvxv_66: {
    host: 'hvxv66',
    note: 'Hexagon HVX instructions.',
  },
  hvxv_67: {
    host: 'hvxv67',
    note: 'Hexagon HVX instructions.',
  },
  mem_noshuf: {
    host: 'mem_noshuf',
    note: 'Supports mem_noshuf feature.',
  },
  memops: {
    host: 'memops',
    note: 'Use memop instructions.',
  },
  noreturn_stack_elim: {
    host: 'noreturn-stack-elim',
    note: 'Eliminate stack allocation in a noreturn function when possible.',
  },
  nvj: {
    host: 'nvj',
    note: 'Support for new-value jumps.',
  },
  nvs: {
    host: 'nvs',
    note: 'Support for new-value stores.',
  },
  packets: {
    host: 'packets',
    note: 'Support for instruction packets.',
  },
  prev_65: {
    host: 'prev65',
    note: 'Support features deprecated in v65.',
  },
  reserved_r_19: {
    host: 'reserved-r19',
    note: 'Reserve register R19.',
  },
  small_data: {
    host: 'small-data',
    note: 'Allow GP-relative addressing of global variables.',
  },
  tinycore: {
    host: 'tinycore',
    note: 'Hexagon Tiny Core.',
  },
  unsafe_fp: {
    host: 'unsafe-fp',
    note: 'Use unsafe FP math.',
  },
  v_5: {
    host: 'v5',
    note: 'Enable Hexagon V5 architecture.',
  },
  v_55: {
    host: 'v55',
    note: 'Enable Hexagon V55 architecture.',
  },
  v_60: {
    host: 'v60',
    note: 'Enable Hexagon V60 architecture.',
  },
  v_62: {
    host: 'v62',
    note: 'Enable Hexagon V62 architecture.',
  },
  v_65: {
    host: 'v65',
    note: 'Enable Hexagon V65 architecture.',
  },
  v_66: {
    host: 'v66',
    note: 'Enable Hexagon V66 architecture.',
  },
  v_67: {
    host: 'v67',
    note: 'Enable Hexagon V67 architecture.',
  },
  zreg: {
    host: 'zreg',
    note: 'Hexagon ZReg extension instructions.',
  },
  abs_2008: {
    host: 'abs2008',
    note: 'Disable IEEE 754-2008 abs.fmt mode.',
  },
  cnmips: {
    host: 'cnmips',
    note: 'Octeon cnMIPS Support.',
  },
  cnmipsp: {
    host: 'cnmipsp',
    note: 'Octeon+ cnMIPS Support.',
  },
  dspr_2: {
    host: 'dspr2',
    note: 'Mips DSP-R2 ASE.',
  },
  dspr_3: {
    host: 'dspr3',
    note: 'Mips DSP-R3 ASE.',
  },
  eva: {
    host: 'eva',
    note: 'Mips EVA ASE.',
  },
  fpxx: {
    host: 'fpxx',
    note: 'Support for FPXX.',
  },
  ginv: {
    host: 'ginv',
    note: 'Mips Global Invalidate ASE.',
  },
  gp_64: {
    host: 'gp64',
    note: 'General Purpose Registers are 64-bit wide.',
  },
  micromips: {
    host: 'micromips',
    note: 'microMips mode.',
  },
  mips_1: {
    host: 'mips1',
    note: 'Mips I ISA Support [highly experimental].',
  },
  mips_16: {
    host: 'mips16',
    note: 'Mips16 mode.',
  },
  mips_2: {
    host: 'mips2',
    note: 'Mips II ISA Support [highly experimental].',
  },
  mips_3: {
    host: 'mips3',
    note: 'MIPS III ISA Support [highly experimental].',
  },
  mips_32: {
    host: 'mips32',
    note: 'Mips32 ISA Support.',
  },
  mips_32_r_2: {
    host: 'mips32r2',
    note: 'Mips32r2 ISA Support.',
  },
  mips_32_r_3: {
    host: 'mips32r3',
    note: 'Mips32r3 ISA Support.',
  },
  mips_32_r_5: {
    host: 'mips32r5',
    note: 'Mips32r5 ISA Support.',
  },
  mips_32_r_6: {
    host: 'mips32r6',
    note: 'Mips32r6 ISA Support [experimental].',
  },
  mips_3_32: {
    host: 'mips3_32',
    note: 'Subset of MIPS-III that is also in MIPS32 [highly experimental].',
  },
  mips_3_32_r_2: {
    host: 'mips3_32r2',
    note: 'Subset of MIPS-III that is also in MIPS32r2 [highly experimental].',
  },
  mips_3_d: {
    host: 'mips3d',
    note: 'Mips 3D ASE.',
  },
  mips_4: {
    host: 'mips4',
    note: 'MIPS IV ISA Support.',
  },
  mips_4_32: {
    host: 'mips4_32',
    note: 'Subset of MIPS-IV that is also in MIPS32 [highly experimental].',
  },
  mips_4_32_r_2: {
    host: 'mips4_32r2',
    note: 'Subset of MIPS-IV that is also in MIPS32r2 [highly experimental].',
  },
  mips_5: {
    host: 'mips5',
    note: 'MIPS V ISA Support [highly experimental].',
  },
  mips_5_32_r_2: {
    host: 'mips5_32r2',
    note: 'Subset of MIPS-V that is also in MIPS32r2 [highly experimental].',
  },
  mips_64: {
    host: 'mips64',
    note: 'Mips64 ISA Support.',
  },
  mips_64_r_2: {
    host: 'mips64r2',
    note: 'Mips64r2 ISA Support.',
  },
  mips_64_r_3: {
    host: 'mips64r3',
    note: 'Mips64r3 ISA Support.',
  },
  mips_64_r_5: {
    host: 'mips64r5',
    note: 'Mips64r5 ISA Support.',
  },
  mips_64_r_6: {
    host: 'mips64r6',
    note: 'Mips64r6 ISA Support [experimental].',
  },
  msa: {
    host: 'msa',
    note: 'Mips MSA ASE.',
  },
  mt: {
    host: 'mt',
    note: 'Mips MT ASE.',
  },
  nan_2008: {
    host: 'nan2008',
    note: 'IEEE 754-2008 NaN encoding.',
  },
  noabicalls: {
    host: 'noabicalls',
    note: 'Disable SVR4-style position-independent code.',
  },
  nomadd_4: {
    host: 'nomadd4',
    note: 'Disable 4-operand madd.fmt and related instructions.',
  },
  nooddspreg: {
    host: 'nooddspreg',
    note: 'Disable odd numbered single-precision registers.',
  },
  p_5600: {
    host: 'p5600',
    note: 'The P5600 Processor.',
  },
  ptr_64: {
    host: 'ptr64',
    note: 'Pointers are 64-bit wide.',
  },
  single_float: {
    host: 'single-float',
    note: 'Only supports single precision float.',
  },
  sym_32: {
    host: 'sym32',
    note: 'Symbols are 32 bit on Mips64.',
  },
  use_indirect_jump_hazard: {
    host: 'use-indirect-jump-hazard',
    note: 'Use indirect jump guards to prevent certain speculation based attacks.',
  },
  use_tcc_in_div: {
    host: 'use-tcc-in-div',
    note: 'Force the assembler to use trapping.',
  },
  vfpu: {
    host: 'vfpu',
    note: 'Enable vector FPU instructions.',
  },
  virt: {
    host: 'virt',
    note: 'Mips Virtualization ASE.',
  },
  xgot: {
    host: 'xgot',
    note: 'Assume 32-bit GOT.',
  },
  ext: {
    host: 'ext',
    note: 'Enable MSP430-X extensions.',
  },
  hwmult_16: {
    host: 'hwmult16',
    note: 'Enable 16-bit hardware multiplier.',
  },
  hwmult_32: {
    host: 'hwmult32',
    note: 'Enable 32-bit hardware multiplier.',
  },
  hwmultf_5: {
    host: 'hwmultf5',
    note: 'Enable F5 series hardware multiplier.',
  },
  ptx_32: {
    host: 'ptx32',
    note: 'Use PTX version 3.2.',
  },
  ptx_40: {
    host: 'ptx40',
    note: 'Use PTX version 4.0.',
  },
  ptx_41: {
    host: 'ptx41',
    note: 'Use PTX version 4.1.',
  },
  ptx_42: {
    host: 'ptx42',
    note: 'Use PTX version 4.2.',
  },
  ptx_43: {
    host: 'ptx43',
    note: 'Use PTX version 4.3.',
  },
  ptx_50: {
    host: 'ptx50',
    note: 'Use PTX version 5.0.',
  },
  ptx_60: {
    host: 'ptx60',
    note: 'Use PTX version 6.0.',
  },
  ptx_61: {
    host: 'ptx61',
    note: 'Use PTX version 6.1.',
  },
  ptx_63: {
    host: 'ptx63',
    note: 'Use PTX version 6.3.',
  },
  ptx_64: {
    host: 'ptx64',
    note: 'Use PTX version 6.4.',
  },
  ptx_65: {
    host: 'ptx65',
    note: 'Use PTX version 6.5.',
  },
  ptx_70: {
    host: 'ptx70',
    note: 'Use PTX version 7.0.',
  },
  sm_20: {
    host: 'sm_20',
    note: 'Target SM 2.0.',
  },
  sm_21: {
    host: 'sm_21',
    note: 'Target SM 2.1.',
  },
  sm_30: {
    host: 'sm_30',
    note: 'Target SM 3.0.',
  },
  sm_32: {
    host: 'sm_32',
    note: 'Target SM 3.2.',
  },
  sm_35: {
    host: 'sm_35',
    note: 'Target SM 3.5.',
  },
  sm_37: {
    host: 'sm_37',
    note: 'Target SM 3.7.',
  },
  sm_50: {
    host: 'sm_50',
    note: 'Target SM 5.0.',
  },
  sm_52: {
    host: 'sm_52',
    note: 'Target SM 5.2.',
  },
  sm_53: {
    host: 'sm_53',
    note: 'Target SM 5.3.',
  },
  sm_60: {
    host: 'sm_60',
    note: 'Target SM 6.0.',
  },
  sm_61: {
    host: 'sm_61',
    note: 'Target SM 6.1.',
  },
  sm_62: {
    host: 'sm_62',
    note: 'Target SM 6.2.',
  },
  sm_70: {
    host: 'sm_70',
    note: 'Target SM 7.0.',
  },
  sm_72: {
    host: 'sm_72',
    note: 'Target SM 7.2.',
  },
  sm_75: {
    host: 'sm_75',
    note: 'Target SM 7.5.',
  },
  sm_80: {
    host: 'sm_80',
    note: 'Target SM 8.0.',
  },
  '64_bit': {
    host: '64bit',
    note: 'Support 64-bit instructions.',
  },
  '64_bitregs': {
    host: '64bitregs',
    note: 'Enable 64-bit registers usage for ppc32 [beta].',
  },
  allow_unaligned_fp_access: {
    host: 'allow-unaligned-fp-access',
    note: 'CPU does not trap on unaligned FP access.',
  },
  altivec: {
    host: 'altivec',
    note: 'Enable Altivec instructions.',
  },
  booke: {
    host: 'booke',
    note: 'Enable Book E instructions.',
  },
  bpermd: {
    host: 'bpermd',
    note: 'Enable the bpermd instruction.',
  },
  cmpb: {
    host: 'cmpb',
    note: 'Enable the cmpb instruction.',
  },
  crbits: {
    host: 'crbits',
    note: 'Use condition-register bits individually.',
  },
  direct_move: {
    host: 'direct-move',
    note: 'Enable Power8 direct move instructions.',
  },
  e_500: {
    host: 'e500',
    note: 'Enable E500/E500mc instructions.',
  },
  extdiv: {
    host: 'extdiv',
    note: 'Enable extended divide instructions.',
  },
  fcpsgn: {
    host: 'fcpsgn',
    note: 'Enable the fcpsgn instruction.',
  },
  float_128: {
    host: 'float128',
    note: 'Enable the __float128 data type for IEEE-754R Binary128..',
  },
  fpcvt: {
    host: 'fpcvt',
    note: 'Enable fc[ft]* (unsigned and single-precision) and lfiwzx instructions.',
  },
  fprnd: {
    host: 'fprnd',
    note: 'Enable the fri[mnpz] instructions.',
  },
  fpu: {
    host: 'fpu',
    note: 'Enable classic FPU instructions.',
  },
  fre: {
    host: 'fre',
    note: 'Enable the fre instruction.',
  },
  fres: {
    host: 'fres',
    note: 'Enable the fres instruction.',
  },
  frsqrte: {
    host: 'frsqrte',
    note: 'Enable the frsqrte instruction.',
  },
  frsqrtes: {
    host: 'frsqrtes',
    note: 'Enable the frsqrtes instruction.',
  },
  fsqrt: {
    host: 'fsqrt',
    note: 'Enable the fsqrt instruction.',
  },
  fuse_addi_load: {
    host: 'fuse-addi-load',
    note: 'Power8 Addi-Load fusion.',
  },
  fuse_addis_load: {
    host: 'fuse-addis-load',
    note: 'Power8 Addis-Load fusion.',
  },
  fusion: {
    host: 'fusion',
    note: 'Target supports instruction fusion.',
  },
  hard_float: {
    host: 'hard-float',
    note: 'Enable floating-point instructions.',
  },
  htm: {
    host: 'htm',
    note: 'Enable Hardware Transactional Memory instructions.',
  },
  icbt: {
    host: 'icbt',
    note: 'Enable icbt instruction.',
  },
  invariant_function_descriptors: {
    host: 'invariant-function-descriptors',
    note: 'Assume function descriptors are invariant.',
  },
  isa_v_30_instructions: {
    host: 'isa-v30-instructions',
    note: 'Enable instructions in ISA 3.0..',
  },
  isa_v_31_instructions: {
    host: 'isa-v31-instructions',
    note: 'Enable instructions in ISA 3.1..',
  },
  isel: {
    host: 'isel',
    note: 'Enable the isel instruction.',
  },
  ldbrx: {
    host: 'ldbrx',
    note: 'Enable the ldbrx instruction.',
  },
  lfiwax: {
    host: 'lfiwax',
    note: 'Enable the lfiwax instruction.',
  },
  longcall: {
    host: 'longcall',
    note: 'Always use indirect calls.',
  },
  mfocrf: {
    host: 'mfocrf',
    note: 'Enable the MFOCRF instruction.',
  },
  msync: {
    host: 'msync',
    note: 'Has only the msync instruction instead of sync.',
  },
  partword_atomics: {
    host: 'partword-atomics',
    note: 'Enable l[bh]arx and st[bh]cx..',
  },
  pcrelative_memops: {
    host: 'pcrelative-memops',
    note: 'Enable PC relative Memory Ops.',
  },
  popcntd: {
    host: 'popcntd',
    note: 'Enable the popcnt[dw] instructions.',
  },
  power_10_vector: {
    host: 'power10-vector',
    note: 'Enable POWER10 vector instructions.',
  },
  power_8_altivec: {
    host: 'power8-altivec',
    note: 'Enable POWER8 Altivec instructions.',
  },
  power_8_vector: {
    host: 'power8-vector',
    note: 'Enable POWER8 vector instructions.',
  },
  power_9_altivec: {
    host: 'power9-altivec',
    note: 'Enable POWER9 Altivec instructions.',
  },
  power_9_vector: {
    host: 'power9-vector',
    note: 'Enable POWER9 vector instructions.',
  },
  ppc_postra_sched: {
    host: 'ppc-postra-sched',
    note: 'Use PowerPC post-RA scheduling strategy.',
  },
  ppc_prera_sched: {
    host: 'ppc-prera-sched',
    note: 'Use PowerPC pre-RA scheduling strategy.',
  },
  ppc_4_xx: {
    host: 'ppc4xx',
    note: 'Enable PPC 4xx instructions.',
  },
  ppc_6_xx: {
    host: 'ppc6xx',
    note: 'Enable PPC 6xx instructions.',
  },
  prefix_instrs: {
    host: 'prefix-instrs',
    note: 'Enable prefixed instructions.',
  },
  qpx: {
    host: 'qpx',
    note: 'Enable QPX instructions.',
  },
  recipprec: {
    host: 'recipprec',
    note: 'Assume higher precision reciprocal estimates.',
  },
  secure_plt: {
    host: 'secure-plt',
    note: 'Enable secure plt mode.',
  },
  slow_popcntd: {
    host: 'slow-popcntd',
    note: 'Has slow popcnt[dw] instructions.',
  },
  stfiwx: {
    host: 'stfiwx',
    note: 'Enable the stfiwx instruction.',
  },
  two_const_nr: {
    host: 'two-const-nr',
    note: 'Requires two constant Newton-Raphson computation.',
  },
  vectors_use_two_units: {
    host: 'vectors-use-two-units',
    note: 'Vectors use two units.',
  },
  vsx: {
    host: 'vsx',
    note: 'Enable VSX instructions.',
  },
  has_vertex_cache: {
    host: 'HasVertexCache',
    note: 'Specify use of dedicated vertex cache.',
  },
  r_600_alu_inst: {
    host: 'R600ALUInst',
    note: 'Older version of ALU instructions encoding.',
  },
  cayman_isa: {
    host: 'caymanISA',
    note: 'Use Cayman ISA.',
  },
  cfalubug: {
    host: 'cfalubug',
    note: 'GPU has CF_ALU bug.',
  },
  evergreen: {
    host: 'evergreen',
    note: 'EVERGREEN GPU generation.',
  },
  fetch_16: {
    host: 'fetch16',
    note: 'Limit the maximum number of fetches in a clause to 16.',
  },
  fetch_8: {
    host: 'fetch8',
    note: 'Limit the maximum number of fetches in a clause to 8.',
  },
  northern_islands: {
    host: 'northern-islands',
    note: 'NORTHERN_ISLANDS GPU generation.',
  },
  r_600: {
    host: 'r600',
    note: 'R600 GPU generation.',
  },
  r_700: {
    host: 'r700',
    note: 'R700 GPU generation.',
  },
  a: {
    host: 'a',
    note: "'A' (Atomic Instructions).",
  },
  c: {
    host: 'c',
    note: "'C' (Compressed Instructions).",
  },
  d: {
    host: 'd',
    note: "'D' (Double-Precision Floating-Point).",
  },
  e: {
    host: 'e',
    note: 'Implements RV32E (provides 16 rather than 32 GPRs).',
  },
  experimental_b: {
    host: 'experimental-b',
    note: "'B' (Bit Manipulation Instructions).",
  },
  experimental_v: {
    host: 'experimental-v',
    note: "'V' (Vector Instructions).",
  },
  experimental_zbb: {
    host: 'experimental-zbb',
    note: "'Zbb' (Base 'B' Instructions).",
  },
  experimental_zbc: {
    host: 'experimental-zbc',
    note: "'Zbc' (Carry-Less 'B' Instructions).",
  },
  experimental_zbe: {
    host: 'experimental-zbe',
    note: "'Zbe' (Extract-Deposit 'B' Instructions).",
  },
  experimental_zbf: {
    host: 'experimental-zbf',
    note: "'Zbf' (Bit-Field 'B' Instructions).",
  },
  experimental_zbm: {
    host: 'experimental-zbm',
    note: "'Zbm' (Matrix 'B' Instructions).",
  },
  experimental_zbp: {
    host: 'experimental-zbp',
    note: "'Zbp' (Permutation 'B' Instructions).",
  },
  experimental_zbproposedc: {
    host: 'experimental-zbproposedc',
    note: "'Zbproposedc' (Proposed Compressed 'B' Instructions).",
  },
  experimental_zbr: {
    host: 'experimental-zbr',
    note: "'Zbr' (Polynomial Reduction 'B' Instructions).",
  },
  experimental_zbs: {
    host: 'experimental-zbs',
    note: "'Zbs' (Single-Bit 'B' Instructions).",
  },
  experimental_zbt: {
    host: 'experimental-zbt',
    note: "'Zbt' (Ternary 'B' Instructions).",
  },
  f: {
    host: 'f',
    note: "'F' (Single-Precision Floating-Point).",
  },
  m: {
    host: 'm',
    note: "'M' (Integer Multiplication and Division).",
  },
  no_rvc_hints: {
    host: 'no-rvc-hints',
    note: 'Disable RVC Hint Instructions..',
  },
  relax: {
    host: 'relax',
    note: 'Enable Linker relaxation..',
  },
  reserve_x_16: {
    host: 'reserve-x16',
    note: 'Reserve X16.',
  },
  reserve_x_17: {
    host: 'reserve-x17',
    note: 'Reserve X17.',
  },
  reserve_x_19: {
    host: 'reserve-x19',
    note: 'Reserve X19.',
  },
  reserve_x_29: {
    host: 'reserve-x29',
    note: 'Reserve X29.',
  },
  reserve_x_31: {
    host: 'reserve-x31',
    note: 'Reserve X31.',
  },
  reserve_x_8: {
    host: 'reserve-x8',
    note: 'Reserve X8.',
  },
  save_restore: {
    host: 'save-restore',
    note: 'Enable save/restore..',
  },
  deprecated_v_8: {
    host: 'deprecated-v8',
    note: 'Enable deprecated V8 instructions in V9 mode.',
  },
  detectroundchange: {
    host: 'detectroundchange',
    note: 'LEON3 erratum detection: Detects any rounding mode change request: use only the round-to-nearest rounding mode.',
  },
  fixallfdivsqrt: {
    host: 'fixallfdivsqrt',
    note: 'LEON erratum fix: Fix FDIVS/FDIVD/FSQRTS/FSQRTD instructions with NOPs and floating-point store.',
  },
  hard_quad_float: {
    host: 'hard-quad-float',
    note: 'Enable quad-word floating point instructions.',
  },
  hasleoncasa: {
    host: 'hasleoncasa',
    note: 'Enable CASA instruction for LEON3 and LEON4 processors.',
  },
  hasumacsmac: {
    host: 'hasumacsmac',
    note: 'Enable UMAC and SMAC for LEON3 and LEON4 processors.',
  },
  insertnopload: {
    host: 'insertnopload',
    note: 'LEON3 erratum fix: Insert a NOP instruction after every single-cycle load instruction when the next instruction is another load/store instruction.',
  },
  leon: {
    host: 'leon',
    note: 'Enable LEON extensions.',
  },
  leoncyclecounter: {
    host: 'leoncyclecounter',
    note: 'Use the Leon cycle counter register.',
  },
  leonpwrpsr: {
    host: 'leonpwrpsr',
    note: 'Enable the PWRPSR instruction.',
  },
  no_fmuls: {
    host: 'no-fmuls',
    note: 'Disable the fmuls instruction..',
  },
  no_fsmuld: {
    host: 'no-fsmuld',
    note: 'Disable the fsmuld instruction..',
  },
  popc: {
    host: 'popc',
    note: 'Use the popc (population count) instruction.',
  },
  soft_mul_div: {
    host: 'soft-mul-div',
    note: 'Use software emulation for integer multiply and divide.',
  },
  v_9: {
    host: 'v9',
    note: 'Enable SPARC-V9 instructions.',
  },
  vis: {
    host: 'vis',
    note: 'Enable UltraSPARC Visual Instruction Set extensions.',
  },
  vis_2: {
    host: 'vis2',
    note: 'Enable Visual Instruction Set extensions II.',
  },
  vis_3: {
    host: 'vis3',
    note: 'Enable Visual Instruction Set extensions III.',
  },
  deflate_conversion: {
    host: 'deflate-conversion',
    note: 'Assume that the deflate-conversion facility is installed.',
  },
  dfp_packed_conversion: {
    host: 'dfp-packed-conversion',
    note: 'Assume that the DFP packed-conversion facility is installed.',
  },
  dfp_zoned_conversion: {
    host: 'dfp-zoned-conversion',
    note: 'Assume that the DFP zoned-conversion facility is installed.',
  },
  distinct_ops: {
    host: 'distinct-ops',
    note: 'Assume that the distinct-operands facility is installed.',
  },
  enhanced_dat_2: {
    host: 'enhanced-dat-2',
    note: 'Assume that the enhanced-DAT facility 2 is installed.',
  },
  enhanced_sort: {
    host: 'enhanced-sort',
    note: 'Assume that the enhanced-sort facility is installed.',
  },
  execution_hint: {
    host: 'execution-hint',
    note: 'Assume that the execution-hint facility is installed.',
  },
  fast_serialization: {
    host: 'fast-serialization',
    note: 'Assume that the fast-serialization facility is installed.',
  },
  fp_extension: {
    host: 'fp-extension',
    note: 'Assume that the floating-point extension facility is installed.',
  },
  guarded_storage: {
    host: 'guarded-storage',
    note: 'Assume that the guarded-storage facility is installed.',
  },
  high_word: {
    host: 'high-word',
    note: 'Assume that the high-word facility is installed.',
  },
  insert_reference_bits_multiple: {
    host: 'insert-reference-bits-multiple',
    note: 'Assume that the insert-reference-bits-multiple facility is installed.',
  },
  interlocked_access_1: {
    host: 'interlocked-access1',
    note: 'Assume that interlocked-access facility 1 is installed.',
  },
  load_and_trap: {
    host: 'load-and-trap',
    note: 'Assume that the load-and-trap facility is installed.',
  },
  load_and_zero_rightmost_byte: {
    host: 'load-and-zero-rightmost-byte',
    note: 'Assume that the load-and-zero-rightmost-byte facility is installed.',
  },
  load_store_on_cond: {
    host: 'load-store-on-cond',
    note: 'Assume that the load/store-on-condition facility is installed.',
  },
  load_store_on_cond_2: {
    host: 'load-store-on-cond-2',
    note: 'Assume that the load/store-on-condition facility 2 is installed.',
  },
  message_security_assist_extension_3: {
    host: 'message-security-assist-extension3',
    note: 'Assume that the message-security-assist extension facility 3 is installed.',
  },
  message_security_assist_extension_4: {
    host: 'message-security-assist-extension4',
    note: 'Assume that the message-security-assist extension facility 4 is installed.',
  },
  message_security_assist_extension_5: {
    host: 'message-security-assist-extension5',
    note: 'Assume that the message-security-assist extension facility 5 is installed.',
  },
  message_security_assist_extension_7: {
    host: 'message-security-assist-extension7',
    note: 'Assume that the message-security-assist extension facility 7 is installed.',
  },
  message_security_assist_extension_8: {
    host: 'message-security-assist-extension8',
    note: 'Assume that the message-security-assist extension facility 8 is installed.',
  },
  message_security_assist_extension_9: {
    host: 'message-security-assist-extension9',
    note: 'Assume that the message-security-assist extension facility 9 is installed.',
  },
  miscellaneous_extensions: {
    host: 'miscellaneous-extensions',
    note: 'Assume that the miscellaneous-extensions facility is installed.',
  },
  miscellaneous_extensions_2: {
    host: 'miscellaneous-extensions-2',
    note: 'Assume that the miscellaneous-extensions facility 2 is installed.',
  },
  miscellaneous_extensions_3: {
    host: 'miscellaneous-extensions-3',
    note: 'Assume that the miscellaneous-extensions facility 3 is installed.',
  },
  population_count: {
    host: 'population-count',
    note: 'Assume that the population-count facility is installed.',
  },
  processor_assist: {
    host: 'processor-assist',
    note: 'Assume that the processor-assist facility is installed.',
  },
  reset_reference_bits_multiple: {
    host: 'reset-reference-bits-multiple',
    note: 'Assume that the reset-reference-bits-multiple facility is installed.',
  },
  transactional_execution: {
    host: 'transactional-execution',
    note: 'Assume that the transactional-execution facility is installed.',
  },
  vector: {
    host: 'vector',
    note: 'Assume that the vectory facility is installed.',
  },
  vector_enhancements_1: {
    host: 'vector-enhancements-1',
    note: 'Assume that the vector enhancements facility 1 is installed.',
  },
  vector_enhancements_2: {
    host: 'vector-enhancements-2',
    note: 'Assume that the vector enhancements facility 2 is installed.',
  },
  vector_packed_decimal: {
    host: 'vector-packed-decimal',
    note: 'Assume that the vector packed decimal facility is installed.',
  },
  vector_packed_decimal_enhancement: {
    host: 'vector-packed-decimal-enhancement',
    note: 'Assume that the vector packed decimal enhancement facility is installed.',
  },
  atomics: {
    host: 'atomics',
    note: 'Enable Atomics.',
  },
  bulk_memory: {
    host: 'bulk-memory',
    note: 'Enable bulk memory operations.',
  },
  exception_handling: {
    host: 'exception-handling',
    note: 'Enable Wasm exception handling.',
  },
  multivalue: {
    host: 'multivalue',
    note: 'Enable multivalue blocks, instructions, and functions.',
  },
  mutable_globals: {
    host: 'mutable-globals',
    note: 'Enable mutable globals.',
  },
  nontrapping_fptoint: {
    host: 'nontrapping-fptoint',
    note: 'Enable non-trapping float-to-int conversion operators.',
  },
  reference_types: {
    host: 'reference-types',
    note: 'Enable reference types.',
  },
  sign_ext: {
    host: 'sign-ext',
    note: 'Enable sign extension operators.',
  },
  simd_128: {
    host: 'simd128',
    note: 'Enable 128-bit SIMD.',
  },
  tail_call: {
    host: 'tail-call',
    note: 'Enable tail call instructions.',
  },
  unimplemented_simd_128: {
    host: 'unimplemented-simd128',
    note: 'Enable 128-bit SIMD not yet implemented in engines.',
  },
  '16_bit_mode': {
    host: '16bit-mode',
    note: '16-bit mode (i8086).',
  },
  '32_bit_mode': {
    host: '32bit-mode',
    note: '32-bit mode (80386).',
  },
  '3_dnow': {
    host: '3dnow',
    note: 'Enable 3DNow! instructions.',
  },
  '3_dnowa': {
    host: '3dnowa',
    note: 'Enable 3DNow! Athlon instructions.',
  },
  '64_bit_mode': {
    host: '64bit-mode',
    note: '64-bit mode (x86_64).',
  },
  adx: {
    host: 'adx',
    note: 'Support ADX instructions.',
  },
  amx_bf_16: {
    host: 'amx-bf16',
    note: 'Support AMX-BF16 instructions.',
  },
  amx_int_8: {
    host: 'amx-int8',
    note: 'Support AMX-INT8 instructions.',
  },
  amx_tile: {
    host: 'amx-tile',
    note: 'Support AMX-TILE instructions.',
  },
  avx: {
    host: 'avx',
    note: 'Enable AVX instructions.',
  },
  avx_2: {
    host: 'avx2',
    note: 'Enable AVX2 instructions.',
  },
  avx_512_bf_16: {
    host: 'avx512bf16',
    note: 'Support bfloat16 floating point.',
  },
  avx_512_bitalg: {
    host: 'avx512bitalg',
    note: 'Enable AVX-512 Bit Algorithms.',
  },
  avx_512_bw: {
    host: 'avx512bw',
    note: 'Enable AVX-512 Byte and Word Instructions.',
  },
  avx_512_cd: {
    host: 'avx512cd',
    note: 'Enable AVX-512 Conflict Detection Instructions.',
  },
  avx_512_dq: {
    host: 'avx512dq',
    note: 'Enable AVX-512 Doubleword and Quadword Instructions.',
  },
  avx_512_er: {
    host: 'avx512er',
    note: 'Enable AVX-512 Exponential and Reciprocal Instructions.',
  },
  avx_512_f: {
    host: 'avx512f',
    note: 'Enable AVX-512 instructions.',
  },
  avx_512_ifma: {
    host: 'avx512ifma',
    note: 'Enable AVX-512 Integer Fused Multiple-Add.',
  },
  avx_512_pf: {
    host: 'avx512pf',
    note: 'Enable AVX-512 PreFetch Instructions.',
  },
  avx_512_vbmi: {
    host: 'avx512vbmi',
    note: 'Enable AVX-512 Vector Byte Manipulation Instructions.',
  },
  avx_512_vbmi_2: {
    host: 'avx512vbmi2',
    note: 'Enable AVX-512 further Vector Byte Manipulation Instructions.',
  },
  avx_512_vl: {
    host: 'avx512vl',
    note: 'Enable AVX-512 Vector Length eXtensions.',
  },
  avx_512_vnni: {
    host: 'avx512vnni',
    note: 'Enable AVX-512 Vector Neural Network Instructions.',
  },
  avx_512_vp_2_intersect: {
    host: 'avx512vp2intersect',
    note: 'Enable AVX-512 vp2intersect.',
  },
  avx_512_vpopcntdq: {
    host: 'avx512vpopcntdq',
    note: 'Enable AVX-512 Population Count Instructions.',
  },
  bmi: {
    host: 'bmi',
    note: 'Support BMI instructions.',
  },
  bmi_2: {
    host: 'bmi2',
    note: 'Support BMI2 instructions.',
  },
  branchfusion: {
    host: 'branchfusion',
    note: 'CMP/TEST can be fused with conditional branches.',
  },
  cldemote: {
    host: 'cldemote',
    note: 'Enable Cache Demote.',
  },
  clflushopt: {
    host: 'clflushopt',
    note: 'Flush A Cache Line Optimized.',
  },
  clwb: {
    host: 'clwb',
    note: 'Cache Line Write Back.',
  },
  clzero: {
    host: 'clzero',
    note: 'Enable Cache Line Zero.',
  },
  cmov: {
    host: 'cmov',
    note: 'Enable conditional move instructions.',
  },
  cx_16: {
    host: 'cx16',
    note: '64-bit with cmpxchg16b.',
  },
  cx_8: {
    host: 'cx8',
    note: 'Support CMPXCHG8B instructions.',
  },
  enqcmd: {
    host: 'enqcmd',
    note: 'Has ENQCMD instructions.',
  },
  ermsb: {
    host: 'ermsb',
    note: 'REP MOVS/STOS are fast.',
  },
  f_16_c: {
    host: 'f16c',
    note: 'Support 16-bit floating point conversion instructions.',
  },
  false_deps_lzcnt_tzcnt: {
    host: 'false-deps-lzcnt-tzcnt',
    note: 'LZCNT/TZCNT have a false dependency on dest register.',
  },
  false_deps_popcnt: {
    host: 'false-deps-popcnt',
    note: 'POPCNT has a false dependency on dest register.',
  },
  fast_11_bytenop: {
    host: 'fast-11bytenop',
    note: 'Target can quickly decode up to 11 byte NOPs.',
  },
  fast_15_bytenop: {
    host: 'fast-15bytenop',
    note: 'Target can quickly decode up to 15 byte NOPs.',
  },
  fast_7_bytenop: {
    host: 'fast-7bytenop',
    note: 'Target can quickly decode up to 7 byte NOPs.',
  },
  fast_bextr: {
    host: 'fast-bextr',
    note: 'Indicates that the BEXTR instruction is implemented as a single uop with good throughput.',
  },
  fast_gather: {
    host: 'fast-gather',
    note: 'Indicates if gather is reasonably fast.',
  },
  fast_hops: {
    host: 'fast-hops',
    note: 'Prefer horizontal vector math instructions (haddp, phsub, etc.) over normal vector instructions with shuffles.',
  },
  fast_lzcnt: {
    host: 'fast-lzcnt',
    note: 'LZCNT instructions are as fast as most simple integer ops.',
  },
  fast_scalar_fsqrt: {
    host: 'fast-scalar-fsqrt',
    note: 'Scalar SQRT is fast (disable Newton-Raphson).',
  },
  fast_scalar_shift_masks: {
    host: 'fast-scalar-shift-masks',
    note: 'Prefer a left/right scalar logical shift pair over a shift+and pair.',
  },
  fast_shld_rotate: {
    host: 'fast-shld-rotate',
    note: 'SHLD can be used as a faster rotate.',
  },
  fast_variable_shuffle: {
    host: 'fast-variable-shuffle',
    note: 'Shuffles with variable masks are fast.',
  },
  fast_vector_fsqrt: {
    host: 'fast-vector-fsqrt',
    note: 'Vector SQRT is fast (disable Newton-Raphson).',
  },
  fast_vector_shift_masks: {
    host: 'fast-vector-shift-masks',
    note: 'Prefer a left/right vector logical shift pair over a shift+and pair.',
  },
  fma: {
    host: 'fma',
    note: 'Enable three-operand fused multiple-add.',
  },
  fma_4: {
    host: 'fma4',
    note: 'Enable four-operand fused multiple-add.',
  },
  fsgsbase: {
    host: 'fsgsbase',
    note: 'Support FS/GS Base instructions.',
  },
  fxsr: {
    host: 'fxsr',
    note: 'Support fxsave/fxrestore instructions.',
  },
  gfni: {
    host: 'gfni',
    note: 'Enable Galois Field Arithmetic Instructions.',
  },
  idivl_to_divb: {
    host: 'idivl-to-divb',
    note: 'Use 8-bit divide for positive values less than 256.',
  },
  idivq_to_divl: {
    host: 'idivq-to-divl',
    note: 'Use 32-bit divide for positive values less than 2^32.',
  },
  invpcid: {
    host: 'invpcid',
    note: 'Invalidate Process-Context Identifier.',
  },
  lea_sp: {
    host: 'lea-sp',
    note: 'Use LEA for adjusting the stack pointer.',
  },
  lea_uses_ag: {
    host: 'lea-uses-ag',
    note: 'LEA instruction needs inputs at AG stage.',
  },
  lvi_cfi: {
    host: 'lvi-cfi',
    note: 'Prevent indirect calls/branches from using a memory operand, and precede all indirect calls/branches from a register with an LFENCE instruction to serialize control flow. Also decompose RET instructions into a POP+LFENCE+JMP sequence..',
  },
  lvi_load_hardening: {
    host: 'lvi-load-hardening',
    note: 'Insert LFENCE instructions to prevent data speculatively injected into loads from being used maliciously..',
  },
  lwp: {
    host: 'lwp',
    note: 'Enable LWP instructions.',
  },
  lzcnt: {
    host: 'lzcnt',
    note: 'Support LZCNT instruction.',
  },
  macrofusion: {
    host: 'macrofusion',
    note: 'Various instructions can be fused with conditional branches.',
  },
  merge_to_threeway_branch: {
    host: 'merge-to-threeway-branch',
    note: 'Merge branches to a three-way conditional branch.',
  },
  mmx: {
    host: 'mmx',
    note: 'Enable MMX instructions.',
  },
  movbe: {
    host: 'movbe',
    note: 'Support MOVBE instruction.',
  },
  movdir_64_b: {
    host: 'movdir64b',
    note: 'Support movdir64b instruction.',
  },
  movdiri: {
    host: 'movdiri',
    note: 'Support movdiri instruction.',
  },
  mpx: {
    host: 'mpx',
    note: 'Deprecated. Support MPX instructions.',
  },
  mwaitx: {
    host: 'mwaitx',
    note: 'Enable MONITORX/MWAITX timer functionality.',
  },
  nopl: {
    host: 'nopl',
    note: 'Enable NOPL instruction.',
  },
  pad_short_functions: {
    host: 'pad-short-functions',
    note: 'Pad short functions.',
  },
  pclmul: {
    host: 'pclmul',
    note: 'Enable packed carry-less multiplication instructions.',
  },
  pconfig: {
    host: 'pconfig',
    note: 'platform configuration instruction.',
  },
  pku: {
    host: 'pku',
    note: 'Enable protection keys.',
  },
  popcnt: {
    host: 'popcnt',
    note: 'Support POPCNT instruction.',
  },
  prefer_128_bit: {
    host: 'prefer-128-bit',
    note: 'Prefer 128-bit AVX instructions.',
  },
  prefer_256_bit: {
    host: 'prefer-256-bit',
    note: 'Prefer 256-bit AVX instructions.',
  },
  prefer_mask_registers: {
    host: 'prefer-mask-registers',
    note: 'Prefer AVX512 mask registers over PTEST/MOVMSK.',
  },
  prefetchwt_1: {
    host: 'prefetchwt1',
    note: 'Prefetch with Intent to Write and T1 Hint.',
  },
  prfchw: {
    host: 'prfchw',
    note: 'Support PRFCHW instructions.',
  },
  ptwrite: {
    host: 'ptwrite',
    note: 'Support ptwrite instruction.',
  },
  rdpid: {
    host: 'rdpid',
    note: 'Support RDPID instructions.',
  },
  rdrnd: {
    host: 'rdrnd',
    note: 'Support RDRAND instruction.',
  },
  rdseed: {
    host: 'rdseed',
    note: 'Support RDSEED instruction.',
  },
  retpoline: {
    host: 'retpoline',
    note: 'Remove speculation of indirect branches from the generated code, either by avoiding them entirely or lowering them with a speculation blocking construct.',
  },
  retpoline_external_thunk: {
    host: 'retpoline-external-thunk',
    note: 'When lowering an indirect call or branch using a `retpoline`, rely on the specified user provided thunk rather than emitting one ourselves. Only has effect when combined with some other retpoline feature.',
  },
  retpoline_indirect_branches: {
    host: 'retpoline-indirect-branches',
    note: 'Remove speculation of indirect branches from the generated code.',
  },
  retpoline_indirect_calls: {
    host: 'retpoline-indirect-calls',
    note: 'Remove speculation of indirect calls from the generated code.',
  },
  rtm: {
    host: 'rtm',
    note: 'Support RTM instructions.',
  },
  sahf: {
    host: 'sahf',
    note: 'Support LAHF and SAHF instructions.',
  },
  serialize: {
    host: 'serialize',
    note: 'Has serialize instruction.',
  },
  seses: {
    host: 'seses',
    note: 'Prevent speculative execution side channel timing attacks by inserting a speculation barrier before memory reads, memory writes, and conditional branches. Implies LVI Control Flow integrity..',
  },
  sgx: {
    host: 'sgx',
    note: 'Enable Software Guard Extensions.',
  },
  sha: {
    host: 'sha',
    note: 'Enable SHA instructions.',
  },
  shstk: {
    host: 'shstk',
    note: 'Support CET Shadow-Stack instructions.',
  },
  slow_3_ops_lea: {
    host: 'slow-3ops-lea',
    note: 'LEA instruction with 3 ops or certain registers is slow.',
  },
  slow_incdec: {
    host: 'slow-incdec',
    note: 'INC and DEC instructions are slower than ADD and SUB.',
  },
  slow_lea: {
    host: 'slow-lea',
    note: 'LEA instruction with certain arguments is slow.',
  },
  slow_pmaddwd: {
    host: 'slow-pmaddwd',
    note: 'PMADDWD is slower than PMULLD.',
  },
  slow_pmulld: {
    host: 'slow-pmulld',
    note: 'PMULLD instruction is slow.',
  },
  slow_shld: {
    host: 'slow-shld',
    note: 'SHLD instruction is slow.',
  },
  slow_two_mem_ops: {
    host: 'slow-two-mem-ops',
    note: 'Two memory operand instructions are slow.',
  },
  slow_unaligned_mem_16: {
    host: 'slow-unaligned-mem-16',
    note: 'Slow unaligned 16-byte memory access.',
  },
  slow_unaligned_mem_32: {
    host: 'slow-unaligned-mem-32',
    note: 'Slow unaligned 32-byte memory access.',
  },
  sse: {
    host: 'sse',
    note: 'Enable SSE instructions.',
  },
  sse_unaligned_mem: {
    host: 'sse-unaligned-mem',
    note: 'Allow unaligned memory operands with SSE instructions.',
  },
  sse_2: {
    host: 'sse2',
    note: 'Enable SSE2 instructions.',
  },
  sse_3: {
    host: 'sse3',
    note: 'Enable SSE3 instructions.',
  },
  sse_4_1: {
    host: 'sse4.1',
    note: 'Enable SSE 4.1 instructions.',
  },
  sse_4_2: {
    host: 'sse4.2',
    note: 'Enable SSE 4.2 instructions.',
  },
  sse_4_a: {
    host: 'sse4a',
    note: 'Support SSE 4a instructions.',
  },
  ssse_3: {
    host: 'ssse3',
    note: 'Enable SSSE3 instructions.',
  },
  tbm: {
    host: 'tbm',
    note: 'Enable TBM instructions.',
  },
  tsxldtrk: {
    host: 'tsxldtrk',
    note: 'Support TSXLDTRK instructions.',
  },
  use_glm_div_sqrt_costs: {
    host: 'use-glm-div-sqrt-costs',
    note: 'Use Goldmont specific floating point div/sqrt costs.',
  },
  vaes: {
    host: 'vaes',
    note: 'Promote selected AES instructions to AVX512/AVX registers.',
  },
  vpclmulqdq: {
    host: 'vpclmulqdq',
    note: 'Enable vpclmulqdq instructions.',
  },
  vzeroupper: {
    host: 'vzeroupper',
    note: 'Should insert vzeroupper instructions.',
  },
  waitpkg: {
    host: 'waitpkg',
    note: 'Wait and pause enhancements.',
  },
  wbnoinvd: {
    host: 'wbnoinvd',
    note: 'Write Back No Invalidate.',
  },
  x_87: {
    host: 'x87',
    note: 'Enable X87 float instructions.',
  },
  xop: {
    host: 'xop',
    note: 'Enable XOP instructions.',
  },
  xsave: {
    host: 'xsave',
    note: 'Support xsave instructions.',
  },
  xsavec: {
    host: 'xsavec',
    note: 'Support xsavec instructions.',
  },
  xsaveopt: {
    host: 'xsaveopt',
    note: 'Support xsaveopt instructions.',
  },
  xsaves: {
    host: 'xsaves',
    note: 'Support xsaves instructions.',
  },
}
