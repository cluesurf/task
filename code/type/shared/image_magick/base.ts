import {
  ImageMagickChannelContent,
  ImageMagickColorSpaceContent,
  ImageMagickCompressionContent,
  ImageMagickFormatContent,
} from '~/code/type/shared/image_magick/cast'

export const IMAGE_MAGICK_CHANNEL_CONTENT: ImageMagickChannelContent = {
  red: {
    head: 'Red',
  },
  green: {
    head: 'Green',
  },
  blue: {
    head: 'Blue',
  },
  alpha: {
    head: 'Alpha',
  },
  gray: {
    head: 'Gray',
  },
  cyan: {
    head: 'Cyan',
  },
  magenta: {
    head: 'Magenta',
  },
  yellow: {
    head: 'Yellow',
  },
  black: {
    head: 'Black',
  },
  opacity: {
    head: 'Opacity',
  },
  index: {
    head: 'Index',
  },
  rgb: {
    head: 'RGB',
  },
  rgba: {
    head: 'RGBA',
  },
  cmyk: {
    head: 'CMYK',
  },
  cmyka: {
    head: 'CMYKA',
  },
}

export const IMAGE_MAGICK_COLOR_SPACE_CONTENT: ImageMagickColorSpaceContent =
  {
    cmy: {
      head: 'CMY',
      note: 'Cyan, Magenta, Yellow',
    },
    cmyk: {
      head: 'CMYK',
      note: 'Cyan, Magenta, Yellow, Key (Black)',
    },
    gray: {
      head: 'Gray',
      note: 'Grayscale',
    },
    hcl: {
      head: 'HCL',
      note: 'Hue, Chroma, Lightness',
    },
    hclp: {
      head: 'HCLp',
      note: 'Hue, Chroma, Lightness (perceptual)',
    },
    hsb: {
      head: 'HSB',
      note: 'Hue, Saturation, Brightness',
    },
    hsi: {
      head: 'HSI',
      note: 'Hue, Saturation, Intensity',
    },
    hsl: {
      head: 'HSL',
      note: 'Hue, Saturation, Lightness',
    },
    hsv: {
      head: 'HSV',
      note: 'Hue, Saturation, Value',
    },
    hwb: {
      head: 'HWB',
      note: 'Hue, Whiteness, Blackness',
    },
    jzazbz: {
      head: 'Jzazbz',
      note: 'Jz, az, bz (a perceptually uniform colorspace)',
    },
    lab: {
      head: 'Lab',
      note: 'CIELAB (Lab color space)',
    },
    lchab: {
      head: 'LCHab',
      note: 'Lightness, Chroma, Hue (CIELAB)',
    },
    lchuv: {
      head: 'LCHuv',
      note: 'Lightness, Chroma, Hue (CIELUV)',
    },
    lms: {
      head: 'LMS',
      note: 'Long, Medium, Short (a colorspace based on human vision)',
    },
    log: {
      head: 'Log',
      note: 'Logarithmic color space',
    },
    luv: {
      head: 'Luv',
      note: 'CIELUV (Luv color space)',
    },
    ohta: {
      head: 'OHTA',
      note: 'Ohta color space',
    },
    oklab: {
      head: 'OkLab',
      note: 'OkLab color space',
    },
    oklch: {
      head: 'OkLCH',
      note: 'OkLCH color space',
    },
    rec601ycbcr: {
      head: 'Rec601YCbCr',
      note: 'ITU-R Rec. 601 YCbCr color space',
    },
    rec709ycbcr: {
      head: 'Rec709YCbCr',
      note: 'ITU-R Rec. 709 YCbCr color space',
    },
    rgb: {
      head: 'RGB',
      note: 'Red, Green, Blue',
    },
    scrgb: {
      head: 'scRGB',
      note: 'Standard-compliant RGB color space',
    },
    srgb: {
      head: 'sRGB',
      note: 'Standard Red Green Blue color space',
    },
    transparent: {
      head: 'Transparent',
      note: 'Transparent color',
    },
    xyy: {
      head: 'xyY',
      note: 'Chromaticity coordinates and luminance',
    },
    xyz: {
      head: 'XYZ',
      note: 'CIE 1931 XYZ color space',
    },
    ycbcr: {
      head: 'YCbCr',
      note: 'Luma (Y), Chroma Blue (Cb), Chroma Red (Cr)',
    },
    ycc: {
      head: 'YCC',
      note: "Y'CbCr color space",
    },
    ydbdr: {
      head: 'YDbDr',
      note: 'Luma (Y), Blue-Difference (Db), Red-Difference (Dr)',
    },
    yiq: {
      head: 'YIQ',
      note: 'Luma (Y), In-phase (I), Quadrature-phase (Q)',
    },
    ypbpr: {
      head: 'YPbPr',
      note: 'Luma (Y), Blue (Pb), Red (Pr)',
    },
    yuv: {
      head: 'YUV',
      note: 'Luma (Y), Chrominance U (Cb), Chrominance V (Cr)',
    },
    undefined: {
      head: 'Undefined',
    },
  }

export const IMAGE_MAGICK_COMPRESSION_CONTENT: ImageMagickCompressionContent =
  {
    none: {
      head: 'None',
    },
    bzip: {
      head: 'BZip',
    },
    fax: {
      head: 'Fax',
    },
    group4: {
      head: 'Group4',
    },
    jpeg: {
      head: 'JPEG',
    },
    jpeg2000: {
      head: 'JPEG2000',
    },
    lossless: {
      head: 'Lossless',
    },
    lzw: {
      head: 'LZW',
    },
    rle: {
      head: 'RLE',
    },
    zip: {
      head: 'Zip',
    },
  }

export const IMAGE_MAGICK_FORMAT_CONTENT: ImageMagickFormatContent = {
  '3fr': {
    head: '3FR',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Hasselblad CFV/H3D39II (0.21.2-Release)',
  },
  '3g2': {
    head: '3G2',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Media Container',
  },
  '3gp': {
    head: '3GP',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Media Container',
  },
  aai: {
    head: 'AAI',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'AAI Dune image',
  },
  ai: {
    head: 'AI',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: false,
    note: 'Adobe Illustrator CS2',
  },
  apng: {
    head: 'APNG',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'Animated Portable Network Graphics',
  },
  art: {
    head: 'ART',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'PFS: 1st Publisher Clip Art',
  },
  arw: {
    head: 'ARW',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Sony Alpha Raw Image Format (0.21.2-Release)',
  },
  ashlar: {
    head: 'ASHLAR',
    read: false,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Image sequence laid out in continuous irregular courses',
  },
  avi: {
    head: 'AVI',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Microsoft Audio/Visual Interleaved',
  },
  avif: {
    head: 'AVIF',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'AV1 Image File Format (1.17.6)',
  },
  avs: {
    head: 'AVS',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'AVS X image',
  },
  bayer: {
    head: 'BAYER',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw mosaiced samples',
  },
  bayera: {
    head: 'BAYERA',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw mosaiced and alpha samples',
  },
  bgr: {
    head: 'BGR',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw blue, green, and red samples',
  },
  bgra: {
    head: 'BGRA',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw blue, green, red, and alpha samples',
  },
  bgro: {
    head: 'BGRO',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw blue, green, red, and opacity samples',
  },
  bmp: {
    head: 'BMP',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Microsoft Windows bitmap image',
  },
  bmp2: {
    head: 'BMP2',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Microsoft Windows bitmap image (V2)',
  },
  bmp3: {
    head: 'BMP3',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Microsoft Windows bitmap image (V3)',
  },
  brf: {
    head: 'BRF',
    read: false,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'BRF ASCII Braille format',
  },
  cal: {
    head: 'CAL',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Continuous Acquisition and Life-cycle Support Type 1',
  },
  cals: {
    head: 'CALS',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Continuous Acquisition and Life-cycle Support Type 1',
  },
  canvas: {
    head: 'CANVAS',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Constant image uniform color',
  },
  caption: {
    head: 'CAPTION',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Caption',
  },
  cin: {
    head: 'CIN',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Cineon Image File',
  },
  cip: {
    head: 'CIP',
    read: false,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Cisco IP phone image format',
  },
  clip: {
    head: 'CLIP',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Image Clip Mask',
  },
  cmyk: {
    head: 'CMYK',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw cyan, magenta, yellow, and black samples',
  },
  cmyka: {
    head: 'CMYKA',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw cyan, magenta, yellow, black, and alpha samples',
  },
  cr2: {
    head: 'CR2',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Canon Digital Camera Raw Image Format (0.21.2-Release)',
  },
  cr3: {
    head: 'CR3',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Canon Digital Camera Raw Image Format (0.21.2-Release)',
  },
  crw: {
    head: 'CRW',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Canon Digital Camera Raw Image Format (0.21.2-Release)',
  },
  cube: {
    head: 'CUBE',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Cube LUT',
  },
  cur: {
    head: 'CUR',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Microsoft icon',
  },
  cut: {
    head: 'CUT',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'DR Halo',
  },
  data: {
    head: 'DATA',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Base64-encoded inline images',
  },
  dcm: {
    head: 'DCM',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Digital Imaging and Communications in Medicine image',
  },
  dcr: {
    head: 'DCR',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Kodak Digital Camera Raw Image File (0.21.2-Release)',
  },
  dcraw: {
    head: 'DCRAW',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Raw Photo Decoder (dcraw) (0.21.2-Release)',
  },
  dcx: {
    head: 'DCX',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'ZSoft IBM PC multi-page Paintbrush',
  },
  dds: {
    head: 'DDS',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Microsoft DirectDraw Surface',
  },
  dfont: {
    head: 'DFONT',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Multi-face font package (Freetype 2.13.2)',
  },
  dng: {
    head: 'DNG',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Digital Negative (0.21.2-Release)',
  },
  dot: {
    head: 'DOT',
    read: false,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Graphviz',
  },
  dpx: {
    head: 'DPX',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'SMPTE 268M-2003 (DPX 2.0)',
  },
  dxt1: {
    head: 'DXT1',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Microsoft DirectDraw Surface',
  },
  dxt5: {
    head: 'DXT5',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Microsoft DirectDraw Surface',
  },
  epdf: {
    head: 'EPDF',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: false,
    note: 'Encapsulated Portable Document Format',
  },
  epi: {
    head: 'EPI',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: false,
    note: 'Encapsulated PostScript Interchange format',
  },
  eps: {
    head: 'EPS',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: false,
    note: 'Encapsulated PostScript',
  },
  eps2: {
    head: 'EPS2',
    read: false,
    write: true,
    multiple: false,
    supportsBlob: false,
    note: 'Level II Encapsulated PostScript',
  },
  eps3: {
    head: 'EPS3',
    read: false,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'Level III Encapsulated PostScript',
  },
  epsf: {
    head: 'EPSF',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: false,
    note: 'Encapsulated PostScript',
  },
  epsi: {
    head: 'EPSI',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: false,
    note: 'Encapsulated PostScript Interchange format',
  },
  ept: {
    head: 'EPT',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: false,
    note: 'Encapsulated PostScript with TIFF preview',
  },
  ept2: {
    head: 'EPT2',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: false,
    note: 'Encapsulated PostScript Level II with TIFF preview',
  },
  ept3: {
    head: 'EPT3',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'Encapsulated PostScript Level III with TIFF preview',
  },
  erf: {
    head: 'ERF',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Epson RAW Format (0.21.2-Release)',
  },
  exr: {
    head: 'EXR',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: false,
    note: 'High Dynamic-range (HDR) (OpenEXR 3.2.1)',
  },
  farbfeld: {
    head: 'FARBFELD',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Farbfeld',
  },
  fax: {
    head: 'FAX',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Group 3 FAX',
  },
  ff: {
    head: 'FF',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Farbfeld',
  },
  file: {
    head: 'FILE',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Uniform Resource Locator (file://)',
  },
  fits: {
    head: 'FITS',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Flexible Image Transport System',
  },
  fl32: {
    head: 'FL32',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'FilmLight',
  },
  flv: {
    head: 'FLV',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'Flash Video Stream',
  },
  fractal: {
    head: 'FRACTAL',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Plasma fractal image',
  },
  ftp: {
    head: 'FTP',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Uniform Resource Locator (ftp://)',
  },
  fts: {
    head: 'FTS',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Flexible Image Transport System',
  },
  ftxt: {
    head: 'FTXT',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Formatted text image',
  },
  g3: {
    head: 'G3',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Group 3 FAX',
  },
  g4: {
    head: 'G4',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Group 4 FAX',
  },
  gif: {
    head: 'GIF',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'CompuServe graphics interchange format',
  },
  gif87: {
    head: 'GIF87',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'CompuServe graphics interchange format (version 87a)',
  },
  gradient: {
    head: 'GRADIENT',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'radial passing from one shade to another',
  },
  gray: {
    head: 'GRAY',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw gray samples',
  },
  graya: {
    head: 'GRAYA',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw gray and alpha samples',
  },
  group4: {
    head: 'GROUP4',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Raw CCITT Group4',
  },
  hald: {
    head: 'HALD',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Identity Hald color lookup table image',
  },
  hdr: {
    head: 'HDR',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Radiance RGBE image format',
  },
  heic: {
    head: 'HEIC',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'High Efficiency Image Format (1.17.6)',
  },
  heif: {
    head: 'HEIF',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'High Efficiency Image Format (1.17.6)',
  },
  histogram: {
    head: 'HISTOGRAM',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'of the image',
  },
  hrz: {
    head: 'HRZ',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Slow Scan TeleVision',
  },
  htm: {
    head: 'HTM',
    read: false,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Hypertext Markup Language and a client-side image map',
  },
  html: {
    head: 'HTML',
    read: false,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Hypertext Markup Language and a client-side image map',
  },
  http: {
    head: 'HTTP',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Uniform Resource Locator (http://)',
  },
  https: {
    head: 'HTTPS',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Uniform Resource Locator (https://)',
  },
  icb: {
    head: 'ICB',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Truevision Targa image',
  },
  ico: {
    head: 'ICO',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Microsoft icon',
  },
  icon: {
    head: 'ICON',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Microsoft icon',
  },
  iiq: {
    head: 'IIQ',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Phase One Raw Image Format (0.21.2-Release)',
  },
  info: {
    head: 'INFO',
    read: false,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'The image format and characteristics',
  },
  inline: {
    head: 'INLINE',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Base64-encoded inline images',
  },
  ipl: {
    head: 'IPL',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'IPL Image Sequence',
  },
  isobrl: {
    head: 'ISOBRL',
    read: false,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'ISO/TR 11548-1 format',
  },
  isobrl6: {
    head: 'ISOBRL6',
    read: false,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'ISO/TR 11548-1 format 6dot',
  },
  j2c: {
    head: 'J2C',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'JPEG-2000 Code Stream Syntax (2.5.0)',
  },
  j2k: {
    head: 'J2K',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'JPEG-2000 Code Stream Syntax (2.5.0)',
  },
  jng: {
    head: 'JNG',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'JPEG Network Graphics',
  },
  jnx: {
    head: 'JNX',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Garmin tile format',
  },
  jp2: {
    head: 'JP2',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'JPEG-2000 File Format Syntax (2.5.0)',
  },
  jpc: {
    head: 'JPC',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'JPEG-2000 Code Stream Syntax (2.5.0)',
  },
  jpe: {
    head: 'JPE',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Joint Photographic Experts Group JFIF format (libjpeg-turbo 3.0.0)',
  },
  jpeg: {
    head: 'JPEG',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Joint Photographic Experts Group JFIF format (libjpeg-turbo 3.0.0)',
  },
  jpg: {
    head: 'JPG',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Joint Photographic Experts Group JFIF format (libjpeg-turbo 3.0.0)',
  },
  jpm: {
    head: 'JPM',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'JPEG-2000 File Format Syntax (2.5.0)',
  },
  jps: {
    head: 'JPS',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Joint Photographic Experts Group JFIF format (libjpeg-turbo 3.0.0)',
  },
  jpt: {
    head: 'JPT',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'JPEG-2000 File Format Syntax (2.5.0)',
  },
  json: {
    head: 'JSON',
    read: false,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'The image format and characteristics',
  },
  jxl: {
    head: 'JXL',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'JPEG XL (ISO/IEC 18181) (libjxl 0.9.0)',
  },
  k25: {
    head: 'K25',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Kodak Digital Camera Raw Image Format (0.21.2-Release)',
  },
  kdc: {
    head: 'KDC',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Kodak Digital Camera Raw Image Format (0.21.2-Release)',
  },
  label: {
    head: 'LABEL',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Image label',
  },
  m2v: {
    head: 'M2V',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'MPEG Video Stream',
  },
  m4v: {
    head: 'M4V',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'Raw VIDEO-4 Video',
  },
  mac: {
    head: 'MAC',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'MAC Paint',
  },
  map: {
    head: 'MAP',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Colormap intensities and indices',
  },
  mask: {
    head: 'MASK',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Image Clip Mask',
  },
  mat: {
    head: 'MAT',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'MATLAB level 5 image format',
  },
  matte: {
    head: 'MATTE',
    read: false,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'MATTE format',
  },
  mef: {
    head: 'MEF',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Mamiya Raw Image File (0.21.2-Release)',
  },
  miff: {
    head: 'MIFF',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Magick Image File Format',
  },
  mkv: {
    head: 'MKV',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'Multimedia Container',
  },
  mng: {
    head: 'MNG',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Multiple-image Network Graphics (libpng 1.6.40)',
  },
  mono: {
    head: 'MONO',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Raw bi-level bitmap',
  },
  mov: {
    head: 'MOV',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'MPEG Video Stream',
  },
  mp4: {
    head: 'MP4',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'VIDEO-4 Video Stream',
  },
  mpc: {
    head: 'MPC',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Magick Pixel Cache image format',
  },
  mpeg: {
    head: 'MPEG',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'MPEG Video Stream',
  },
  mpg: {
    head: 'MPG',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'MPEG Video Stream',
  },
  mpo: {
    head: 'MPO',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Joint Photographic Experts Group JFIF format (libjpeg-turbo 3.0.0)',
  },
  mrw: {
    head: 'MRW',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Sony (Minolta) Raw Image File (0.21.2-Release)',
  },
  msl: {
    head: 'MSL',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Magick Scripting Language',
  },
  msvg: {
    head: 'MSVG',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: "ImageMagick's own SVG internal renderer",
  },
  mtv: {
    head: 'MTV',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'MTV Raytracing image format',
  },
  mvg: {
    head: 'MVG',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Magick Vector Graphics',
  },
  nef: {
    head: 'NEF',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Nikon Digital SLR Camera Raw Image File (0.21.2-Release)',
  },
  nrw: {
    head: 'NRW',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Nikon Digital SLR Camera Raw Image File (0.21.2-Release)',
  },
  null: {
    head: 'NULL',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Constant image of uniform color',
  },
  ora: {
    head: 'ORA',
    read: false,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'OpenRaster format',
  },
  orf: {
    head: 'ORF',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Olympus Digital Camera Raw Image File (0.21.2-Release)',
  },
  otb: {
    head: 'OTB',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'On-the-air bitmap',
  },
  otf: {
    head: 'OTF',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Open Type font (Freetype 2.13.2)',
  },
  pal: {
    head: 'PAL',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: '16bit/pixel interleaved YUV',
  },
  palm: {
    head: 'PALM',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Palm pixmap',
  },
  pam: {
    head: 'PAM',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Common 2-dimensional bitmap format',
  },
  pango: {
    head: 'PANGO',
    read: false,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Pango Markup Language',
  },
  pattern: {
    head: 'PATTERN',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Predefined pattern',
  },
  pbm: {
    head: 'PBM',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Portable bitmap format (black and white)',
  },
  pcd: {
    head: 'PCD',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Photo CD',
  },
  pcds: {
    head: 'PCDS',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Photo CD',
  },
  pcl: {
    head: 'PCL',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'Printer Control Language',
  },
  pct: {
    head: 'PCT',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Apple Macintosh QuickDraw/PICT',
  },
  pcx: {
    head: 'PCX',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'ZSoft IBM PC Paintbrush',
  },
  pdb: {
    head: 'PDB',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Palm Database ImageViewer Format',
  },
  pdf: {
    head: 'PDF',
    read: false,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Personal Organizer',
  },
  pdfa: {
    head: 'PDFA',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'Portable Document Archive Format',
  },
  pef: {
    head: 'PEF',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Pentax Electronic File (0.21.2-Release)',
  },
  pes: {
    head: 'PES',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Embrid Embroidery Format',
  },
  pfa: {
    head: 'PFA',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Postscript Type 1 font (ASCII) (Freetype 2.13.2)',
  },
  pfb: {
    head: 'PFB',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Postscript Type 1 font (binary) (Freetype 2.13.2)',
  },
  pfm: {
    head: 'PFM',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Portable float format',
  },
  pgm: {
    head: 'PGM',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Portable graymap format (gray scale)',
  },
  pgx: {
    head: 'PGX',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'JPEG 2000 uncompressed format',
  },
  phm: {
    head: 'PHM',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Portable half float format',
  },
  picon: {
    head: 'PICON',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Personal Icon',
  },
  pict: {
    head: 'PICT',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Apple Macintosh QuickDraw/PICT',
  },
  pix: {
    head: 'PIX',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Alias/Wavefront RLE image format',
  },
  pjpeg: {
    head: 'PJPEG',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Joint Photographic Experts Group JFIF format (libjpeg-turbo 3.0.0)',
  },
  plasma: {
    head: 'PLASMA',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Plasma fractal image',
  },
  png: {
    head: 'PNG',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Portable Network Graphics (libpng 1.6.40)',
  },
  png00: {
    head: 'PNG00',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'PNG inheriting bit-depth, color-type from original, if possible',
  },
  png24: {
    head: 'PNG24',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'opaque or binary transparent 24-bit RGB',
  },
  png32: {
    head: 'PNG32',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'opaque or transparent 32-bit RGBA',
  },
  png48: {
    head: 'PNG48',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'opaque or binary transparent 48-bit RGB',
  },
  png64: {
    head: 'PNG64',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'opaque or transparent 64-bit RGBA',
  },
  png8: {
    head: 'PNG8',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: '8-bit indexed with optional binary transparency',
  },
  pnm: {
    head: 'PNM',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Portable anymap',
  },
  ppm: {
    head: 'PPM',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Portable pixmap format (color)',
  },
  ps: {
    head: 'PS',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'PostScript',
  },
  ps2: {
    head: 'PS2',
    read: false,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'Level II PostScript',
  },
  ps3: {
    head: 'PS3',
    read: false,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'Level III PostScript',
  },
  psb: {
    head: 'PSB',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Adobe Large Document Format',
  },
  psd: {
    head: 'PSD',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Adobe Photoshop bitmap',
  },
  ptif: {
    head: 'PTIF',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Pyramid encoded TIFF',
  },
  pwp: {
    head: 'PWP',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Seattle Film Works',
  },
  qoi: {
    head: 'QOI',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Quite OK image format',
  },
  raf: {
    head: 'RAF',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Fuji CCD-RAW Graphic File (0.21.2-Release)',
  },
  ras: {
    head: 'RAS',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'SUN Rasterfile',
  },
  raw: {
    head: 'RAW',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Raw (0.21.2-Release)',
  },
  rgb: {
    head: 'RGB',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw red, green, and blue samples',
  },
  rgb565: {
    head: 'RGB565',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Raw red, green, blue samples in 565 format',
  },
  rgba: {
    head: 'RGBA',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw red, green, blue, and alpha samples',
  },
  rgbo: {
    head: 'RGBO',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw red, green, blue, and opacity samples',
  },
  rgf: {
    head: 'RGF',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'LEGO Mindstorms EV3 Robot Graphic Format (black and white)',
  },
  rla: {
    head: 'RLA',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Alias/Wavefront image',
  },
  rle: {
    head: 'RLE',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Utah Run length encoded image',
  },
  rmf: {
    head: 'RMF',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Raw Media Format (0.21.2-Release)',
  },
  rw2: {
    head: 'RW2',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Panasonic Lumix Raw Image (0.21.2-Release)',
  },
  scr: {
    head: 'SCR',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'ZX-Spectrum SCREEN$',
  },
  sct: {
    head: 'SCT',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Scitex HandShake',
  },
  sfw: {
    head: 'SFW',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Seattle Film Works',
  },
  sgi: {
    head: 'SGI',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Irix RGB image',
  },
  shtml: {
    head: 'SHTML',
    read: false,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Hypertext Markup Language and a client-side image map',
  },
  six: {
    head: 'SIX',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'DEC SIXEL Graphics Format',
  },
  sixel: {
    head: 'SIXEL',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'DEC SIXEL Graphics Format',
  },
  txt: {
    head: 'TXT',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Text',
  },
  sr2: {
    head: 'SR2',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Sony Raw Format 2 (0.21.2-Release)',
  },
  srf: {
    head: 'SRF',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Sony Raw Format (0.21.2-Release)',
  },
  stegano: {
    head: 'STEGANO',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Steganographic image',
  },
  strimg: {
    head: 'STRIMG',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'String to image and back',
  },
  sun: {
    head: 'SUN',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'SUN Rasterfile',
  },
  svg: {
    head: 'SVG',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Scalable Vector Graphics (XML 2.9.13)',
  },
  svgz: {
    head: 'SVGZ',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Compressed Scalable Vector Graphics (XML 2.9.13)',
  },
  text: {
    head: 'TEXT',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Text',
  },
  tga: {
    head: 'TGA',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Truevision Targa image',
  },
  thumbnail: {
    head: 'THUMBNAIL',
    read: false,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Profile Thumbnail',
  },
  tiff: {
    head: 'TIFF',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Tagged Image File Format (LIBTIFF, Version 4.6.0)',
  },
  tiff64: {
    head: 'TIFF64',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Tagged Image File Format (64-bit) (LIBTIFF, Version 4.6.0)',
  },
  tile: {
    head: 'TILE',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Tile image with a texture',
  },
  tim: {
    head: 'TIM',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'PSX TIM',
  },
  tm2: {
    head: 'TM2',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'PS2 TIM2',
  },
  ttc: {
    head: 'TTC',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'TrueType font collection (Freetype 2.13.2)',
  },
  ttf: {
    head: 'TTF',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'TrueType font (Freetype 2.13.2)',
  },
  ubrl: {
    head: 'UBRL',
    read: false,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Unicode Text format',
  },
  ubrl6: {
    head: 'UBRL6',
    read: false,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Unicode Text format 6dot',
  },
  uil: {
    head: 'UIL',
    read: false,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'X-Motif UIL table',
  },
  uyvy: {
    head: 'UYVY',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: '16bit/pixel interleaved YUV',
  },
  vda: {
    head: 'VDA',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Truevision Targa image',
  },
  vicar: {
    head: 'VICAR',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Video Image Communication And Retrieval',
  },
  vid: {
    head: 'VID',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Visual Image Directory',
  },
  viff: {
    head: 'VIFF',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Khoros Visualization image',
  },
  vips: {
    head: 'VIPS',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'VIPS image',
  },
  vst: {
    head: 'VST',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Truevision Targa image',
  },
  wbmp: {
    head: 'WBMP',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Wireless Bitmap (level 0) image',
  },
  webm: {
    head: 'WEBM',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'Open Web Media',
  },
  webp: {
    head: 'WEBP',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'WebP Image Format (libwebp 1.3.2 [020F])',
  },
  wmv: {
    head: 'WMV',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'Windows Media Video',
  },
  wpg: {
    head: 'WPG',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'Word Perfect Graphics',
  },
  x3f: {
    head: 'X3F',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Sigma Camera RAW Picture File (0.21.2-Release)',
  },
  xbm: {
    head: 'XBM',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'X Windows system bitmap (black and white)',
  },
  xc: {
    head: 'XC',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'Constant image uniform color',
  },
  xcf: {
    head: 'XCF',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: true,
    note: 'GIMP image',
  },
  xpm: {
    head: 'XPM',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'X Windows system pixmap (color)',
  },
  xps: {
    head: 'XPS',
    read: true,
    write: false,
    multiple: false,
    supportsBlob: false,
    note: 'Microsoft XML Paper Specification',
  },
  xv: {
    head: 'XV',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Khoros Visualization image',
  },
  yaml: {
    head: 'YAML',
    read: false,
    write: true,
    multiple: true,
    supportsBlob: false,
    note: 'The image format and characteristics',
  },
  ycbcr: {
    head: 'YCbCr',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw Y, Cb, and Cr samples',
  },
  ycbcra: {
    head: 'YCbCrA',
    read: true,
    write: true,
    multiple: true,
    supportsBlob: true,
    note: 'Raw Y, Cb, Cr, and alpha samples',
  },
  yuv: {
    head: 'YUV',
    read: true,
    write: true,
    multiple: false,
    supportsBlob: true,
    note: 'CCIR 601 4:1:1 or 4:2:2',
  },
}
